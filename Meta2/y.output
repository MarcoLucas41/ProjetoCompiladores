Terminals which are not used

   RESERVED


Rules never reduced

   42 OPTIONAL5: /* empty */


State 34 conflicts: 1 shift/reduce
State 42 conflicts: 1 shift/reduce
State 54 conflicts: 13 shift/reduce
State 55 conflicts: 18 shift/reduce
State 56 conflicts: 13 shift/reduce
State 79 conflicts: 20 reduce/reduce
State 94 conflicts: 1 shift/reduce
State 97 conflicts: 18 shift/reduce
State 98 conflicts: 18 shift/reduce
State 99 conflicts: 18 shift/reduce
State 100 conflicts: 18 shift/reduce
State 101 conflicts: 18 shift/reduce
State 102 conflicts: 13 shift/reduce
State 103 conflicts: 18 shift/reduce
State 104 conflicts: 18 shift/reduce
State 105 conflicts: 18 shift/reduce
State 106 conflicts: 13 shift/reduce
State 107 conflicts: 18 shift/reduce
State 108 conflicts: 18 shift/reduce
State 109 conflicts: 13 shift/reduce
State 110 conflicts: 18 shift/reduce
State 111 conflicts: 18 shift/reduce
State 112 conflicts: 18 shift/reduce
State 113 conflicts: 13 shift/reduce
State 114 conflicts: 13 shift/reduce
State 131 conflicts: 1 shift/reduce, 21 reduce/reduce


Grammar

    0 $accept: FunctionsAndDeclarations $end

    1 FunctionsAndDeclarations: FunctionsAndDeclarations FunctionDefinition
    2                         | FunctionsAndDeclarations FunctionDeclaration
    3                         | FunctionsAndDeclarations Declaration
    4                         | FunctionDefinition
    5                         | FunctionDeclaration
    6                         | Declaration

    7 FunctionDefinition: TypeSpec FunctionDeclarator FunctionBody

    8 FunctionBody: LBRACE RBRACE
    9             | LBRACE DeclarationsAndStatements RBRACE

   10 DeclarationsAndStatements: Statement DeclarationsAndStatements
   11                          | Declaration DeclarationsAndStatements
   12                          | Statement
   13                          | Declaration

   14 FunctionDeclaration: TypeSpec FunctionDeclarator SEMI

   15 FunctionDeclarator: IDENTIFIER LPAR ParameterList RPAR

   16 ParameterList: ParameterList COMMA ParameterDeclaration
   17              | ParameterDeclaration

   18 ParameterDeclaration: TypeSpec IDENTIFIER
   19                     | TypeSpec

   20 Declaration: TypeSpec Declarator ZEROPLUS1 SEMI
   21            | error SEMI

   22 ZEROPLUS1: ZEROPLUS1 COMMA Declarator
   23          | /* empty */

   24 TypeSpec: CHAR
   25         | INT
   26         | VOID
   27         | SHORT
   28         | DOUBLE

   29 Declarator: IDENTIFIER ASSIGN Expr
   30           | IDENTIFIER

   31 Statement: OPTIONAL4 SEMI
   32          | error SEMI
   33          | LBRACE ZEROPLUS2 RBRACE
   34          | LBRACE error RBRACE
   35          | IF LPAR Expr RPAR Statement OPTIONAL5
   36          | IF LPAR Expr RPAR Statement
   37          | WHILE LPAR Expr RPAR Statement
   38          | RETURN OPTIONAL4 SEMI

   39 OPTIONAL4: Expr
   40          | /* empty */

   41 OPTIONAL5: ELSE Statement
   42          | /* empty */

   43 ZEROPLUS2: ZEROPLUS2 Statement
   44          | /* empty */

   45 Expr: Expr ASSIGN Expr
   46     | Expr COMMA Expr
   47     | Expr PLUS Expr
   48     | Expr MINUS Expr
   49     | Expr MUL Expr
   50     | Expr DIV Expr
   51     | Expr MOD Expr
   52     | Expr OR Expr
   53     | Expr AND Expr
   54     | Expr BITWISEAND Expr
   55     | Expr BITWISEOR Expr
   56     | Expr BITWISEXOR Expr
   57     | Expr EQ Expr
   58     | Expr NE Expr
   59     | Expr LE Expr
   60     | Expr GE Expr
   61     | Expr LT Expr
   62     | Expr GT Expr
   63     | PLUS Expr
   64     | MINUS Expr
   65     | NOT Expr
   66     | IDENTIFIER LPAR error RPAR
   67     | IDENTIFIER LPAR OPTIONAL6 RPAR
   68     | IDENTIFIER
   69     | NATURAL
   70     | CHRLITS
   71     | DECIMAL
   72     | LPAR Expr RPAR
   73     | LPAR error RPAR

   74 OPTIONAL6: ZEROPLUS3
   75          | /* empty */

   76 ZEROPLUS3: ZEROPLUS3 COMMA Expr
   77          | Expr


Terminals, with rules where they appear

$end (0) 0
error (256) 21 32 34 66 73
CHAR (258) 24
ELSE (259) 41
WHILE (260) 37
IF (261) 35 36
INT (262) 25
SHORT (263) 27
DOUBLE (264) 28
RETURN (265) 38
VOID (266) 26
BITWISEAND (267) 54
BITWISEOR (268) 55
BITWISEXOR (269) 56
AND (270) 53
ASSIGN (271) 29 45
MUL (272) 49
EQ (273) 57
GE (274) 60
GT (275) 62
DIV (276) 50
LBRACE (277) 8 9 33 34
LE (278) 59
LPAR (279) 15 35 36 37 66 67 72 73
LT (280) 61
MINUS (281) 48 64
MOD (282) 51
NE (283) 58
NOT (284) 65
OR (285) 52
PLUS (286) 47 63
RBRACE (287) 8 9 33 34
RPAR (288) 15 35 36 37 66 67 72 73
SEMI (289) 14 20 21 31 32 38
CHRLITS (290) 70
IDENTIFIER (291) 15 18 29 30 66 67 68
NATURAL (292) 69
DECIMAL (293) 71
RESERVED (294)
LOW (295)
COMMA (296) 16 22 46 76


Nonterminals, with rules where they appear

$accept (42)
    on left: 0
FunctionsAndDeclarations (43)
    on left: 1 2 3 4 5 6, on right: 0 1 2 3
FunctionDefinition (44)
    on left: 7, on right: 1 4
FunctionBody (45)
    on left: 8 9, on right: 7
DeclarationsAndStatements (46)
    on left: 10 11 12 13, on right: 9 10 11
FunctionDeclaration (47)
    on left: 14, on right: 2 5
FunctionDeclarator (48)
    on left: 15, on right: 7 14
ParameterList (49)
    on left: 16 17, on right: 15 16
ParameterDeclaration (50)
    on left: 18 19, on right: 16 17
Declaration (51)
    on left: 20 21, on right: 3 6 11 13
ZEROPLUS1 (52)
    on left: 22 23, on right: 20 22
TypeSpec (53)
    on left: 24 25 26 27 28, on right: 7 14 18 19 20
Declarator (54)
    on left: 29 30, on right: 20 22
Statement (55)
    on left: 31 32 33 34 35 36 37 38, on right: 10 12 35 36 37 41 43
OPTIONAL4 (56)
    on left: 39 40, on right: 31 38
OPTIONAL5 (57)
    on left: 41 42, on right: 35
ZEROPLUS2 (58)
    on left: 43 44, on right: 33 43
Expr (59)
    on left: 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62
    63 64 65 66 67 68 69 70 71 72 73, on right: 29 35 36 37 39 45 46
    47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 72 76
    77
OPTIONAL6 (60)
    on left: 74 75, on right: 67
ZEROPLUS3 (61)
    on left: 76 77, on right: 74 76


state 0

    0 $accept: . FunctionsAndDeclarations $end
    1 FunctionsAndDeclarations: . FunctionsAndDeclarations FunctionDefinition
    2                         | . FunctionsAndDeclarations FunctionDeclaration
    3                         | . FunctionsAndDeclarations Declaration
    4                         | . FunctionDefinition
    5                         | . FunctionDeclaration
    6                         | . Declaration
    7 FunctionDefinition: . TypeSpec FunctionDeclarator FunctionBody
   14 FunctionDeclaration: . TypeSpec FunctionDeclarator SEMI
   20 Declaration: . TypeSpec Declarator ZEROPLUS1 SEMI
   21            | . error SEMI
   24 TypeSpec: . CHAR
   25         | . INT
   26         | . VOID
   27         | . SHORT
   28         | . DOUBLE

    error   shift, and go to state 1
    CHAR    shift, and go to state 2
    INT     shift, and go to state 3
    SHORT   shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6

    FunctionsAndDeclarations  go to state 7
    FunctionDefinition        go to state 8
    FunctionDeclaration       go to state 9
    Declaration               go to state 10
    TypeSpec                  go to state 11


state 1

   21 Declaration: error . SEMI

    SEMI  shift, and go to state 12


state 2

   24 TypeSpec: CHAR .

    $default  reduce using rule 24 (TypeSpec)


state 3

   25 TypeSpec: INT .

    $default  reduce using rule 25 (TypeSpec)


state 4

   27 TypeSpec: SHORT .

    $default  reduce using rule 27 (TypeSpec)


state 5

   28 TypeSpec: DOUBLE .

    $default  reduce using rule 28 (TypeSpec)


state 6

   26 TypeSpec: VOID .

    $default  reduce using rule 26 (TypeSpec)


state 7

    0 $accept: FunctionsAndDeclarations . $end
    1 FunctionsAndDeclarations: FunctionsAndDeclarations . FunctionDefinition
    2                         | FunctionsAndDeclarations . FunctionDeclaration
    3                         | FunctionsAndDeclarations . Declaration
    7 FunctionDefinition: . TypeSpec FunctionDeclarator FunctionBody
   14 FunctionDeclaration: . TypeSpec FunctionDeclarator SEMI
   20 Declaration: . TypeSpec Declarator ZEROPLUS1 SEMI
   21            | . error SEMI
   24 TypeSpec: . CHAR
   25         | . INT
   26         | . VOID
   27         | . SHORT
   28         | . DOUBLE

    $end    shift, and go to state 13
    error   shift, and go to state 1
    CHAR    shift, and go to state 2
    INT     shift, and go to state 3
    SHORT   shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6

    FunctionDefinition   go to state 14
    FunctionDeclaration  go to state 15
    Declaration          go to state 16
    TypeSpec             go to state 11


state 8

    4 FunctionsAndDeclarations: FunctionDefinition .

    $default  reduce using rule 4 (FunctionsAndDeclarations)


state 9

    5 FunctionsAndDeclarations: FunctionDeclaration .

    $default  reduce using rule 5 (FunctionsAndDeclarations)


state 10

    6 FunctionsAndDeclarations: Declaration .

    $default  reduce using rule 6 (FunctionsAndDeclarations)


state 11

    7 FunctionDefinition: TypeSpec . FunctionDeclarator FunctionBody
   14 FunctionDeclaration: TypeSpec . FunctionDeclarator SEMI
   15 FunctionDeclarator: . IDENTIFIER LPAR ParameterList RPAR
   20 Declaration: TypeSpec . Declarator ZEROPLUS1 SEMI
   29 Declarator: . IDENTIFIER ASSIGN Expr
   30           | . IDENTIFIER

    IDENTIFIER  shift, and go to state 17

    FunctionDeclarator  go to state 18
    Declarator          go to state 19


state 12

   21 Declaration: error SEMI .

    $default  reduce using rule 21 (Declaration)


state 13

    0 $accept: FunctionsAndDeclarations $end .

    $default  accept


state 14

    1 FunctionsAndDeclarations: FunctionsAndDeclarations FunctionDefinition .

    $default  reduce using rule 1 (FunctionsAndDeclarations)


state 15

    2 FunctionsAndDeclarations: FunctionsAndDeclarations FunctionDeclaration .

    $default  reduce using rule 2 (FunctionsAndDeclarations)


state 16

    3 FunctionsAndDeclarations: FunctionsAndDeclarations Declaration .

    $default  reduce using rule 3 (FunctionsAndDeclarations)


state 17

   15 FunctionDeclarator: IDENTIFIER . LPAR ParameterList RPAR
   29 Declarator: IDENTIFIER . ASSIGN Expr
   30           | IDENTIFIER .  [SEMI, COMMA]

    ASSIGN  shift, and go to state 20
    LPAR    shift, and go to state 21

    $default  reduce using rule 30 (Declarator)


state 18

    7 FunctionDefinition: TypeSpec FunctionDeclarator . FunctionBody
    8 FunctionBody: . LBRACE RBRACE
    9             | . LBRACE DeclarationsAndStatements RBRACE
   14 FunctionDeclaration: TypeSpec FunctionDeclarator . SEMI

    LBRACE  shift, and go to state 22
    SEMI    shift, and go to state 23

    FunctionBody  go to state 24


state 19

   20 Declaration: TypeSpec Declarator . ZEROPLUS1 SEMI
   22 ZEROPLUS1: . ZEROPLUS1 COMMA Declarator
   23          | .

    $default  reduce using rule 23 (ZEROPLUS1)

    ZEROPLUS1  go to state 25


state 20

   29 Declarator: IDENTIFIER ASSIGN . Expr
   45 Expr: . Expr ASSIGN Expr
   46     | . Expr COMMA Expr
   47     | . Expr PLUS Expr
   48     | . Expr MINUS Expr
   49     | . Expr MUL Expr
   50     | . Expr DIV Expr
   51     | . Expr MOD Expr
   52     | . Expr OR Expr
   53     | . Expr AND Expr
   54     | . Expr BITWISEAND Expr
   55     | . Expr BITWISEOR Expr
   56     | . Expr BITWISEXOR Expr
   57     | . Expr EQ Expr
   58     | . Expr NE Expr
   59     | . Expr LE Expr
   60     | . Expr GE Expr
   61     | . Expr LT Expr
   62     | . Expr GT Expr
   63     | . PLUS Expr
   64     | . MINUS Expr
   65     | . NOT Expr
   66     | . IDENTIFIER LPAR error RPAR
   67     | . IDENTIFIER LPAR OPTIONAL6 RPAR
   68     | . IDENTIFIER
   69     | . NATURAL
   70     | . CHRLITS
   71     | . DECIMAL
   72     | . LPAR Expr RPAR
   73     | . LPAR error RPAR

    LPAR        shift, and go to state 26
    MINUS       shift, and go to state 27
    NOT         shift, and go to state 28
    PLUS        shift, and go to state 29
    CHRLITS     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    NATURAL     shift, and go to state 32
    DECIMAL     shift, and go to state 33

    Expr  go to state 34


state 21

   15 FunctionDeclarator: IDENTIFIER LPAR . ParameterList RPAR
   16 ParameterList: . ParameterList COMMA ParameterDeclaration
   17              | . ParameterDeclaration
   18 ParameterDeclaration: . TypeSpec IDENTIFIER
   19                     | . TypeSpec
   24 TypeSpec: . CHAR
   25         | . INT
   26         | . VOID
   27         | . SHORT
   28         | . DOUBLE

    CHAR    shift, and go to state 2
    INT     shift, and go to state 3
    SHORT   shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6

    ParameterList         go to state 35
    ParameterDeclaration  go to state 36
    TypeSpec              go to state 37


state 22

    8 FunctionBody: LBRACE . RBRACE
    9             | LBRACE . DeclarationsAndStatements RBRACE
   10 DeclarationsAndStatements: . Statement DeclarationsAndStatements
   11                          | . Declaration DeclarationsAndStatements
   12                          | . Statement
   13                          | . Declaration
   20 Declaration: . TypeSpec Declarator ZEROPLUS1 SEMI
   21            | . error SEMI
   24 TypeSpec: . CHAR
   25         | . INT
   26         | . VOID
   27         | . SHORT
   28         | . DOUBLE
   31 Statement: . OPTIONAL4 SEMI
   32          | . error SEMI
   33          | . LBRACE ZEROPLUS2 RBRACE
   34          | . LBRACE error RBRACE
   35          | . IF LPAR Expr RPAR Statement OPTIONAL5
   36          | . IF LPAR Expr RPAR Statement
   37          | . WHILE LPAR Expr RPAR Statement
   38          | . RETURN OPTIONAL4 SEMI
   39 OPTIONAL4: . Expr
   40          | .  [SEMI]
   45 Expr: . Expr ASSIGN Expr
   46     | . Expr COMMA Expr
   47     | . Expr PLUS Expr
   48     | . Expr MINUS Expr
   49     | . Expr MUL Expr
   50     | . Expr DIV Expr
   51     | . Expr MOD Expr
   52     | . Expr OR Expr
   53     | . Expr AND Expr
   54     | . Expr BITWISEAND Expr
   55     | . Expr BITWISEOR Expr
   56     | . Expr BITWISEXOR Expr
   57     | . Expr EQ Expr
   58     | . Expr NE Expr
   59     | . Expr LE Expr
   60     | . Expr GE Expr
   61     | . Expr LT Expr
   62     | . Expr GT Expr
   63     | . PLUS Expr
   64     | . MINUS Expr
   65     | . NOT Expr
   66     | . IDENTIFIER LPAR error RPAR
   67     | . IDENTIFIER LPAR OPTIONAL6 RPAR
   68     | . IDENTIFIER
   69     | . NATURAL
   70     | . CHRLITS
   71     | . DECIMAL
   72     | . LPAR Expr RPAR
   73     | . LPAR error RPAR

    error       shift, and go to state 38
    CHAR        shift, and go to state 2
    WHILE       shift, and go to state 39
    IF          shift, and go to state 40
    INT         shift, and go to state 3
    SHORT       shift, and go to state 4
    DOUBLE      shift, and go to state 5
    RETURN      shift, and go to state 41
    VOID        shift, and go to state 6
    LBRACE      shift, and go to state 42
    LPAR        shift, and go to state 26
    MINUS       shift, and go to state 27
    NOT         shift, and go to state 28
    PLUS        shift, and go to state 29
    RBRACE      shift, and go to state 43
    CHRLITS     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    NATURAL     shift, and go to state 32
    DECIMAL     shift, and go to state 33

    SEMI  reduce using rule 40 (OPTIONAL4)

    DeclarationsAndStatements  go to state 44
    Declaration                go to state 45
    TypeSpec                   go to state 46
    Statement                  go to state 47
    OPTIONAL4                  go to state 48
    Expr                       go to state 49


state 23

   14 FunctionDeclaration: TypeSpec FunctionDeclarator SEMI .

    $default  reduce using rule 14 (FunctionDeclaration)


state 24

    7 FunctionDefinition: TypeSpec FunctionDeclarator FunctionBody .

    $default  reduce using rule 7 (FunctionDefinition)


state 25

   20 Declaration: TypeSpec Declarator ZEROPLUS1 . SEMI
   22 ZEROPLUS1: ZEROPLUS1 . COMMA Declarator

    SEMI   shift, and go to state 50
    COMMA  shift, and go to state 51


state 26

   45 Expr: . Expr ASSIGN Expr
   46     | . Expr COMMA Expr
   47     | . Expr PLUS Expr
   48     | . Expr MINUS Expr
   49     | . Expr MUL Expr
   50     | . Expr DIV Expr
   51     | . Expr MOD Expr
   52     | . Expr OR Expr
   53     | . Expr AND Expr
   54     | . Expr BITWISEAND Expr
   55     | . Expr BITWISEOR Expr
   56     | . Expr BITWISEXOR Expr
   57     | . Expr EQ Expr
   58     | . Expr NE Expr
   59     | . Expr LE Expr
   60     | . Expr GE Expr
   61     | . Expr LT Expr
   62     | . Expr GT Expr
   63     | . PLUS Expr
   64     | . MINUS Expr
   65     | . NOT Expr
   66     | . IDENTIFIER LPAR error RPAR
   67     | . IDENTIFIER LPAR OPTIONAL6 RPAR
   68     | . IDENTIFIER
   69     | . NATURAL
   70     | . CHRLITS
   71     | . DECIMAL
   72     | . LPAR Expr RPAR
   72     | LPAR . Expr RPAR
   73     | . LPAR error RPAR
   73     | LPAR . error RPAR

    error       shift, and go to state 52
    LPAR        shift, and go to state 26
    MINUS       shift, and go to state 27
    NOT         shift, and go to state 28
    PLUS        shift, and go to state 29
    CHRLITS     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    NATURAL     shift, and go to state 32
    DECIMAL     shift, and go to state 33

    Expr  go to state 53


state 27

   45 Expr: . Expr ASSIGN Expr
   46     | . Expr COMMA Expr
   47     | . Expr PLUS Expr
   48     | . Expr MINUS Expr
   49     | . Expr MUL Expr
   50     | . Expr DIV Expr
   51     | . Expr MOD Expr
   52     | . Expr OR Expr
   53     | . Expr AND Expr
   54     | . Expr BITWISEAND Expr
   55     | . Expr BITWISEOR Expr
   56     | . Expr BITWISEXOR Expr
   57     | . Expr EQ Expr
   58     | . Expr NE Expr
   59     | . Expr LE Expr
   60     | . Expr GE Expr
   61     | . Expr LT Expr
   62     | . Expr GT Expr
   63     | . PLUS Expr
   64     | . MINUS Expr
   64     | MINUS . Expr
   65     | . NOT Expr
   66     | . IDENTIFIER LPAR error RPAR
   67     | . IDENTIFIER LPAR OPTIONAL6 RPAR
   68     | . IDENTIFIER
   69     | . NATURAL
   70     | . CHRLITS
   71     | . DECIMAL
   72     | . LPAR Expr RPAR
   73     | . LPAR error RPAR

    LPAR        shift, and go to state 26
    MINUS       shift, and go to state 27
    NOT         shift, and go to state 28
    PLUS        shift, and go to state 29
    CHRLITS     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    NATURAL     shift, and go to state 32
    DECIMAL     shift, and go to state 33

    Expr  go to state 54


state 28

   45 Expr: . Expr ASSIGN Expr
   46     | . Expr COMMA Expr
   47     | . Expr PLUS Expr
   48     | . Expr MINUS Expr
   49     | . Expr MUL Expr
   50     | . Expr DIV Expr
   51     | . Expr MOD Expr
   52     | . Expr OR Expr
   53     | . Expr AND Expr
   54     | . Expr BITWISEAND Expr
   55     | . Expr BITWISEOR Expr
   56     | . Expr BITWISEXOR Expr
   57     | . Expr EQ Expr
   58     | . Expr NE Expr
   59     | . Expr LE Expr
   60     | . Expr GE Expr
   61     | . Expr LT Expr
   62     | . Expr GT Expr
   63     | . PLUS Expr
   64     | . MINUS Expr
   65     | . NOT Expr
   65     | NOT . Expr
   66     | . IDENTIFIER LPAR error RPAR
   67     | . IDENTIFIER LPAR OPTIONAL6 RPAR
   68     | . IDENTIFIER
   69     | . NATURAL
   70     | . CHRLITS
   71     | . DECIMAL
   72     | . LPAR Expr RPAR
   73     | . LPAR error RPAR

    LPAR        shift, and go to state 26
    MINUS       shift, and go to state 27
    NOT         shift, and go to state 28
    PLUS        shift, and go to state 29
    CHRLITS     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    NATURAL     shift, and go to state 32
    DECIMAL     shift, and go to state 33

    Expr  go to state 55


state 29

   45 Expr: . Expr ASSIGN Expr
   46     | . Expr COMMA Expr
   47     | . Expr PLUS Expr
   48     | . Expr MINUS Expr
   49     | . Expr MUL Expr
   50     | . Expr DIV Expr
   51     | . Expr MOD Expr
   52     | . Expr OR Expr
   53     | . Expr AND Expr
   54     | . Expr BITWISEAND Expr
   55     | . Expr BITWISEOR Expr
   56     | . Expr BITWISEXOR Expr
   57     | . Expr EQ Expr
   58     | . Expr NE Expr
   59     | . Expr LE Expr
   60     | . Expr GE Expr
   61     | . Expr LT Expr
   62     | . Expr GT Expr
   63     | . PLUS Expr
   63     | PLUS . Expr
   64     | . MINUS Expr
   65     | . NOT Expr
   66     | . IDENTIFIER LPAR error RPAR
   67     | . IDENTIFIER LPAR OPTIONAL6 RPAR
   68     | . IDENTIFIER
   69     | . NATURAL
   70     | . CHRLITS
   71     | . DECIMAL
   72     | . LPAR Expr RPAR
   73     | . LPAR error RPAR

    LPAR        shift, and go to state 26
    MINUS       shift, and go to state 27
    NOT         shift, and go to state 28
    PLUS        shift, and go to state 29
    CHRLITS     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    NATURAL     shift, and go to state 32
    DECIMAL     shift, and go to state 33

    Expr  go to state 56


state 30

   70 Expr: CHRLITS .

    $default  reduce using rule 70 (Expr)


state 31

   66 Expr: IDENTIFIER . LPAR error RPAR
   67     | IDENTIFIER . LPAR OPTIONAL6 RPAR
   68     | IDENTIFIER .  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, MUL, EQ, GE, GT, DIV, LE, LT, MINUS, MOD, NE, OR, PLUS, RPAR, SEMI, COMMA]

    LPAR  shift, and go to state 57

    $default  reduce using rule 68 (Expr)


state 32

   69 Expr: NATURAL .

    $default  reduce using rule 69 (Expr)


state 33

   71 Expr: DECIMAL .

    $default  reduce using rule 71 (Expr)


state 34

   29 Declarator: IDENTIFIER ASSIGN Expr .  [SEMI, COMMA]
   45 Expr: Expr . ASSIGN Expr
   46     | Expr . COMMA Expr
   47     | Expr . PLUS Expr
   48     | Expr . MINUS Expr
   49     | Expr . MUL Expr
   50     | Expr . DIV Expr
   51     | Expr . MOD Expr
   52     | Expr . OR Expr
   53     | Expr . AND Expr
   54     | Expr . BITWISEAND Expr
   55     | Expr . BITWISEOR Expr
   56     | Expr . BITWISEXOR Expr
   57     | Expr . EQ Expr
   58     | Expr . NE Expr
   59     | Expr . LE Expr
   60     | Expr . GE Expr
   61     | Expr . LT Expr
   62     | Expr . GT Expr

    BITWISEAND  shift, and go to state 58
    BITWISEOR   shift, and go to state 59
    BITWISEXOR  shift, and go to state 60
    AND         shift, and go to state 61
    ASSIGN      shift, and go to state 62
    MUL         shift, and go to state 63
    EQ          shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    DIV         shift, and go to state 67
    LE          shift, and go to state 68
    LT          shift, and go to state 69
    MINUS       shift, and go to state 70
    MOD         shift, and go to state 71
    NE          shift, and go to state 72
    OR          shift, and go to state 73
    PLUS        shift, and go to state 74
    COMMA       shift, and go to state 75

    COMMA     [reduce using rule 29 (Declarator)]
    $default  reduce using rule 29 (Declarator)


state 35

   15 FunctionDeclarator: IDENTIFIER LPAR ParameterList . RPAR
   16 ParameterList: ParameterList . COMMA ParameterDeclaration

    RPAR   shift, and go to state 76
    COMMA  shift, and go to state 77


state 36

   17 ParameterList: ParameterDeclaration .

    $default  reduce using rule 17 (ParameterList)


state 37

   18 ParameterDeclaration: TypeSpec . IDENTIFIER
   19                     | TypeSpec .  [RPAR, COMMA]

    IDENTIFIER  shift, and go to state 78

    $default  reduce using rule 19 (ParameterDeclaration)


state 38

   21 Declaration: error . SEMI
   32 Statement: error . SEMI

    SEMI  shift, and go to state 79


state 39

   37 Statement: WHILE . LPAR Expr RPAR Statement

    LPAR  shift, and go to state 80


state 40

   35 Statement: IF . LPAR Expr RPAR Statement OPTIONAL5
   36          | IF . LPAR Expr RPAR Statement

    LPAR  shift, and go to state 81


state 41

   38 Statement: RETURN . OPTIONAL4 SEMI
   39 OPTIONAL4: . Expr
   40          | .  [SEMI]
   45 Expr: . Expr ASSIGN Expr
   46     | . Expr COMMA Expr
   47     | . Expr PLUS Expr
   48     | . Expr MINUS Expr
   49     | . Expr MUL Expr
   50     | . Expr DIV Expr
   51     | . Expr MOD Expr
   52     | . Expr OR Expr
   53     | . Expr AND Expr
   54     | . Expr BITWISEAND Expr
   55     | . Expr BITWISEOR Expr
   56     | . Expr BITWISEXOR Expr
   57     | . Expr EQ Expr
   58     | . Expr NE Expr
   59     | . Expr LE Expr
   60     | . Expr GE Expr
   61     | . Expr LT Expr
   62     | . Expr GT Expr
   63     | . PLUS Expr
   64     | . MINUS Expr
   65     | . NOT Expr
   66     | . IDENTIFIER LPAR error RPAR
   67     | . IDENTIFIER LPAR OPTIONAL6 RPAR
   68     | . IDENTIFIER
   69     | . NATURAL
   70     | . CHRLITS
   71     | . DECIMAL
   72     | . LPAR Expr RPAR
   73     | . LPAR error RPAR

    LPAR        shift, and go to state 26
    MINUS       shift, and go to state 27
    NOT         shift, and go to state 28
    PLUS        shift, and go to state 29
    CHRLITS     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    NATURAL     shift, and go to state 32
    DECIMAL     shift, and go to state 33

    $default  reduce using rule 40 (OPTIONAL4)

    OPTIONAL4  go to state 82
    Expr       go to state 49


state 42

   33 Statement: LBRACE . ZEROPLUS2 RBRACE
   34          | LBRACE . error RBRACE
   43 ZEROPLUS2: . ZEROPLUS2 Statement
   44          | .  [error, WHILE, IF, RETURN, LBRACE, LPAR, MINUS, NOT, PLUS, RBRACE, SEMI, CHRLITS, IDENTIFIER, NATURAL, DECIMAL]

    error  shift, and go to state 83

    error       [reduce using rule 44 (ZEROPLUS2)]
    WHILE       reduce using rule 44 (ZEROPLUS2)
    IF          reduce using rule 44 (ZEROPLUS2)
    RETURN      reduce using rule 44 (ZEROPLUS2)
    LBRACE      reduce using rule 44 (ZEROPLUS2)
    LPAR        reduce using rule 44 (ZEROPLUS2)
    MINUS       reduce using rule 44 (ZEROPLUS2)
    NOT         reduce using rule 44 (ZEROPLUS2)
    PLUS        reduce using rule 44 (ZEROPLUS2)
    RBRACE      reduce using rule 44 (ZEROPLUS2)
    SEMI        reduce using rule 44 (ZEROPLUS2)
    CHRLITS     reduce using rule 44 (ZEROPLUS2)
    IDENTIFIER  reduce using rule 44 (ZEROPLUS2)
    NATURAL     reduce using rule 44 (ZEROPLUS2)
    DECIMAL     reduce using rule 44 (ZEROPLUS2)

    ZEROPLUS2  go to state 84


state 43

    8 FunctionBody: LBRACE RBRACE .

    $default  reduce using rule 8 (FunctionBody)


state 44

    9 FunctionBody: LBRACE DeclarationsAndStatements . RBRACE

    RBRACE  shift, and go to state 85


state 45

   10 DeclarationsAndStatements: . Statement DeclarationsAndStatements
   11                          | . Declaration DeclarationsAndStatements
   11                          | Declaration . DeclarationsAndStatements
   12                          | . Statement
   13                          | . Declaration  [RBRACE]
   13                          | Declaration .  [RBRACE]
   20 Declaration: . TypeSpec Declarator ZEROPLUS1 SEMI
   21            | . error SEMI
   24 TypeSpec: . CHAR
   25         | . INT
   26         | . VOID
   27         | . SHORT
   28         | . DOUBLE
   31 Statement: . OPTIONAL4 SEMI
   32          | . error SEMI
   33          | . LBRACE ZEROPLUS2 RBRACE
   34          | . LBRACE error RBRACE
   35          | . IF LPAR Expr RPAR Statement OPTIONAL5
   36          | . IF LPAR Expr RPAR Statement
   37          | . WHILE LPAR Expr RPAR Statement
   38          | . RETURN OPTIONAL4 SEMI
   39 OPTIONAL4: . Expr
   40          | .  [SEMI]
   45 Expr: . Expr ASSIGN Expr
   46     | . Expr COMMA Expr
   47     | . Expr PLUS Expr
   48     | . Expr MINUS Expr
   49     | . Expr MUL Expr
   50     | . Expr DIV Expr
   51     | . Expr MOD Expr
   52     | . Expr OR Expr
   53     | . Expr AND Expr
   54     | . Expr BITWISEAND Expr
   55     | . Expr BITWISEOR Expr
   56     | . Expr BITWISEXOR Expr
   57     | . Expr EQ Expr
   58     | . Expr NE Expr
   59     | . Expr LE Expr
   60     | . Expr GE Expr
   61     | . Expr LT Expr
   62     | . Expr GT Expr
   63     | . PLUS Expr
   64     | . MINUS Expr
   65     | . NOT Expr
   66     | . IDENTIFIER LPAR error RPAR
   67     | . IDENTIFIER LPAR OPTIONAL6 RPAR
   68     | . IDENTIFIER
   69     | . NATURAL
   70     | . CHRLITS
   71     | . DECIMAL
   72     | . LPAR Expr RPAR
   73     | . LPAR error RPAR

    error       shift, and go to state 38
    CHAR        shift, and go to state 2
    WHILE       shift, and go to state 39
    IF          shift, and go to state 40
    INT         shift, and go to state 3
    SHORT       shift, and go to state 4
    DOUBLE      shift, and go to state 5
    RETURN      shift, and go to state 41
    VOID        shift, and go to state 6
    LBRACE      shift, and go to state 42
    LPAR        shift, and go to state 26
    MINUS       shift, and go to state 27
    NOT         shift, and go to state 28
    PLUS        shift, and go to state 29
    CHRLITS     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    NATURAL     shift, and go to state 32
    DECIMAL     shift, and go to state 33

    RBRACE  reduce using rule 13 (DeclarationsAndStatements)
    SEMI    reduce using rule 40 (OPTIONAL4)

    DeclarationsAndStatements  go to state 86
    Declaration                go to state 45
    TypeSpec                   go to state 46
    Statement                  go to state 47
    OPTIONAL4                  go to state 48
    Expr                       go to state 49


state 46

   20 Declaration: TypeSpec . Declarator ZEROPLUS1 SEMI
   29 Declarator: . IDENTIFIER ASSIGN Expr
   30           | . IDENTIFIER

    IDENTIFIER  shift, and go to state 87

    Declarator  go to state 19


state 47

   10 DeclarationsAndStatements: . Statement DeclarationsAndStatements
   10                          | Statement . DeclarationsAndStatements
   11                          | . Declaration DeclarationsAndStatements
   12                          | . Statement  [RBRACE]
   12                          | Statement .  [RBRACE]
   13                          | . Declaration
   20 Declaration: . TypeSpec Declarator ZEROPLUS1 SEMI
   21            | . error SEMI
   24 TypeSpec: . CHAR
   25         | . INT
   26         | . VOID
   27         | . SHORT
   28         | . DOUBLE
   31 Statement: . OPTIONAL4 SEMI
   32          | . error SEMI
   33          | . LBRACE ZEROPLUS2 RBRACE
   34          | . LBRACE error RBRACE
   35          | . IF LPAR Expr RPAR Statement OPTIONAL5
   36          | . IF LPAR Expr RPAR Statement
   37          | . WHILE LPAR Expr RPAR Statement
   38          | . RETURN OPTIONAL4 SEMI
   39 OPTIONAL4: . Expr
   40          | .  [SEMI]
   45 Expr: . Expr ASSIGN Expr
   46     | . Expr COMMA Expr
   47     | . Expr PLUS Expr
   48     | . Expr MINUS Expr
   49     | . Expr MUL Expr
   50     | . Expr DIV Expr
   51     | . Expr MOD Expr
   52     | . Expr OR Expr
   53     | . Expr AND Expr
   54     | . Expr BITWISEAND Expr
   55     | . Expr BITWISEOR Expr
   56     | . Expr BITWISEXOR Expr
   57     | . Expr EQ Expr
   58     | . Expr NE Expr
   59     | . Expr LE Expr
   60     | . Expr GE Expr
   61     | . Expr LT Expr
   62     | . Expr GT Expr
   63     | . PLUS Expr
   64     | . MINUS Expr
   65     | . NOT Expr
   66     | . IDENTIFIER LPAR error RPAR
   67     | . IDENTIFIER LPAR OPTIONAL6 RPAR
   68     | . IDENTIFIER
   69     | . NATURAL
   70     | . CHRLITS
   71     | . DECIMAL
   72     | . LPAR Expr RPAR
   73     | . LPAR error RPAR

    error       shift, and go to state 38
    CHAR        shift, and go to state 2
    WHILE       shift, and go to state 39
    IF          shift, and go to state 40
    INT         shift, and go to state 3
    SHORT       shift, and go to state 4
    DOUBLE      shift, and go to state 5
    RETURN      shift, and go to state 41
    VOID        shift, and go to state 6
    LBRACE      shift, and go to state 42
    LPAR        shift, and go to state 26
    MINUS       shift, and go to state 27
    NOT         shift, and go to state 28
    PLUS        shift, and go to state 29
    CHRLITS     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    NATURAL     shift, and go to state 32
    DECIMAL     shift, and go to state 33

    RBRACE  reduce using rule 12 (DeclarationsAndStatements)
    SEMI    reduce using rule 40 (OPTIONAL4)

    DeclarationsAndStatements  go to state 88
    Declaration                go to state 45
    TypeSpec                   go to state 46
    Statement                  go to state 47
    OPTIONAL4                  go to state 48
    Expr                       go to state 49


state 48

   31 Statement: OPTIONAL4 . SEMI

    SEMI  shift, and go to state 89


state 49

   39 OPTIONAL4: Expr .  [SEMI]
   45 Expr: Expr . ASSIGN Expr
   46     | Expr . COMMA Expr
   47     | Expr . PLUS Expr
   48     | Expr . MINUS Expr
   49     | Expr . MUL Expr
   50     | Expr . DIV Expr
   51     | Expr . MOD Expr
   52     | Expr . OR Expr
   53     | Expr . AND Expr
   54     | Expr . BITWISEAND Expr
   55     | Expr . BITWISEOR Expr
   56     | Expr . BITWISEXOR Expr
   57     | Expr . EQ Expr
   58     | Expr . NE Expr
   59     | Expr . LE Expr
   60     | Expr . GE Expr
   61     | Expr . LT Expr
   62     | Expr . GT Expr

    BITWISEAND  shift, and go to state 58
    BITWISEOR   shift, and go to state 59
    BITWISEXOR  shift, and go to state 60
    AND         shift, and go to state 61
    ASSIGN      shift, and go to state 62
    MUL         shift, and go to state 63
    EQ          shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    DIV         shift, and go to state 67
    LE          shift, and go to state 68
    LT          shift, and go to state 69
    MINUS       shift, and go to state 70
    MOD         shift, and go to state 71
    NE          shift, and go to state 72
    OR          shift, and go to state 73
    PLUS        shift, and go to state 74
    COMMA       shift, and go to state 75

    $default  reduce using rule 39 (OPTIONAL4)


state 50

   20 Declaration: TypeSpec Declarator ZEROPLUS1 SEMI .

    $default  reduce using rule 20 (Declaration)


state 51

   22 ZEROPLUS1: ZEROPLUS1 COMMA . Declarator
   29 Declarator: . IDENTIFIER ASSIGN Expr
   30           | . IDENTIFIER

    IDENTIFIER  shift, and go to state 87

    Declarator  go to state 90


state 52

   73 Expr: LPAR error . RPAR

    RPAR  shift, and go to state 91


state 53

   45 Expr: Expr . ASSIGN Expr
   46     | Expr . COMMA Expr
   47     | Expr . PLUS Expr
   48     | Expr . MINUS Expr
   49     | Expr . MUL Expr
   50     | Expr . DIV Expr
   51     | Expr . MOD Expr
   52     | Expr . OR Expr
   53     | Expr . AND Expr
   54     | Expr . BITWISEAND Expr
   55     | Expr . BITWISEOR Expr
   56     | Expr . BITWISEXOR Expr
   57     | Expr . EQ Expr
   58     | Expr . NE Expr
   59     | Expr . LE Expr
   60     | Expr . GE Expr
   61     | Expr . LT Expr
   62     | Expr . GT Expr
   72     | LPAR Expr . RPAR

    BITWISEAND  shift, and go to state 58
    BITWISEOR   shift, and go to state 59
    BITWISEXOR  shift, and go to state 60
    AND         shift, and go to state 61
    ASSIGN      shift, and go to state 62
    MUL         shift, and go to state 63
    EQ          shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    DIV         shift, and go to state 67
    LE          shift, and go to state 68
    LT          shift, and go to state 69
    MINUS       shift, and go to state 70
    MOD         shift, and go to state 71
    NE          shift, and go to state 72
    OR          shift, and go to state 73
    PLUS        shift, and go to state 74
    RPAR        shift, and go to state 92
    COMMA       shift, and go to state 75


state 54

   45 Expr: Expr . ASSIGN Expr
   46     | Expr . COMMA Expr
   47     | Expr . PLUS Expr
   48     | Expr . MINUS Expr
   49     | Expr . MUL Expr
   50     | Expr . DIV Expr
   51     | Expr . MOD Expr
   52     | Expr . OR Expr
   53     | Expr . AND Expr
   54     | Expr . BITWISEAND Expr
   55     | Expr . BITWISEOR Expr
   56     | Expr . BITWISEXOR Expr
   57     | Expr . EQ Expr
   58     | Expr . NE Expr
   59     | Expr . LE Expr
   60     | Expr . GE Expr
   61     | Expr . LT Expr
   62     | Expr . GT Expr
   64     | MINUS Expr .  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, EQ, GE, GT, LE, LT, MINUS, MOD, NE, OR, PLUS, RPAR, SEMI]

    BITWISEAND  shift, and go to state 58
    BITWISEOR   shift, and go to state 59
    BITWISEXOR  shift, and go to state 60
    AND         shift, and go to state 61
    ASSIGN      shift, and go to state 62
    MUL         shift, and go to state 63
    EQ          shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    DIV         shift, and go to state 67
    LE          shift, and go to state 68
    LT          shift, and go to state 69
    MOD         shift, and go to state 71
    NE          shift, and go to state 72
    OR          shift, and go to state 73
    COMMA       shift, and go to state 75

    BITWISEAND  [reduce using rule 64 (Expr)]
    BITWISEOR   [reduce using rule 64 (Expr)]
    BITWISEXOR  [reduce using rule 64 (Expr)]
    AND         [reduce using rule 64 (Expr)]
    ASSIGN      [reduce using rule 64 (Expr)]
    EQ          [reduce using rule 64 (Expr)]
    GE          [reduce using rule 64 (Expr)]
    GT          [reduce using rule 64 (Expr)]
    LE          [reduce using rule 64 (Expr)]
    LT          [reduce using rule 64 (Expr)]
    MOD         [reduce using rule 64 (Expr)]
    NE          [reduce using rule 64 (Expr)]
    OR          [reduce using rule 64 (Expr)]
    $default    reduce using rule 64 (Expr)

    Conflict between rule 64 and token MUL resolved as shift (MINUS < MUL).
    Conflict between rule 64 and token DIV resolved as shift (MINUS < DIV).
    Conflict between rule 64 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 64 and token PLUS resolved as reduce (%left PLUS).
    Conflict between rule 64 and token COMMA resolved as shift (MINUS < COMMA).


state 55

   45 Expr: Expr . ASSIGN Expr
   46     | Expr . COMMA Expr
   47     | Expr . PLUS Expr
   48     | Expr . MINUS Expr
   49     | Expr . MUL Expr
   50     | Expr . DIV Expr
   51     | Expr . MOD Expr
   52     | Expr . OR Expr
   53     | Expr . AND Expr
   54     | Expr . BITWISEAND Expr
   55     | Expr . BITWISEOR Expr
   56     | Expr . BITWISEXOR Expr
   57     | Expr . EQ Expr
   58     | Expr . NE Expr
   59     | Expr . LE Expr
   60     | Expr . GE Expr
   61     | Expr . LT Expr
   62     | Expr . GT Expr
   65     | NOT Expr .  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, MUL, EQ, GE, GT, DIV, LE, LT, MINUS, MOD, NE, OR, PLUS, RPAR, SEMI, COMMA]

    BITWISEAND  shift, and go to state 58
    BITWISEOR   shift, and go to state 59
    BITWISEXOR  shift, and go to state 60
    AND         shift, and go to state 61
    ASSIGN      shift, and go to state 62
    MUL         shift, and go to state 63
    EQ          shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    DIV         shift, and go to state 67
    LE          shift, and go to state 68
    LT          shift, and go to state 69
    MINUS       shift, and go to state 70
    MOD         shift, and go to state 71
    NE          shift, and go to state 72
    OR          shift, and go to state 73
    PLUS        shift, and go to state 74
    COMMA       shift, and go to state 75

    BITWISEAND  [reduce using rule 65 (Expr)]
    BITWISEOR   [reduce using rule 65 (Expr)]
    BITWISEXOR  [reduce using rule 65 (Expr)]
    AND         [reduce using rule 65 (Expr)]
    ASSIGN      [reduce using rule 65 (Expr)]
    MUL         [reduce using rule 65 (Expr)]
    EQ          [reduce using rule 65 (Expr)]
    GE          [reduce using rule 65 (Expr)]
    GT          [reduce using rule 65 (Expr)]
    DIV         [reduce using rule 65 (Expr)]
    LE          [reduce using rule 65 (Expr)]
    LT          [reduce using rule 65 (Expr)]
    MINUS       [reduce using rule 65 (Expr)]
    MOD         [reduce using rule 65 (Expr)]
    NE          [reduce using rule 65 (Expr)]
    OR          [reduce using rule 65 (Expr)]
    PLUS        [reduce using rule 65 (Expr)]
    COMMA       [reduce using rule 65 (Expr)]
    $default    reduce using rule 65 (Expr)


state 56

   45 Expr: Expr . ASSIGN Expr
   46     | Expr . COMMA Expr
   47     | Expr . PLUS Expr
   48     | Expr . MINUS Expr
   49     | Expr . MUL Expr
   50     | Expr . DIV Expr
   51     | Expr . MOD Expr
   52     | Expr . OR Expr
   53     | Expr . AND Expr
   54     | Expr . BITWISEAND Expr
   55     | Expr . BITWISEOR Expr
   56     | Expr . BITWISEXOR Expr
   57     | Expr . EQ Expr
   58     | Expr . NE Expr
   59     | Expr . LE Expr
   60     | Expr . GE Expr
   61     | Expr . LT Expr
   62     | Expr . GT Expr
   63     | PLUS Expr .  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, EQ, GE, GT, LE, LT, MINUS, MOD, NE, OR, PLUS, RPAR, SEMI]

    BITWISEAND  shift, and go to state 58
    BITWISEOR   shift, and go to state 59
    BITWISEXOR  shift, and go to state 60
    AND         shift, and go to state 61
    ASSIGN      shift, and go to state 62
    MUL         shift, and go to state 63
    EQ          shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    DIV         shift, and go to state 67
    LE          shift, and go to state 68
    LT          shift, and go to state 69
    MOD         shift, and go to state 71
    NE          shift, and go to state 72
    OR          shift, and go to state 73
    COMMA       shift, and go to state 75

    BITWISEAND  [reduce using rule 63 (Expr)]
    BITWISEOR   [reduce using rule 63 (Expr)]
    BITWISEXOR  [reduce using rule 63 (Expr)]
    AND         [reduce using rule 63 (Expr)]
    ASSIGN      [reduce using rule 63 (Expr)]
    EQ          [reduce using rule 63 (Expr)]
    GE          [reduce using rule 63 (Expr)]
    GT          [reduce using rule 63 (Expr)]
    LE          [reduce using rule 63 (Expr)]
    LT          [reduce using rule 63 (Expr)]
    MOD         [reduce using rule 63 (Expr)]
    NE          [reduce using rule 63 (Expr)]
    OR          [reduce using rule 63 (Expr)]
    $default    reduce using rule 63 (Expr)

    Conflict between rule 63 and token MUL resolved as shift (PLUS < MUL).
    Conflict between rule 63 and token DIV resolved as shift (PLUS < DIV).
    Conflict between rule 63 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 63 and token PLUS resolved as reduce (%left PLUS).
    Conflict between rule 63 and token COMMA resolved as shift (PLUS < COMMA).


state 57

   45 Expr: . Expr ASSIGN Expr
   46     | . Expr COMMA Expr
   47     | . Expr PLUS Expr
   48     | . Expr MINUS Expr
   49     | . Expr MUL Expr
   50     | . Expr DIV Expr
   51     | . Expr MOD Expr
   52     | . Expr OR Expr
   53     | . Expr AND Expr
   54     | . Expr BITWISEAND Expr
   55     | . Expr BITWISEOR Expr
   56     | . Expr BITWISEXOR Expr
   57     | . Expr EQ Expr
   58     | . Expr NE Expr
   59     | . Expr LE Expr
   60     | . Expr GE Expr
   61     | . Expr LT Expr
   62     | . Expr GT Expr
   63     | . PLUS Expr
   64     | . MINUS Expr
   65     | . NOT Expr
   66     | . IDENTIFIER LPAR error RPAR
   66     | IDENTIFIER LPAR . error RPAR
   67     | . IDENTIFIER LPAR OPTIONAL6 RPAR
   67     | IDENTIFIER LPAR . OPTIONAL6 RPAR
   68     | . IDENTIFIER
   69     | . NATURAL
   70     | . CHRLITS
   71     | . DECIMAL
   72     | . LPAR Expr RPAR
   73     | . LPAR error RPAR
   74 OPTIONAL6: . ZEROPLUS3
   75          | .  [RPAR]
   76 ZEROPLUS3: . ZEROPLUS3 COMMA Expr
   77          | . Expr

    error       shift, and go to state 93
    LPAR        shift, and go to state 26
    MINUS       shift, and go to state 27
    NOT         shift, and go to state 28
    PLUS        shift, and go to state 29
    CHRLITS     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    NATURAL     shift, and go to state 32
    DECIMAL     shift, and go to state 33

    RPAR  reduce using rule 75 (OPTIONAL6)

    Expr       go to state 94
    OPTIONAL6  go to state 95
    ZEROPLUS3  go to state 96


state 58

   45 Expr: . Expr ASSIGN Expr
   46     | . Expr COMMA Expr
   47     | . Expr PLUS Expr
   48     | . Expr MINUS Expr
   49     | . Expr MUL Expr
   50     | . Expr DIV Expr
   51     | . Expr MOD Expr
   52     | . Expr OR Expr
   53     | . Expr AND Expr
   54     | . Expr BITWISEAND Expr
   54     | Expr BITWISEAND . Expr
   55     | . Expr BITWISEOR Expr
   56     | . Expr BITWISEXOR Expr
   57     | . Expr EQ Expr
   58     | . Expr NE Expr
   59     | . Expr LE Expr
   60     | . Expr GE Expr
   61     | . Expr LT Expr
   62     | . Expr GT Expr
   63     | . PLUS Expr
   64     | . MINUS Expr
   65     | . NOT Expr
   66     | . IDENTIFIER LPAR error RPAR
   67     | . IDENTIFIER LPAR OPTIONAL6 RPAR
   68     | . IDENTIFIER
   69     | . NATURAL
   70     | . CHRLITS
   71     | . DECIMAL
   72     | . LPAR Expr RPAR
   73     | . LPAR error RPAR

    LPAR        shift, and go to state 26
    MINUS       shift, and go to state 27
    NOT         shift, and go to state 28
    PLUS        shift, and go to state 29
    CHRLITS     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    NATURAL     shift, and go to state 32
    DECIMAL     shift, and go to state 33

    Expr  go to state 97


state 59

   45 Expr: . Expr ASSIGN Expr
   46     | . Expr COMMA Expr
   47     | . Expr PLUS Expr
   48     | . Expr MINUS Expr
   49     | . Expr MUL Expr
   50     | . Expr DIV Expr
   51     | . Expr MOD Expr
   52     | . Expr OR Expr
   53     | . Expr AND Expr
   54     | . Expr BITWISEAND Expr
   55     | . Expr BITWISEOR Expr
   55     | Expr BITWISEOR . Expr
   56     | . Expr BITWISEXOR Expr
   57     | . Expr EQ Expr
   58     | . Expr NE Expr
   59     | . Expr LE Expr
   60     | . Expr GE Expr
   61     | . Expr LT Expr
   62     | . Expr GT Expr
   63     | . PLUS Expr
   64     | . MINUS Expr
   65     | . NOT Expr
   66     | . IDENTIFIER LPAR error RPAR
   67     | . IDENTIFIER LPAR OPTIONAL6 RPAR
   68     | . IDENTIFIER
   69     | . NATURAL
   70     | . CHRLITS
   71     | . DECIMAL
   72     | . LPAR Expr RPAR
   73     | . LPAR error RPAR

    LPAR        shift, and go to state 26
    MINUS       shift, and go to state 27
    NOT         shift, and go to state 28
    PLUS        shift, and go to state 29
    CHRLITS     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    NATURAL     shift, and go to state 32
    DECIMAL     shift, and go to state 33

    Expr  go to state 98


state 60

   45 Expr: . Expr ASSIGN Expr
   46     | . Expr COMMA Expr
   47     | . Expr PLUS Expr
   48     | . Expr MINUS Expr
   49     | . Expr MUL Expr
   50     | . Expr DIV Expr
   51     | . Expr MOD Expr
   52     | . Expr OR Expr
   53     | . Expr AND Expr
   54     | . Expr BITWISEAND Expr
   55     | . Expr BITWISEOR Expr
   56     | . Expr BITWISEXOR Expr
   56     | Expr BITWISEXOR . Expr
   57     | . Expr EQ Expr
   58     | . Expr NE Expr
   59     | . Expr LE Expr
   60     | . Expr GE Expr
   61     | . Expr LT Expr
   62     | . Expr GT Expr
   63     | . PLUS Expr
   64     | . MINUS Expr
   65     | . NOT Expr
   66     | . IDENTIFIER LPAR error RPAR
   67     | . IDENTIFIER LPAR OPTIONAL6 RPAR
   68     | . IDENTIFIER
   69     | . NATURAL
   70     | . CHRLITS
   71     | . DECIMAL
   72     | . LPAR Expr RPAR
   73     | . LPAR error RPAR

    LPAR        shift, and go to state 26
    MINUS       shift, and go to state 27
    NOT         shift, and go to state 28
    PLUS        shift, and go to state 29
    CHRLITS     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    NATURAL     shift, and go to state 32
    DECIMAL     shift, and go to state 33

    Expr  go to state 99


state 61

   45 Expr: . Expr ASSIGN Expr
   46     | . Expr COMMA Expr
   47     | . Expr PLUS Expr
   48     | . Expr MINUS Expr
   49     | . Expr MUL Expr
   50     | . Expr DIV Expr
   51     | . Expr MOD Expr
   52     | . Expr OR Expr
   53     | . Expr AND Expr
   53     | Expr AND . Expr
   54     | . Expr BITWISEAND Expr
   55     | . Expr BITWISEOR Expr
   56     | . Expr BITWISEXOR Expr
   57     | . Expr EQ Expr
   58     | . Expr NE Expr
   59     | . Expr LE Expr
   60     | . Expr GE Expr
   61     | . Expr LT Expr
   62     | . Expr GT Expr
   63     | . PLUS Expr
   64     | . MINUS Expr
   65     | . NOT Expr
   66     | . IDENTIFIER LPAR error RPAR
   67     | . IDENTIFIER LPAR OPTIONAL6 RPAR
   68     | . IDENTIFIER
   69     | . NATURAL
   70     | . CHRLITS
   71     | . DECIMAL
   72     | . LPAR Expr RPAR
   73     | . LPAR error RPAR

    LPAR        shift, and go to state 26
    MINUS       shift, and go to state 27
    NOT         shift, and go to state 28
    PLUS        shift, and go to state 29
    CHRLITS     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    NATURAL     shift, and go to state 32
    DECIMAL     shift, and go to state 33

    Expr  go to state 100


state 62

   45 Expr: . Expr ASSIGN Expr
   45     | Expr ASSIGN . Expr
   46     | . Expr COMMA Expr
   47     | . Expr PLUS Expr
   48     | . Expr MINUS Expr
   49     | . Expr MUL Expr
   50     | . Expr DIV Expr
   51     | . Expr MOD Expr
   52     | . Expr OR Expr
   53     | . Expr AND Expr
   54     | . Expr BITWISEAND Expr
   55     | . Expr BITWISEOR Expr
   56     | . Expr BITWISEXOR Expr
   57     | . Expr EQ Expr
   58     | . Expr NE Expr
   59     | . Expr LE Expr
   60     | . Expr GE Expr
   61     | . Expr LT Expr
   62     | . Expr GT Expr
   63     | . PLUS Expr
   64     | . MINUS Expr
   65     | . NOT Expr
   66     | . IDENTIFIER LPAR error RPAR
   67     | . IDENTIFIER LPAR OPTIONAL6 RPAR
   68     | . IDENTIFIER
   69     | . NATURAL
   70     | . CHRLITS
   71     | . DECIMAL
   72     | . LPAR Expr RPAR
   73     | . LPAR error RPAR

    LPAR        shift, and go to state 26
    MINUS       shift, and go to state 27
    NOT         shift, and go to state 28
    PLUS        shift, and go to state 29
    CHRLITS     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    NATURAL     shift, and go to state 32
    DECIMAL     shift, and go to state 33

    Expr  go to state 101


state 63

   45 Expr: . Expr ASSIGN Expr
   46     | . Expr COMMA Expr
   47     | . Expr PLUS Expr
   48     | . Expr MINUS Expr
   49     | . Expr MUL Expr
   49     | Expr MUL . Expr
   50     | . Expr DIV Expr
   51     | . Expr MOD Expr
   52     | . Expr OR Expr
   53     | . Expr AND Expr
   54     | . Expr BITWISEAND Expr
   55     | . Expr BITWISEOR Expr
   56     | . Expr BITWISEXOR Expr
   57     | . Expr EQ Expr
   58     | . Expr NE Expr
   59     | . Expr LE Expr
   60     | . Expr GE Expr
   61     | . Expr LT Expr
   62     | . Expr GT Expr
   63     | . PLUS Expr
   64     | . MINUS Expr
   65     | . NOT Expr
   66     | . IDENTIFIER LPAR error RPAR
   67     | . IDENTIFIER LPAR OPTIONAL6 RPAR
   68     | . IDENTIFIER
   69     | . NATURAL
   70     | . CHRLITS
   71     | . DECIMAL
   72     | . LPAR Expr RPAR
   73     | . LPAR error RPAR

    LPAR        shift, and go to state 26
    MINUS       shift, and go to state 27
    NOT         shift, and go to state 28
    PLUS        shift, and go to state 29
    CHRLITS     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    NATURAL     shift, and go to state 32
    DECIMAL     shift, and go to state 33

    Expr  go to state 102


state 64

   45 Expr: . Expr ASSIGN Expr
   46     | . Expr COMMA Expr
   47     | . Expr PLUS Expr
   48     | . Expr MINUS Expr
   49     | . Expr MUL Expr
   50     | . Expr DIV Expr
   51     | . Expr MOD Expr
   52     | . Expr OR Expr
   53     | . Expr AND Expr
   54     | . Expr BITWISEAND Expr
   55     | . Expr BITWISEOR Expr
   56     | . Expr BITWISEXOR Expr
   57     | . Expr EQ Expr
   57     | Expr EQ . Expr
   58     | . Expr NE Expr
   59     | . Expr LE Expr
   60     | . Expr GE Expr
   61     | . Expr LT Expr
   62     | . Expr GT Expr
   63     | . PLUS Expr
   64     | . MINUS Expr
   65     | . NOT Expr
   66     | . IDENTIFIER LPAR error RPAR
   67     | . IDENTIFIER LPAR OPTIONAL6 RPAR
   68     | . IDENTIFIER
   69     | . NATURAL
   70     | . CHRLITS
   71     | . DECIMAL
   72     | . LPAR Expr RPAR
   73     | . LPAR error RPAR

    LPAR        shift, and go to state 26
    MINUS       shift, and go to state 27
    NOT         shift, and go to state 28
    PLUS        shift, and go to state 29
    CHRLITS     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    NATURAL     shift, and go to state 32
    DECIMAL     shift, and go to state 33

    Expr  go to state 103


state 65

   45 Expr: . Expr ASSIGN Expr
   46     | . Expr COMMA Expr
   47     | . Expr PLUS Expr
   48     | . Expr MINUS Expr
   49     | . Expr MUL Expr
   50     | . Expr DIV Expr
   51     | . Expr MOD Expr
   52     | . Expr OR Expr
   53     | . Expr AND Expr
   54     | . Expr BITWISEAND Expr
   55     | . Expr BITWISEOR Expr
   56     | . Expr BITWISEXOR Expr
   57     | . Expr EQ Expr
   58     | . Expr NE Expr
   59     | . Expr LE Expr
   60     | . Expr GE Expr
   60     | Expr GE . Expr
   61     | . Expr LT Expr
   62     | . Expr GT Expr
   63     | . PLUS Expr
   64     | . MINUS Expr
   65     | . NOT Expr
   66     | . IDENTIFIER LPAR error RPAR
   67     | . IDENTIFIER LPAR OPTIONAL6 RPAR
   68     | . IDENTIFIER
   69     | . NATURAL
   70     | . CHRLITS
   71     | . DECIMAL
   72     | . LPAR Expr RPAR
   73     | . LPAR error RPAR

    LPAR        shift, and go to state 26
    MINUS       shift, and go to state 27
    NOT         shift, and go to state 28
    PLUS        shift, and go to state 29
    CHRLITS     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    NATURAL     shift, and go to state 32
    DECIMAL     shift, and go to state 33

    Expr  go to state 104


state 66

   45 Expr: . Expr ASSIGN Expr
   46     | . Expr COMMA Expr
   47     | . Expr PLUS Expr
   48     | . Expr MINUS Expr
   49     | . Expr MUL Expr
   50     | . Expr DIV Expr
   51     | . Expr MOD Expr
   52     | . Expr OR Expr
   53     | . Expr AND Expr
   54     | . Expr BITWISEAND Expr
   55     | . Expr BITWISEOR Expr
   56     | . Expr BITWISEXOR Expr
   57     | . Expr EQ Expr
   58     | . Expr NE Expr
   59     | . Expr LE Expr
   60     | . Expr GE Expr
   61     | . Expr LT Expr
   62     | . Expr GT Expr
   62     | Expr GT . Expr
   63     | . PLUS Expr
   64     | . MINUS Expr
   65     | . NOT Expr
   66     | . IDENTIFIER LPAR error RPAR
   67     | . IDENTIFIER LPAR OPTIONAL6 RPAR
   68     | . IDENTIFIER
   69     | . NATURAL
   70     | . CHRLITS
   71     | . DECIMAL
   72     | . LPAR Expr RPAR
   73     | . LPAR error RPAR

    LPAR        shift, and go to state 26
    MINUS       shift, and go to state 27
    NOT         shift, and go to state 28
    PLUS        shift, and go to state 29
    CHRLITS     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    NATURAL     shift, and go to state 32
    DECIMAL     shift, and go to state 33

    Expr  go to state 105


state 67

   45 Expr: . Expr ASSIGN Expr
   46     | . Expr COMMA Expr
   47     | . Expr PLUS Expr
   48     | . Expr MINUS Expr
   49     | . Expr MUL Expr
   50     | . Expr DIV Expr
   50     | Expr DIV . Expr
   51     | . Expr MOD Expr
   52     | . Expr OR Expr
   53     | . Expr AND Expr
   54     | . Expr BITWISEAND Expr
   55     | . Expr BITWISEOR Expr
   56     | . Expr BITWISEXOR Expr
   57     | . Expr EQ Expr
   58     | . Expr NE Expr
   59     | . Expr LE Expr
   60     | . Expr GE Expr
   61     | . Expr LT Expr
   62     | . Expr GT Expr
   63     | . PLUS Expr
   64     | . MINUS Expr
   65     | . NOT Expr
   66     | . IDENTIFIER LPAR error RPAR
   67     | . IDENTIFIER LPAR OPTIONAL6 RPAR
   68     | . IDENTIFIER
   69     | . NATURAL
   70     | . CHRLITS
   71     | . DECIMAL
   72     | . LPAR Expr RPAR
   73     | . LPAR error RPAR

    LPAR        shift, and go to state 26
    MINUS       shift, and go to state 27
    NOT         shift, and go to state 28
    PLUS        shift, and go to state 29
    CHRLITS     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    NATURAL     shift, and go to state 32
    DECIMAL     shift, and go to state 33

    Expr  go to state 106


state 68

   45 Expr: . Expr ASSIGN Expr
   46     | . Expr COMMA Expr
   47     | . Expr PLUS Expr
   48     | . Expr MINUS Expr
   49     | . Expr MUL Expr
   50     | . Expr DIV Expr
   51     | . Expr MOD Expr
   52     | . Expr OR Expr
   53     | . Expr AND Expr
   54     | . Expr BITWISEAND Expr
   55     | . Expr BITWISEOR Expr
   56     | . Expr BITWISEXOR Expr
   57     | . Expr EQ Expr
   58     | . Expr NE Expr
   59     | . Expr LE Expr
   59     | Expr LE . Expr
   60     | . Expr GE Expr
   61     | . Expr LT Expr
   62     | . Expr GT Expr
   63     | . PLUS Expr
   64     | . MINUS Expr
   65     | . NOT Expr
   66     | . IDENTIFIER LPAR error RPAR
   67     | . IDENTIFIER LPAR OPTIONAL6 RPAR
   68     | . IDENTIFIER
   69     | . NATURAL
   70     | . CHRLITS
   71     | . DECIMAL
   72     | . LPAR Expr RPAR
   73     | . LPAR error RPAR

    LPAR        shift, and go to state 26
    MINUS       shift, and go to state 27
    NOT         shift, and go to state 28
    PLUS        shift, and go to state 29
    CHRLITS     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    NATURAL     shift, and go to state 32
    DECIMAL     shift, and go to state 33

    Expr  go to state 107


state 69

   45 Expr: . Expr ASSIGN Expr
   46     | . Expr COMMA Expr
   47     | . Expr PLUS Expr
   48     | . Expr MINUS Expr
   49     | . Expr MUL Expr
   50     | . Expr DIV Expr
   51     | . Expr MOD Expr
   52     | . Expr OR Expr
   53     | . Expr AND Expr
   54     | . Expr BITWISEAND Expr
   55     | . Expr BITWISEOR Expr
   56     | . Expr BITWISEXOR Expr
   57     | . Expr EQ Expr
   58     | . Expr NE Expr
   59     | . Expr LE Expr
   60     | . Expr GE Expr
   61     | . Expr LT Expr
   61     | Expr LT . Expr
   62     | . Expr GT Expr
   63     | . PLUS Expr
   64     | . MINUS Expr
   65     | . NOT Expr
   66     | . IDENTIFIER LPAR error RPAR
   67     | . IDENTIFIER LPAR OPTIONAL6 RPAR
   68     | . IDENTIFIER
   69     | . NATURAL
   70     | . CHRLITS
   71     | . DECIMAL
   72     | . LPAR Expr RPAR
   73     | . LPAR error RPAR

    LPAR        shift, and go to state 26
    MINUS       shift, and go to state 27
    NOT         shift, and go to state 28
    PLUS        shift, and go to state 29
    CHRLITS     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    NATURAL     shift, and go to state 32
    DECIMAL     shift, and go to state 33

    Expr  go to state 108


state 70

   45 Expr: . Expr ASSIGN Expr
   46     | . Expr COMMA Expr
   47     | . Expr PLUS Expr
   48     | . Expr MINUS Expr
   48     | Expr MINUS . Expr
   49     | . Expr MUL Expr
   50     | . Expr DIV Expr
   51     | . Expr MOD Expr
   52     | . Expr OR Expr
   53     | . Expr AND Expr
   54     | . Expr BITWISEAND Expr
   55     | . Expr BITWISEOR Expr
   56     | . Expr BITWISEXOR Expr
   57     | . Expr EQ Expr
   58     | . Expr NE Expr
   59     | . Expr LE Expr
   60     | . Expr GE Expr
   61     | . Expr LT Expr
   62     | . Expr GT Expr
   63     | . PLUS Expr
   64     | . MINUS Expr
   65     | . NOT Expr
   66     | . IDENTIFIER LPAR error RPAR
   67     | . IDENTIFIER LPAR OPTIONAL6 RPAR
   68     | . IDENTIFIER
   69     | . NATURAL
   70     | . CHRLITS
   71     | . DECIMAL
   72     | . LPAR Expr RPAR
   73     | . LPAR error RPAR

    LPAR        shift, and go to state 26
    MINUS       shift, and go to state 27
    NOT         shift, and go to state 28
    PLUS        shift, and go to state 29
    CHRLITS     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    NATURAL     shift, and go to state 32
    DECIMAL     shift, and go to state 33

    Expr  go to state 109


state 71

   45 Expr: . Expr ASSIGN Expr
   46     | . Expr COMMA Expr
   47     | . Expr PLUS Expr
   48     | . Expr MINUS Expr
   49     | . Expr MUL Expr
   50     | . Expr DIV Expr
   51     | . Expr MOD Expr
   51     | Expr MOD . Expr
   52     | . Expr OR Expr
   53     | . Expr AND Expr
   54     | . Expr BITWISEAND Expr
   55     | . Expr BITWISEOR Expr
   56     | . Expr BITWISEXOR Expr
   57     | . Expr EQ Expr
   58     | . Expr NE Expr
   59     | . Expr LE Expr
   60     | . Expr GE Expr
   61     | . Expr LT Expr
   62     | . Expr GT Expr
   63     | . PLUS Expr
   64     | . MINUS Expr
   65     | . NOT Expr
   66     | . IDENTIFIER LPAR error RPAR
   67     | . IDENTIFIER LPAR OPTIONAL6 RPAR
   68     | . IDENTIFIER
   69     | . NATURAL
   70     | . CHRLITS
   71     | . DECIMAL
   72     | . LPAR Expr RPAR
   73     | . LPAR error RPAR

    LPAR        shift, and go to state 26
    MINUS       shift, and go to state 27
    NOT         shift, and go to state 28
    PLUS        shift, and go to state 29
    CHRLITS     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    NATURAL     shift, and go to state 32
    DECIMAL     shift, and go to state 33

    Expr  go to state 110


state 72

   45 Expr: . Expr ASSIGN Expr
   46     | . Expr COMMA Expr
   47     | . Expr PLUS Expr
   48     | . Expr MINUS Expr
   49     | . Expr MUL Expr
   50     | . Expr DIV Expr
   51     | . Expr MOD Expr
   52     | . Expr OR Expr
   53     | . Expr AND Expr
   54     | . Expr BITWISEAND Expr
   55     | . Expr BITWISEOR Expr
   56     | . Expr BITWISEXOR Expr
   57     | . Expr EQ Expr
   58     | . Expr NE Expr
   58     | Expr NE . Expr
   59     | . Expr LE Expr
   60     | . Expr GE Expr
   61     | . Expr LT Expr
   62     | . Expr GT Expr
   63     | . PLUS Expr
   64     | . MINUS Expr
   65     | . NOT Expr
   66     | . IDENTIFIER LPAR error RPAR
   67     | . IDENTIFIER LPAR OPTIONAL6 RPAR
   68     | . IDENTIFIER
   69     | . NATURAL
   70     | . CHRLITS
   71     | . DECIMAL
   72     | . LPAR Expr RPAR
   73     | . LPAR error RPAR

    LPAR        shift, and go to state 26
    MINUS       shift, and go to state 27
    NOT         shift, and go to state 28
    PLUS        shift, and go to state 29
    CHRLITS     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    NATURAL     shift, and go to state 32
    DECIMAL     shift, and go to state 33

    Expr  go to state 111


state 73

   45 Expr: . Expr ASSIGN Expr
   46     | . Expr COMMA Expr
   47     | . Expr PLUS Expr
   48     | . Expr MINUS Expr
   49     | . Expr MUL Expr
   50     | . Expr DIV Expr
   51     | . Expr MOD Expr
   52     | . Expr OR Expr
   52     | Expr OR . Expr
   53     | . Expr AND Expr
   54     | . Expr BITWISEAND Expr
   55     | . Expr BITWISEOR Expr
   56     | . Expr BITWISEXOR Expr
   57     | . Expr EQ Expr
   58     | . Expr NE Expr
   59     | . Expr LE Expr
   60     | . Expr GE Expr
   61     | . Expr LT Expr
   62     | . Expr GT Expr
   63     | . PLUS Expr
   64     | . MINUS Expr
   65     | . NOT Expr
   66     | . IDENTIFIER LPAR error RPAR
   67     | . IDENTIFIER LPAR OPTIONAL6 RPAR
   68     | . IDENTIFIER
   69     | . NATURAL
   70     | . CHRLITS
   71     | . DECIMAL
   72     | . LPAR Expr RPAR
   73     | . LPAR error RPAR

    LPAR        shift, and go to state 26
    MINUS       shift, and go to state 27
    NOT         shift, and go to state 28
    PLUS        shift, and go to state 29
    CHRLITS     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    NATURAL     shift, and go to state 32
    DECIMAL     shift, and go to state 33

    Expr  go to state 112


state 74

   45 Expr: . Expr ASSIGN Expr
   46     | . Expr COMMA Expr
   47     | . Expr PLUS Expr
   47     | Expr PLUS . Expr
   48     | . Expr MINUS Expr
   49     | . Expr MUL Expr
   50     | . Expr DIV Expr
   51     | . Expr MOD Expr
   52     | . Expr OR Expr
   53     | . Expr AND Expr
   54     | . Expr BITWISEAND Expr
   55     | . Expr BITWISEOR Expr
   56     | . Expr BITWISEXOR Expr
   57     | . Expr EQ Expr
   58     | . Expr NE Expr
   59     | . Expr LE Expr
   60     | . Expr GE Expr
   61     | . Expr LT Expr
   62     | . Expr GT Expr
   63     | . PLUS Expr
   64     | . MINUS Expr
   65     | . NOT Expr
   66     | . IDENTIFIER LPAR error RPAR
   67     | . IDENTIFIER LPAR OPTIONAL6 RPAR
   68     | . IDENTIFIER
   69     | . NATURAL
   70     | . CHRLITS
   71     | . DECIMAL
   72     | . LPAR Expr RPAR
   73     | . LPAR error RPAR

    LPAR        shift, and go to state 26
    MINUS       shift, and go to state 27
    NOT         shift, and go to state 28
    PLUS        shift, and go to state 29
    CHRLITS     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    NATURAL     shift, and go to state 32
    DECIMAL     shift, and go to state 33

    Expr  go to state 113


state 75

   45 Expr: . Expr ASSIGN Expr
   46     | . Expr COMMA Expr
   46     | Expr COMMA . Expr
   47     | . Expr PLUS Expr
   48     | . Expr MINUS Expr
   49     | . Expr MUL Expr
   50     | . Expr DIV Expr
   51     | . Expr MOD Expr
   52     | . Expr OR Expr
   53     | . Expr AND Expr
   54     | . Expr BITWISEAND Expr
   55     | . Expr BITWISEOR Expr
   56     | . Expr BITWISEXOR Expr
   57     | . Expr EQ Expr
   58     | . Expr NE Expr
   59     | . Expr LE Expr
   60     | . Expr GE Expr
   61     | . Expr LT Expr
   62     | . Expr GT Expr
   63     | . PLUS Expr
   64     | . MINUS Expr
   65     | . NOT Expr
   66     | . IDENTIFIER LPAR error RPAR
   67     | . IDENTIFIER LPAR OPTIONAL6 RPAR
   68     | . IDENTIFIER
   69     | . NATURAL
   70     | . CHRLITS
   71     | . DECIMAL
   72     | . LPAR Expr RPAR
   73     | . LPAR error RPAR

    LPAR        shift, and go to state 26
    MINUS       shift, and go to state 27
    NOT         shift, and go to state 28
    PLUS        shift, and go to state 29
    CHRLITS     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    NATURAL     shift, and go to state 32
    DECIMAL     shift, and go to state 33

    Expr  go to state 114


state 76

   15 FunctionDeclarator: IDENTIFIER LPAR ParameterList RPAR .

    $default  reduce using rule 15 (FunctionDeclarator)


state 77

   16 ParameterList: ParameterList COMMA . ParameterDeclaration
   18 ParameterDeclaration: . TypeSpec IDENTIFIER
   19                     | . TypeSpec
   24 TypeSpec: . CHAR
   25         | . INT
   26         | . VOID
   27         | . SHORT
   28         | . DOUBLE

    CHAR    shift, and go to state 2
    INT     shift, and go to state 3
    SHORT   shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6

    ParameterDeclaration  go to state 115
    TypeSpec              go to state 37


state 78

   18 ParameterDeclaration: TypeSpec IDENTIFIER .

    $default  reduce using rule 18 (ParameterDeclaration)


state 79

   21 Declaration: error SEMI .  [error, CHAR, WHILE, IF, INT, SHORT, DOUBLE, RETURN, VOID, LBRACE, LPAR, MINUS, NOT, PLUS, RBRACE, SEMI, CHRLITS, IDENTIFIER, NATURAL, DECIMAL]
   32 Statement: error SEMI .  [error, CHAR, WHILE, IF, INT, SHORT, DOUBLE, RETURN, VOID, LBRACE, LPAR, MINUS, NOT, PLUS, RBRACE, SEMI, CHRLITS, IDENTIFIER, NATURAL, DECIMAL]

    error       reduce using rule 21 (Declaration)
    error       [reduce using rule 32 (Statement)]
    CHAR        reduce using rule 21 (Declaration)
    CHAR        [reduce using rule 32 (Statement)]
    WHILE       reduce using rule 21 (Declaration)
    WHILE       [reduce using rule 32 (Statement)]
    IF          reduce using rule 21 (Declaration)
    IF          [reduce using rule 32 (Statement)]
    INT         reduce using rule 21 (Declaration)
    INT         [reduce using rule 32 (Statement)]
    SHORT       reduce using rule 21 (Declaration)
    SHORT       [reduce using rule 32 (Statement)]
    DOUBLE      reduce using rule 21 (Declaration)
    DOUBLE      [reduce using rule 32 (Statement)]
    RETURN      reduce using rule 21 (Declaration)
    RETURN      [reduce using rule 32 (Statement)]
    VOID        reduce using rule 21 (Declaration)
    VOID        [reduce using rule 32 (Statement)]
    LBRACE      reduce using rule 21 (Declaration)
    LBRACE      [reduce using rule 32 (Statement)]
    LPAR        reduce using rule 21 (Declaration)
    LPAR        [reduce using rule 32 (Statement)]
    MINUS       reduce using rule 21 (Declaration)
    MINUS       [reduce using rule 32 (Statement)]
    NOT         reduce using rule 21 (Declaration)
    NOT         [reduce using rule 32 (Statement)]
    PLUS        reduce using rule 21 (Declaration)
    PLUS        [reduce using rule 32 (Statement)]
    RBRACE      reduce using rule 21 (Declaration)
    RBRACE      [reduce using rule 32 (Statement)]
    SEMI        reduce using rule 21 (Declaration)
    SEMI        [reduce using rule 32 (Statement)]
    CHRLITS     reduce using rule 21 (Declaration)
    CHRLITS     [reduce using rule 32 (Statement)]
    IDENTIFIER  reduce using rule 21 (Declaration)
    IDENTIFIER  [reduce using rule 32 (Statement)]
    NATURAL     reduce using rule 21 (Declaration)
    NATURAL     [reduce using rule 32 (Statement)]
    DECIMAL     reduce using rule 21 (Declaration)
    DECIMAL     [reduce using rule 32 (Statement)]
    $default    reduce using rule 21 (Declaration)


state 80

   37 Statement: WHILE LPAR . Expr RPAR Statement
   45 Expr: . Expr ASSIGN Expr
   46     | . Expr COMMA Expr
   47     | . Expr PLUS Expr
   48     | . Expr MINUS Expr
   49     | . Expr MUL Expr
   50     | . Expr DIV Expr
   51     | . Expr MOD Expr
   52     | . Expr OR Expr
   53     | . Expr AND Expr
   54     | . Expr BITWISEAND Expr
   55     | . Expr BITWISEOR Expr
   56     | . Expr BITWISEXOR Expr
   57     | . Expr EQ Expr
   58     | . Expr NE Expr
   59     | . Expr LE Expr
   60     | . Expr GE Expr
   61     | . Expr LT Expr
   62     | . Expr GT Expr
   63     | . PLUS Expr
   64     | . MINUS Expr
   65     | . NOT Expr
   66     | . IDENTIFIER LPAR error RPAR
   67     | . IDENTIFIER LPAR OPTIONAL6 RPAR
   68     | . IDENTIFIER
   69     | . NATURAL
   70     | . CHRLITS
   71     | . DECIMAL
   72     | . LPAR Expr RPAR
   73     | . LPAR error RPAR

    LPAR        shift, and go to state 26
    MINUS       shift, and go to state 27
    NOT         shift, and go to state 28
    PLUS        shift, and go to state 29
    CHRLITS     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    NATURAL     shift, and go to state 32
    DECIMAL     shift, and go to state 33

    Expr  go to state 116


state 81

   35 Statement: IF LPAR . Expr RPAR Statement OPTIONAL5
   36          | IF LPAR . Expr RPAR Statement
   45 Expr: . Expr ASSIGN Expr
   46     | . Expr COMMA Expr
   47     | . Expr PLUS Expr
   48     | . Expr MINUS Expr
   49     | . Expr MUL Expr
   50     | . Expr DIV Expr
   51     | . Expr MOD Expr
   52     | . Expr OR Expr
   53     | . Expr AND Expr
   54     | . Expr BITWISEAND Expr
   55     | . Expr BITWISEOR Expr
   56     | . Expr BITWISEXOR Expr
   57     | . Expr EQ Expr
   58     | . Expr NE Expr
   59     | . Expr LE Expr
   60     | . Expr GE Expr
   61     | . Expr LT Expr
   62     | . Expr GT Expr
   63     | . PLUS Expr
   64     | . MINUS Expr
   65     | . NOT Expr
   66     | . IDENTIFIER LPAR error RPAR
   67     | . IDENTIFIER LPAR OPTIONAL6 RPAR
   68     | . IDENTIFIER
   69     | . NATURAL
   70     | . CHRLITS
   71     | . DECIMAL
   72     | . LPAR Expr RPAR
   73     | . LPAR error RPAR

    LPAR        shift, and go to state 26
    MINUS       shift, and go to state 27
    NOT         shift, and go to state 28
    PLUS        shift, and go to state 29
    CHRLITS     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    NATURAL     shift, and go to state 32
    DECIMAL     shift, and go to state 33

    Expr  go to state 117


state 82

   38 Statement: RETURN OPTIONAL4 . SEMI

    SEMI  shift, and go to state 118


state 83

   34 Statement: LBRACE error . RBRACE

    RBRACE  shift, and go to state 119


state 84

   31 Statement: . OPTIONAL4 SEMI
   32          | . error SEMI
   33          | . LBRACE ZEROPLUS2 RBRACE
   33          | LBRACE ZEROPLUS2 . RBRACE
   34          | . LBRACE error RBRACE
   35          | . IF LPAR Expr RPAR Statement OPTIONAL5
   36          | . IF LPAR Expr RPAR Statement
   37          | . WHILE LPAR Expr RPAR Statement
   38          | . RETURN OPTIONAL4 SEMI
   39 OPTIONAL4: . Expr
   40          | .  [SEMI]
   43 ZEROPLUS2: ZEROPLUS2 . Statement
   45 Expr: . Expr ASSIGN Expr
   46     | . Expr COMMA Expr
   47     | . Expr PLUS Expr
   48     | . Expr MINUS Expr
   49     | . Expr MUL Expr
   50     | . Expr DIV Expr
   51     | . Expr MOD Expr
   52     | . Expr OR Expr
   53     | . Expr AND Expr
   54     | . Expr BITWISEAND Expr
   55     | . Expr BITWISEOR Expr
   56     | . Expr BITWISEXOR Expr
   57     | . Expr EQ Expr
   58     | . Expr NE Expr
   59     | . Expr LE Expr
   60     | . Expr GE Expr
   61     | . Expr LT Expr
   62     | . Expr GT Expr
   63     | . PLUS Expr
   64     | . MINUS Expr
   65     | . NOT Expr
   66     | . IDENTIFIER LPAR error RPAR
   67     | . IDENTIFIER LPAR OPTIONAL6 RPAR
   68     | . IDENTIFIER
   69     | . NATURAL
   70     | . CHRLITS
   71     | . DECIMAL
   72     | . LPAR Expr RPAR
   73     | . LPAR error RPAR

    error       shift, and go to state 120
    WHILE       shift, and go to state 39
    IF          shift, and go to state 40
    RETURN      shift, and go to state 41
    LBRACE      shift, and go to state 42
    LPAR        shift, and go to state 26
    MINUS       shift, and go to state 27
    NOT         shift, and go to state 28
    PLUS        shift, and go to state 29
    RBRACE      shift, and go to state 121
    CHRLITS     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    NATURAL     shift, and go to state 32
    DECIMAL     shift, and go to state 33

    SEMI  reduce using rule 40 (OPTIONAL4)

    Statement  go to state 122
    OPTIONAL4  go to state 48
    Expr       go to state 49


state 85

    9 FunctionBody: LBRACE DeclarationsAndStatements RBRACE .

    $default  reduce using rule 9 (FunctionBody)


state 86

   11 DeclarationsAndStatements: Declaration DeclarationsAndStatements .

    $default  reduce using rule 11 (DeclarationsAndStatements)


state 87

   29 Declarator: IDENTIFIER . ASSIGN Expr
   30           | IDENTIFIER .  [SEMI, COMMA]

    ASSIGN  shift, and go to state 20

    $default  reduce using rule 30 (Declarator)


state 88

   10 DeclarationsAndStatements: Statement DeclarationsAndStatements .

    $default  reduce using rule 10 (DeclarationsAndStatements)


state 89

   31 Statement: OPTIONAL4 SEMI .

    $default  reduce using rule 31 (Statement)


state 90

   22 ZEROPLUS1: ZEROPLUS1 COMMA Declarator .

    $default  reduce using rule 22 (ZEROPLUS1)


state 91

   73 Expr: LPAR error RPAR .

    $default  reduce using rule 73 (Expr)


state 92

   72 Expr: LPAR Expr RPAR .

    $default  reduce using rule 72 (Expr)


state 93

   66 Expr: IDENTIFIER LPAR error . RPAR

    RPAR  shift, and go to state 123


state 94

   45 Expr: Expr . ASSIGN Expr
   46     | Expr . COMMA Expr
   47     | Expr . PLUS Expr
   48     | Expr . MINUS Expr
   49     | Expr . MUL Expr
   50     | Expr . DIV Expr
   51     | Expr . MOD Expr
   52     | Expr . OR Expr
   53     | Expr . AND Expr
   54     | Expr . BITWISEAND Expr
   55     | Expr . BITWISEOR Expr
   56     | Expr . BITWISEXOR Expr
   57     | Expr . EQ Expr
   58     | Expr . NE Expr
   59     | Expr . LE Expr
   60     | Expr . GE Expr
   61     | Expr . LT Expr
   62     | Expr . GT Expr
   77 ZEROPLUS3: Expr .  [RPAR, COMMA]

    BITWISEAND  shift, and go to state 58
    BITWISEOR   shift, and go to state 59
    BITWISEXOR  shift, and go to state 60
    AND         shift, and go to state 61
    ASSIGN      shift, and go to state 62
    MUL         shift, and go to state 63
    EQ          shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    DIV         shift, and go to state 67
    LE          shift, and go to state 68
    LT          shift, and go to state 69
    MINUS       shift, and go to state 70
    MOD         shift, and go to state 71
    NE          shift, and go to state 72
    OR          shift, and go to state 73
    PLUS        shift, and go to state 74
    COMMA       shift, and go to state 75

    COMMA     [reduce using rule 77 (ZEROPLUS3)]
    $default  reduce using rule 77 (ZEROPLUS3)


state 95

   67 Expr: IDENTIFIER LPAR OPTIONAL6 . RPAR

    RPAR  shift, and go to state 124


state 96

   74 OPTIONAL6: ZEROPLUS3 .  [RPAR]
   76 ZEROPLUS3: ZEROPLUS3 . COMMA Expr

    COMMA  shift, and go to state 125

    $default  reduce using rule 74 (OPTIONAL6)


state 97

   45 Expr: Expr . ASSIGN Expr
   46     | Expr . COMMA Expr
   47     | Expr . PLUS Expr
   48     | Expr . MINUS Expr
   49     | Expr . MUL Expr
   50     | Expr . DIV Expr
   51     | Expr . MOD Expr
   52     | Expr . OR Expr
   53     | Expr . AND Expr
   54     | Expr . BITWISEAND Expr  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, MUL, EQ, GE, GT, DIV, LE, LT, MINUS, MOD, NE, OR, PLUS, RPAR, SEMI, COMMA]
   54     | Expr BITWISEAND Expr .  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, MUL, EQ, GE, GT, DIV, LE, LT, MINUS, MOD, NE, OR, PLUS, RPAR, SEMI, COMMA]
   55     | Expr . BITWISEOR Expr
   56     | Expr . BITWISEXOR Expr
   57     | Expr . EQ Expr
   58     | Expr . NE Expr
   59     | Expr . LE Expr
   60     | Expr . GE Expr
   61     | Expr . LT Expr
   62     | Expr . GT Expr

    BITWISEAND  shift, and go to state 58
    BITWISEOR   shift, and go to state 59
    BITWISEXOR  shift, and go to state 60
    AND         shift, and go to state 61
    ASSIGN      shift, and go to state 62
    MUL         shift, and go to state 63
    EQ          shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    DIV         shift, and go to state 67
    LE          shift, and go to state 68
    LT          shift, and go to state 69
    MINUS       shift, and go to state 70
    MOD         shift, and go to state 71
    NE          shift, and go to state 72
    OR          shift, and go to state 73
    PLUS        shift, and go to state 74
    COMMA       shift, and go to state 75

    BITWISEAND  [reduce using rule 54 (Expr)]
    BITWISEOR   [reduce using rule 54 (Expr)]
    BITWISEXOR  [reduce using rule 54 (Expr)]
    AND         [reduce using rule 54 (Expr)]
    ASSIGN      [reduce using rule 54 (Expr)]
    MUL         [reduce using rule 54 (Expr)]
    EQ          [reduce using rule 54 (Expr)]
    GE          [reduce using rule 54 (Expr)]
    GT          [reduce using rule 54 (Expr)]
    DIV         [reduce using rule 54 (Expr)]
    LE          [reduce using rule 54 (Expr)]
    LT          [reduce using rule 54 (Expr)]
    MINUS       [reduce using rule 54 (Expr)]
    MOD         [reduce using rule 54 (Expr)]
    NE          [reduce using rule 54 (Expr)]
    OR          [reduce using rule 54 (Expr)]
    PLUS        [reduce using rule 54 (Expr)]
    COMMA       [reduce using rule 54 (Expr)]
    $default    reduce using rule 54 (Expr)


state 98

   45 Expr: Expr . ASSIGN Expr
   46     | Expr . COMMA Expr
   47     | Expr . PLUS Expr
   48     | Expr . MINUS Expr
   49     | Expr . MUL Expr
   50     | Expr . DIV Expr
   51     | Expr . MOD Expr
   52     | Expr . OR Expr
   53     | Expr . AND Expr
   54     | Expr . BITWISEAND Expr
   55     | Expr . BITWISEOR Expr  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, MUL, EQ, GE, GT, DIV, LE, LT, MINUS, MOD, NE, OR, PLUS, RPAR, SEMI, COMMA]
   55     | Expr BITWISEOR Expr .  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, MUL, EQ, GE, GT, DIV, LE, LT, MINUS, MOD, NE, OR, PLUS, RPAR, SEMI, COMMA]
   56     | Expr . BITWISEXOR Expr
   57     | Expr . EQ Expr
   58     | Expr . NE Expr
   59     | Expr . LE Expr
   60     | Expr . GE Expr
   61     | Expr . LT Expr
   62     | Expr . GT Expr

    BITWISEAND  shift, and go to state 58
    BITWISEOR   shift, and go to state 59
    BITWISEXOR  shift, and go to state 60
    AND         shift, and go to state 61
    ASSIGN      shift, and go to state 62
    MUL         shift, and go to state 63
    EQ          shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    DIV         shift, and go to state 67
    LE          shift, and go to state 68
    LT          shift, and go to state 69
    MINUS       shift, and go to state 70
    MOD         shift, and go to state 71
    NE          shift, and go to state 72
    OR          shift, and go to state 73
    PLUS        shift, and go to state 74
    COMMA       shift, and go to state 75

    BITWISEAND  [reduce using rule 55 (Expr)]
    BITWISEOR   [reduce using rule 55 (Expr)]
    BITWISEXOR  [reduce using rule 55 (Expr)]
    AND         [reduce using rule 55 (Expr)]
    ASSIGN      [reduce using rule 55 (Expr)]
    MUL         [reduce using rule 55 (Expr)]
    EQ          [reduce using rule 55 (Expr)]
    GE          [reduce using rule 55 (Expr)]
    GT          [reduce using rule 55 (Expr)]
    DIV         [reduce using rule 55 (Expr)]
    LE          [reduce using rule 55 (Expr)]
    LT          [reduce using rule 55 (Expr)]
    MINUS       [reduce using rule 55 (Expr)]
    MOD         [reduce using rule 55 (Expr)]
    NE          [reduce using rule 55 (Expr)]
    OR          [reduce using rule 55 (Expr)]
    PLUS        [reduce using rule 55 (Expr)]
    COMMA       [reduce using rule 55 (Expr)]
    $default    reduce using rule 55 (Expr)


state 99

   45 Expr: Expr . ASSIGN Expr
   46     | Expr . COMMA Expr
   47     | Expr . PLUS Expr
   48     | Expr . MINUS Expr
   49     | Expr . MUL Expr
   50     | Expr . DIV Expr
   51     | Expr . MOD Expr
   52     | Expr . OR Expr
   53     | Expr . AND Expr
   54     | Expr . BITWISEAND Expr
   55     | Expr . BITWISEOR Expr
   56     | Expr . BITWISEXOR Expr  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, MUL, EQ, GE, GT, DIV, LE, LT, MINUS, MOD, NE, OR, PLUS, RPAR, SEMI, COMMA]
   56     | Expr BITWISEXOR Expr .  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, MUL, EQ, GE, GT, DIV, LE, LT, MINUS, MOD, NE, OR, PLUS, RPAR, SEMI, COMMA]
   57     | Expr . EQ Expr
   58     | Expr . NE Expr
   59     | Expr . LE Expr
   60     | Expr . GE Expr
   61     | Expr . LT Expr
   62     | Expr . GT Expr

    BITWISEAND  shift, and go to state 58
    BITWISEOR   shift, and go to state 59
    BITWISEXOR  shift, and go to state 60
    AND         shift, and go to state 61
    ASSIGN      shift, and go to state 62
    MUL         shift, and go to state 63
    EQ          shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    DIV         shift, and go to state 67
    LE          shift, and go to state 68
    LT          shift, and go to state 69
    MINUS       shift, and go to state 70
    MOD         shift, and go to state 71
    NE          shift, and go to state 72
    OR          shift, and go to state 73
    PLUS        shift, and go to state 74
    COMMA       shift, and go to state 75

    BITWISEAND  [reduce using rule 56 (Expr)]
    BITWISEOR   [reduce using rule 56 (Expr)]
    BITWISEXOR  [reduce using rule 56 (Expr)]
    AND         [reduce using rule 56 (Expr)]
    ASSIGN      [reduce using rule 56 (Expr)]
    MUL         [reduce using rule 56 (Expr)]
    EQ          [reduce using rule 56 (Expr)]
    GE          [reduce using rule 56 (Expr)]
    GT          [reduce using rule 56 (Expr)]
    DIV         [reduce using rule 56 (Expr)]
    LE          [reduce using rule 56 (Expr)]
    LT          [reduce using rule 56 (Expr)]
    MINUS       [reduce using rule 56 (Expr)]
    MOD         [reduce using rule 56 (Expr)]
    NE          [reduce using rule 56 (Expr)]
    OR          [reduce using rule 56 (Expr)]
    PLUS        [reduce using rule 56 (Expr)]
    COMMA       [reduce using rule 56 (Expr)]
    $default    reduce using rule 56 (Expr)


state 100

   45 Expr: Expr . ASSIGN Expr
   46     | Expr . COMMA Expr
   47     | Expr . PLUS Expr
   48     | Expr . MINUS Expr
   49     | Expr . MUL Expr
   50     | Expr . DIV Expr
   51     | Expr . MOD Expr
   52     | Expr . OR Expr
   53     | Expr . AND Expr  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, MUL, EQ, GE, GT, DIV, LE, LT, MINUS, MOD, NE, OR, PLUS, RPAR, SEMI, COMMA]
   53     | Expr AND Expr .  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, MUL, EQ, GE, GT, DIV, LE, LT, MINUS, MOD, NE, OR, PLUS, RPAR, SEMI, COMMA]
   54     | Expr . BITWISEAND Expr
   55     | Expr . BITWISEOR Expr
   56     | Expr . BITWISEXOR Expr
   57     | Expr . EQ Expr
   58     | Expr . NE Expr
   59     | Expr . LE Expr
   60     | Expr . GE Expr
   61     | Expr . LT Expr
   62     | Expr . GT Expr

    BITWISEAND  shift, and go to state 58
    BITWISEOR   shift, and go to state 59
    BITWISEXOR  shift, and go to state 60
    AND         shift, and go to state 61
    ASSIGN      shift, and go to state 62
    MUL         shift, and go to state 63
    EQ          shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    DIV         shift, and go to state 67
    LE          shift, and go to state 68
    LT          shift, and go to state 69
    MINUS       shift, and go to state 70
    MOD         shift, and go to state 71
    NE          shift, and go to state 72
    OR          shift, and go to state 73
    PLUS        shift, and go to state 74
    COMMA       shift, and go to state 75

    BITWISEAND  [reduce using rule 53 (Expr)]
    BITWISEOR   [reduce using rule 53 (Expr)]
    BITWISEXOR  [reduce using rule 53 (Expr)]
    AND         [reduce using rule 53 (Expr)]
    ASSIGN      [reduce using rule 53 (Expr)]
    MUL         [reduce using rule 53 (Expr)]
    EQ          [reduce using rule 53 (Expr)]
    GE          [reduce using rule 53 (Expr)]
    GT          [reduce using rule 53 (Expr)]
    DIV         [reduce using rule 53 (Expr)]
    LE          [reduce using rule 53 (Expr)]
    LT          [reduce using rule 53 (Expr)]
    MINUS       [reduce using rule 53 (Expr)]
    MOD         [reduce using rule 53 (Expr)]
    NE          [reduce using rule 53 (Expr)]
    OR          [reduce using rule 53 (Expr)]
    PLUS        [reduce using rule 53 (Expr)]
    COMMA       [reduce using rule 53 (Expr)]
    $default    reduce using rule 53 (Expr)


state 101

   45 Expr: Expr . ASSIGN Expr  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, MUL, EQ, GE, GT, DIV, LE, LT, MINUS, MOD, NE, OR, PLUS, RPAR, SEMI, COMMA]
   45     | Expr ASSIGN Expr .  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, MUL, EQ, GE, GT, DIV, LE, LT, MINUS, MOD, NE, OR, PLUS, RPAR, SEMI, COMMA]
   46     | Expr . COMMA Expr
   47     | Expr . PLUS Expr
   48     | Expr . MINUS Expr
   49     | Expr . MUL Expr
   50     | Expr . DIV Expr
   51     | Expr . MOD Expr
   52     | Expr . OR Expr
   53     | Expr . AND Expr
   54     | Expr . BITWISEAND Expr
   55     | Expr . BITWISEOR Expr
   56     | Expr . BITWISEXOR Expr
   57     | Expr . EQ Expr
   58     | Expr . NE Expr
   59     | Expr . LE Expr
   60     | Expr . GE Expr
   61     | Expr . LT Expr
   62     | Expr . GT Expr

    BITWISEAND  shift, and go to state 58
    BITWISEOR   shift, and go to state 59
    BITWISEXOR  shift, and go to state 60
    AND         shift, and go to state 61
    ASSIGN      shift, and go to state 62
    MUL         shift, and go to state 63
    EQ          shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    DIV         shift, and go to state 67
    LE          shift, and go to state 68
    LT          shift, and go to state 69
    MINUS       shift, and go to state 70
    MOD         shift, and go to state 71
    NE          shift, and go to state 72
    OR          shift, and go to state 73
    PLUS        shift, and go to state 74
    COMMA       shift, and go to state 75

    BITWISEAND  [reduce using rule 45 (Expr)]
    BITWISEOR   [reduce using rule 45 (Expr)]
    BITWISEXOR  [reduce using rule 45 (Expr)]
    AND         [reduce using rule 45 (Expr)]
    ASSIGN      [reduce using rule 45 (Expr)]
    MUL         [reduce using rule 45 (Expr)]
    EQ          [reduce using rule 45 (Expr)]
    GE          [reduce using rule 45 (Expr)]
    GT          [reduce using rule 45 (Expr)]
    DIV         [reduce using rule 45 (Expr)]
    LE          [reduce using rule 45 (Expr)]
    LT          [reduce using rule 45 (Expr)]
    MINUS       [reduce using rule 45 (Expr)]
    MOD         [reduce using rule 45 (Expr)]
    NE          [reduce using rule 45 (Expr)]
    OR          [reduce using rule 45 (Expr)]
    PLUS        [reduce using rule 45 (Expr)]
    COMMA       [reduce using rule 45 (Expr)]
    $default    reduce using rule 45 (Expr)


state 102

   45 Expr: Expr . ASSIGN Expr
   46     | Expr . COMMA Expr
   47     | Expr . PLUS Expr
   48     | Expr . MINUS Expr
   49     | Expr . MUL Expr  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, MUL, EQ, GE, GT, DIV, LE, LT, MINUS, MOD, NE, OR, PLUS, RPAR, SEMI]
   49     | Expr MUL Expr .  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, MUL, EQ, GE, GT, DIV, LE, LT, MINUS, MOD, NE, OR, PLUS, RPAR, SEMI]
   50     | Expr . DIV Expr
   51     | Expr . MOD Expr
   52     | Expr . OR Expr
   53     | Expr . AND Expr
   54     | Expr . BITWISEAND Expr
   55     | Expr . BITWISEOR Expr
   56     | Expr . BITWISEXOR Expr
   57     | Expr . EQ Expr
   58     | Expr . NE Expr
   59     | Expr . LE Expr
   60     | Expr . GE Expr
   61     | Expr . LT Expr
   62     | Expr . GT Expr

    BITWISEAND  shift, and go to state 58
    BITWISEOR   shift, and go to state 59
    BITWISEXOR  shift, and go to state 60
    AND         shift, and go to state 61
    ASSIGN      shift, and go to state 62
    EQ          shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    LE          shift, and go to state 68
    LT          shift, and go to state 69
    MOD         shift, and go to state 71
    NE          shift, and go to state 72
    OR          shift, and go to state 73
    COMMA       shift, and go to state 75

    BITWISEAND  [reduce using rule 49 (Expr)]
    BITWISEOR   [reduce using rule 49 (Expr)]
    BITWISEXOR  [reduce using rule 49 (Expr)]
    AND         [reduce using rule 49 (Expr)]
    ASSIGN      [reduce using rule 49 (Expr)]
    EQ          [reduce using rule 49 (Expr)]
    GE          [reduce using rule 49 (Expr)]
    GT          [reduce using rule 49 (Expr)]
    LE          [reduce using rule 49 (Expr)]
    LT          [reduce using rule 49 (Expr)]
    MOD         [reduce using rule 49 (Expr)]
    NE          [reduce using rule 49 (Expr)]
    OR          [reduce using rule 49 (Expr)]
    $default    reduce using rule 49 (Expr)

    Conflict between rule 49 and token MUL resolved as reduce (%left MUL).
    Conflict between rule 49 and token DIV resolved as reduce (%left DIV).
    Conflict between rule 49 and token MINUS resolved as reduce (MINUS < MUL).
    Conflict between rule 49 and token PLUS resolved as reduce (PLUS < MUL).
    Conflict between rule 49 and token COMMA resolved as shift (MUL < COMMA).


state 103

   45 Expr: Expr . ASSIGN Expr
   46     | Expr . COMMA Expr
   47     | Expr . PLUS Expr
   48     | Expr . MINUS Expr
   49     | Expr . MUL Expr
   50     | Expr . DIV Expr
   51     | Expr . MOD Expr
   52     | Expr . OR Expr
   53     | Expr . AND Expr
   54     | Expr . BITWISEAND Expr
   55     | Expr . BITWISEOR Expr
   56     | Expr . BITWISEXOR Expr
   57     | Expr . EQ Expr  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, MUL, EQ, GE, GT, DIV, LE, LT, MINUS, MOD, NE, OR, PLUS, RPAR, SEMI, COMMA]
   57     | Expr EQ Expr .  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, MUL, EQ, GE, GT, DIV, LE, LT, MINUS, MOD, NE, OR, PLUS, RPAR, SEMI, COMMA]
   58     | Expr . NE Expr
   59     | Expr . LE Expr
   60     | Expr . GE Expr
   61     | Expr . LT Expr
   62     | Expr . GT Expr

    BITWISEAND  shift, and go to state 58
    BITWISEOR   shift, and go to state 59
    BITWISEXOR  shift, and go to state 60
    AND         shift, and go to state 61
    ASSIGN      shift, and go to state 62
    MUL         shift, and go to state 63
    EQ          shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    DIV         shift, and go to state 67
    LE          shift, and go to state 68
    LT          shift, and go to state 69
    MINUS       shift, and go to state 70
    MOD         shift, and go to state 71
    NE          shift, and go to state 72
    OR          shift, and go to state 73
    PLUS        shift, and go to state 74
    COMMA       shift, and go to state 75

    BITWISEAND  [reduce using rule 57 (Expr)]
    BITWISEOR   [reduce using rule 57 (Expr)]
    BITWISEXOR  [reduce using rule 57 (Expr)]
    AND         [reduce using rule 57 (Expr)]
    ASSIGN      [reduce using rule 57 (Expr)]
    MUL         [reduce using rule 57 (Expr)]
    EQ          [reduce using rule 57 (Expr)]
    GE          [reduce using rule 57 (Expr)]
    GT          [reduce using rule 57 (Expr)]
    DIV         [reduce using rule 57 (Expr)]
    LE          [reduce using rule 57 (Expr)]
    LT          [reduce using rule 57 (Expr)]
    MINUS       [reduce using rule 57 (Expr)]
    MOD         [reduce using rule 57 (Expr)]
    NE          [reduce using rule 57 (Expr)]
    OR          [reduce using rule 57 (Expr)]
    PLUS        [reduce using rule 57 (Expr)]
    COMMA       [reduce using rule 57 (Expr)]
    $default    reduce using rule 57 (Expr)


state 104

   45 Expr: Expr . ASSIGN Expr
   46     | Expr . COMMA Expr
   47     | Expr . PLUS Expr
   48     | Expr . MINUS Expr
   49     | Expr . MUL Expr
   50     | Expr . DIV Expr
   51     | Expr . MOD Expr
   52     | Expr . OR Expr
   53     | Expr . AND Expr
   54     | Expr . BITWISEAND Expr
   55     | Expr . BITWISEOR Expr
   56     | Expr . BITWISEXOR Expr
   57     | Expr . EQ Expr
   58     | Expr . NE Expr
   59     | Expr . LE Expr
   60     | Expr . GE Expr  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, MUL, EQ, GE, GT, DIV, LE, LT, MINUS, MOD, NE, OR, PLUS, RPAR, SEMI, COMMA]
   60     | Expr GE Expr .  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, MUL, EQ, GE, GT, DIV, LE, LT, MINUS, MOD, NE, OR, PLUS, RPAR, SEMI, COMMA]
   61     | Expr . LT Expr
   62     | Expr . GT Expr

    BITWISEAND  shift, and go to state 58
    BITWISEOR   shift, and go to state 59
    BITWISEXOR  shift, and go to state 60
    AND         shift, and go to state 61
    ASSIGN      shift, and go to state 62
    MUL         shift, and go to state 63
    EQ          shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    DIV         shift, and go to state 67
    LE          shift, and go to state 68
    LT          shift, and go to state 69
    MINUS       shift, and go to state 70
    MOD         shift, and go to state 71
    NE          shift, and go to state 72
    OR          shift, and go to state 73
    PLUS        shift, and go to state 74
    COMMA       shift, and go to state 75

    BITWISEAND  [reduce using rule 60 (Expr)]
    BITWISEOR   [reduce using rule 60 (Expr)]
    BITWISEXOR  [reduce using rule 60 (Expr)]
    AND         [reduce using rule 60 (Expr)]
    ASSIGN      [reduce using rule 60 (Expr)]
    MUL         [reduce using rule 60 (Expr)]
    EQ          [reduce using rule 60 (Expr)]
    GE          [reduce using rule 60 (Expr)]
    GT          [reduce using rule 60 (Expr)]
    DIV         [reduce using rule 60 (Expr)]
    LE          [reduce using rule 60 (Expr)]
    LT          [reduce using rule 60 (Expr)]
    MINUS       [reduce using rule 60 (Expr)]
    MOD         [reduce using rule 60 (Expr)]
    NE          [reduce using rule 60 (Expr)]
    OR          [reduce using rule 60 (Expr)]
    PLUS        [reduce using rule 60 (Expr)]
    COMMA       [reduce using rule 60 (Expr)]
    $default    reduce using rule 60 (Expr)


state 105

   45 Expr: Expr . ASSIGN Expr
   46     | Expr . COMMA Expr
   47     | Expr . PLUS Expr
   48     | Expr . MINUS Expr
   49     | Expr . MUL Expr
   50     | Expr . DIV Expr
   51     | Expr . MOD Expr
   52     | Expr . OR Expr
   53     | Expr . AND Expr
   54     | Expr . BITWISEAND Expr
   55     | Expr . BITWISEOR Expr
   56     | Expr . BITWISEXOR Expr
   57     | Expr . EQ Expr
   58     | Expr . NE Expr
   59     | Expr . LE Expr
   60     | Expr . GE Expr
   61     | Expr . LT Expr
   62     | Expr . GT Expr  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, MUL, EQ, GE, GT, DIV, LE, LT, MINUS, MOD, NE, OR, PLUS, RPAR, SEMI, COMMA]
   62     | Expr GT Expr .  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, MUL, EQ, GE, GT, DIV, LE, LT, MINUS, MOD, NE, OR, PLUS, RPAR, SEMI, COMMA]

    BITWISEAND  shift, and go to state 58
    BITWISEOR   shift, and go to state 59
    BITWISEXOR  shift, and go to state 60
    AND         shift, and go to state 61
    ASSIGN      shift, and go to state 62
    MUL         shift, and go to state 63
    EQ          shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    DIV         shift, and go to state 67
    LE          shift, and go to state 68
    LT          shift, and go to state 69
    MINUS       shift, and go to state 70
    MOD         shift, and go to state 71
    NE          shift, and go to state 72
    OR          shift, and go to state 73
    PLUS        shift, and go to state 74
    COMMA       shift, and go to state 75

    BITWISEAND  [reduce using rule 62 (Expr)]
    BITWISEOR   [reduce using rule 62 (Expr)]
    BITWISEXOR  [reduce using rule 62 (Expr)]
    AND         [reduce using rule 62 (Expr)]
    ASSIGN      [reduce using rule 62 (Expr)]
    MUL         [reduce using rule 62 (Expr)]
    EQ          [reduce using rule 62 (Expr)]
    GE          [reduce using rule 62 (Expr)]
    GT          [reduce using rule 62 (Expr)]
    DIV         [reduce using rule 62 (Expr)]
    LE          [reduce using rule 62 (Expr)]
    LT          [reduce using rule 62 (Expr)]
    MINUS       [reduce using rule 62 (Expr)]
    MOD         [reduce using rule 62 (Expr)]
    NE          [reduce using rule 62 (Expr)]
    OR          [reduce using rule 62 (Expr)]
    PLUS        [reduce using rule 62 (Expr)]
    COMMA       [reduce using rule 62 (Expr)]
    $default    reduce using rule 62 (Expr)


state 106

   45 Expr: Expr . ASSIGN Expr
   46     | Expr . COMMA Expr
   47     | Expr . PLUS Expr
   48     | Expr . MINUS Expr
   49     | Expr . MUL Expr
   50     | Expr . DIV Expr  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, MUL, EQ, GE, GT, DIV, LE, LT, MINUS, MOD, NE, OR, PLUS, RPAR, SEMI]
   50     | Expr DIV Expr .  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, MUL, EQ, GE, GT, DIV, LE, LT, MINUS, MOD, NE, OR, PLUS, RPAR, SEMI]
   51     | Expr . MOD Expr
   52     | Expr . OR Expr
   53     | Expr . AND Expr
   54     | Expr . BITWISEAND Expr
   55     | Expr . BITWISEOR Expr
   56     | Expr . BITWISEXOR Expr
   57     | Expr . EQ Expr
   58     | Expr . NE Expr
   59     | Expr . LE Expr
   60     | Expr . GE Expr
   61     | Expr . LT Expr
   62     | Expr . GT Expr

    BITWISEAND  shift, and go to state 58
    BITWISEOR   shift, and go to state 59
    BITWISEXOR  shift, and go to state 60
    AND         shift, and go to state 61
    ASSIGN      shift, and go to state 62
    EQ          shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    LE          shift, and go to state 68
    LT          shift, and go to state 69
    MOD         shift, and go to state 71
    NE          shift, and go to state 72
    OR          shift, and go to state 73
    COMMA       shift, and go to state 75

    BITWISEAND  [reduce using rule 50 (Expr)]
    BITWISEOR   [reduce using rule 50 (Expr)]
    BITWISEXOR  [reduce using rule 50 (Expr)]
    AND         [reduce using rule 50 (Expr)]
    ASSIGN      [reduce using rule 50 (Expr)]
    EQ          [reduce using rule 50 (Expr)]
    GE          [reduce using rule 50 (Expr)]
    GT          [reduce using rule 50 (Expr)]
    LE          [reduce using rule 50 (Expr)]
    LT          [reduce using rule 50 (Expr)]
    MOD         [reduce using rule 50 (Expr)]
    NE          [reduce using rule 50 (Expr)]
    OR          [reduce using rule 50 (Expr)]
    $default    reduce using rule 50 (Expr)

    Conflict between rule 50 and token MUL resolved as reduce (%left MUL).
    Conflict between rule 50 and token DIV resolved as reduce (%left DIV).
    Conflict between rule 50 and token MINUS resolved as reduce (MINUS < DIV).
    Conflict between rule 50 and token PLUS resolved as reduce (PLUS < DIV).
    Conflict between rule 50 and token COMMA resolved as shift (DIV < COMMA).


state 107

   45 Expr: Expr . ASSIGN Expr
   46     | Expr . COMMA Expr
   47     | Expr . PLUS Expr
   48     | Expr . MINUS Expr
   49     | Expr . MUL Expr
   50     | Expr . DIV Expr
   51     | Expr . MOD Expr
   52     | Expr . OR Expr
   53     | Expr . AND Expr
   54     | Expr . BITWISEAND Expr
   55     | Expr . BITWISEOR Expr
   56     | Expr . BITWISEXOR Expr
   57     | Expr . EQ Expr
   58     | Expr . NE Expr
   59     | Expr . LE Expr  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, MUL, EQ, GE, GT, DIV, LE, LT, MINUS, MOD, NE, OR, PLUS, RPAR, SEMI, COMMA]
   59     | Expr LE Expr .  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, MUL, EQ, GE, GT, DIV, LE, LT, MINUS, MOD, NE, OR, PLUS, RPAR, SEMI, COMMA]
   60     | Expr . GE Expr
   61     | Expr . LT Expr
   62     | Expr . GT Expr

    BITWISEAND  shift, and go to state 58
    BITWISEOR   shift, and go to state 59
    BITWISEXOR  shift, and go to state 60
    AND         shift, and go to state 61
    ASSIGN      shift, and go to state 62
    MUL         shift, and go to state 63
    EQ          shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    DIV         shift, and go to state 67
    LE          shift, and go to state 68
    LT          shift, and go to state 69
    MINUS       shift, and go to state 70
    MOD         shift, and go to state 71
    NE          shift, and go to state 72
    OR          shift, and go to state 73
    PLUS        shift, and go to state 74
    COMMA       shift, and go to state 75

    BITWISEAND  [reduce using rule 59 (Expr)]
    BITWISEOR   [reduce using rule 59 (Expr)]
    BITWISEXOR  [reduce using rule 59 (Expr)]
    AND         [reduce using rule 59 (Expr)]
    ASSIGN      [reduce using rule 59 (Expr)]
    MUL         [reduce using rule 59 (Expr)]
    EQ          [reduce using rule 59 (Expr)]
    GE          [reduce using rule 59 (Expr)]
    GT          [reduce using rule 59 (Expr)]
    DIV         [reduce using rule 59 (Expr)]
    LE          [reduce using rule 59 (Expr)]
    LT          [reduce using rule 59 (Expr)]
    MINUS       [reduce using rule 59 (Expr)]
    MOD         [reduce using rule 59 (Expr)]
    NE          [reduce using rule 59 (Expr)]
    OR          [reduce using rule 59 (Expr)]
    PLUS        [reduce using rule 59 (Expr)]
    COMMA       [reduce using rule 59 (Expr)]
    $default    reduce using rule 59 (Expr)


state 108

   45 Expr: Expr . ASSIGN Expr
   46     | Expr . COMMA Expr
   47     | Expr . PLUS Expr
   48     | Expr . MINUS Expr
   49     | Expr . MUL Expr
   50     | Expr . DIV Expr
   51     | Expr . MOD Expr
   52     | Expr . OR Expr
   53     | Expr . AND Expr
   54     | Expr . BITWISEAND Expr
   55     | Expr . BITWISEOR Expr
   56     | Expr . BITWISEXOR Expr
   57     | Expr . EQ Expr
   58     | Expr . NE Expr
   59     | Expr . LE Expr
   60     | Expr . GE Expr
   61     | Expr . LT Expr  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, MUL, EQ, GE, GT, DIV, LE, LT, MINUS, MOD, NE, OR, PLUS, RPAR, SEMI, COMMA]
   61     | Expr LT Expr .  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, MUL, EQ, GE, GT, DIV, LE, LT, MINUS, MOD, NE, OR, PLUS, RPAR, SEMI, COMMA]
   62     | Expr . GT Expr

    BITWISEAND  shift, and go to state 58
    BITWISEOR   shift, and go to state 59
    BITWISEXOR  shift, and go to state 60
    AND         shift, and go to state 61
    ASSIGN      shift, and go to state 62
    MUL         shift, and go to state 63
    EQ          shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    DIV         shift, and go to state 67
    LE          shift, and go to state 68
    LT          shift, and go to state 69
    MINUS       shift, and go to state 70
    MOD         shift, and go to state 71
    NE          shift, and go to state 72
    OR          shift, and go to state 73
    PLUS        shift, and go to state 74
    COMMA       shift, and go to state 75

    BITWISEAND  [reduce using rule 61 (Expr)]
    BITWISEOR   [reduce using rule 61 (Expr)]
    BITWISEXOR  [reduce using rule 61 (Expr)]
    AND         [reduce using rule 61 (Expr)]
    ASSIGN      [reduce using rule 61 (Expr)]
    MUL         [reduce using rule 61 (Expr)]
    EQ          [reduce using rule 61 (Expr)]
    GE          [reduce using rule 61 (Expr)]
    GT          [reduce using rule 61 (Expr)]
    DIV         [reduce using rule 61 (Expr)]
    LE          [reduce using rule 61 (Expr)]
    LT          [reduce using rule 61 (Expr)]
    MINUS       [reduce using rule 61 (Expr)]
    MOD         [reduce using rule 61 (Expr)]
    NE          [reduce using rule 61 (Expr)]
    OR          [reduce using rule 61 (Expr)]
    PLUS        [reduce using rule 61 (Expr)]
    COMMA       [reduce using rule 61 (Expr)]
    $default    reduce using rule 61 (Expr)


state 109

   45 Expr: Expr . ASSIGN Expr
   46     | Expr . COMMA Expr
   47     | Expr . PLUS Expr
   48     | Expr . MINUS Expr  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, EQ, GE, GT, LE, LT, MINUS, MOD, NE, OR, PLUS, RPAR, SEMI]
   48     | Expr MINUS Expr .  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, EQ, GE, GT, LE, LT, MINUS, MOD, NE, OR, PLUS, RPAR, SEMI]
   49     | Expr . MUL Expr
   50     | Expr . DIV Expr
   51     | Expr . MOD Expr
   52     | Expr . OR Expr
   53     | Expr . AND Expr
   54     | Expr . BITWISEAND Expr
   55     | Expr . BITWISEOR Expr
   56     | Expr . BITWISEXOR Expr
   57     | Expr . EQ Expr
   58     | Expr . NE Expr
   59     | Expr . LE Expr
   60     | Expr . GE Expr
   61     | Expr . LT Expr
   62     | Expr . GT Expr

    BITWISEAND  shift, and go to state 58
    BITWISEOR   shift, and go to state 59
    BITWISEXOR  shift, and go to state 60
    AND         shift, and go to state 61
    ASSIGN      shift, and go to state 62
    MUL         shift, and go to state 63
    EQ          shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    DIV         shift, and go to state 67
    LE          shift, and go to state 68
    LT          shift, and go to state 69
    MOD         shift, and go to state 71
    NE          shift, and go to state 72
    OR          shift, and go to state 73
    COMMA       shift, and go to state 75

    BITWISEAND  [reduce using rule 48 (Expr)]
    BITWISEOR   [reduce using rule 48 (Expr)]
    BITWISEXOR  [reduce using rule 48 (Expr)]
    AND         [reduce using rule 48 (Expr)]
    ASSIGN      [reduce using rule 48 (Expr)]
    EQ          [reduce using rule 48 (Expr)]
    GE          [reduce using rule 48 (Expr)]
    GT          [reduce using rule 48 (Expr)]
    LE          [reduce using rule 48 (Expr)]
    LT          [reduce using rule 48 (Expr)]
    MOD         [reduce using rule 48 (Expr)]
    NE          [reduce using rule 48 (Expr)]
    OR          [reduce using rule 48 (Expr)]
    $default    reduce using rule 48 (Expr)

    Conflict between rule 48 and token MUL resolved as shift (MINUS < MUL).
    Conflict between rule 48 and token DIV resolved as shift (MINUS < DIV).
    Conflict between rule 48 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 48 and token PLUS resolved as reduce (%left PLUS).
    Conflict between rule 48 and token COMMA resolved as shift (MINUS < COMMA).


state 110

   45 Expr: Expr . ASSIGN Expr
   46     | Expr . COMMA Expr
   47     | Expr . PLUS Expr
   48     | Expr . MINUS Expr
   49     | Expr . MUL Expr
   50     | Expr . DIV Expr
   51     | Expr . MOD Expr  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, MUL, EQ, GE, GT, DIV, LE, LT, MINUS, MOD, NE, OR, PLUS, RPAR, SEMI, COMMA]
   51     | Expr MOD Expr .  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, MUL, EQ, GE, GT, DIV, LE, LT, MINUS, MOD, NE, OR, PLUS, RPAR, SEMI, COMMA]
   52     | Expr . OR Expr
   53     | Expr . AND Expr
   54     | Expr . BITWISEAND Expr
   55     | Expr . BITWISEOR Expr
   56     | Expr . BITWISEXOR Expr
   57     | Expr . EQ Expr
   58     | Expr . NE Expr
   59     | Expr . LE Expr
   60     | Expr . GE Expr
   61     | Expr . LT Expr
   62     | Expr . GT Expr

    BITWISEAND  shift, and go to state 58
    BITWISEOR   shift, and go to state 59
    BITWISEXOR  shift, and go to state 60
    AND         shift, and go to state 61
    ASSIGN      shift, and go to state 62
    MUL         shift, and go to state 63
    EQ          shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    DIV         shift, and go to state 67
    LE          shift, and go to state 68
    LT          shift, and go to state 69
    MINUS       shift, and go to state 70
    MOD         shift, and go to state 71
    NE          shift, and go to state 72
    OR          shift, and go to state 73
    PLUS        shift, and go to state 74
    COMMA       shift, and go to state 75

    BITWISEAND  [reduce using rule 51 (Expr)]
    BITWISEOR   [reduce using rule 51 (Expr)]
    BITWISEXOR  [reduce using rule 51 (Expr)]
    AND         [reduce using rule 51 (Expr)]
    ASSIGN      [reduce using rule 51 (Expr)]
    MUL         [reduce using rule 51 (Expr)]
    EQ          [reduce using rule 51 (Expr)]
    GE          [reduce using rule 51 (Expr)]
    GT          [reduce using rule 51 (Expr)]
    DIV         [reduce using rule 51 (Expr)]
    LE          [reduce using rule 51 (Expr)]
    LT          [reduce using rule 51 (Expr)]
    MINUS       [reduce using rule 51 (Expr)]
    MOD         [reduce using rule 51 (Expr)]
    NE          [reduce using rule 51 (Expr)]
    OR          [reduce using rule 51 (Expr)]
    PLUS        [reduce using rule 51 (Expr)]
    COMMA       [reduce using rule 51 (Expr)]
    $default    reduce using rule 51 (Expr)


state 111

   45 Expr: Expr . ASSIGN Expr
   46     | Expr . COMMA Expr
   47     | Expr . PLUS Expr
   48     | Expr . MINUS Expr
   49     | Expr . MUL Expr
   50     | Expr . DIV Expr
   51     | Expr . MOD Expr
   52     | Expr . OR Expr
   53     | Expr . AND Expr
   54     | Expr . BITWISEAND Expr
   55     | Expr . BITWISEOR Expr
   56     | Expr . BITWISEXOR Expr
   57     | Expr . EQ Expr
   58     | Expr . NE Expr  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, MUL, EQ, GE, GT, DIV, LE, LT, MINUS, MOD, NE, OR, PLUS, RPAR, SEMI, COMMA]
   58     | Expr NE Expr .  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, MUL, EQ, GE, GT, DIV, LE, LT, MINUS, MOD, NE, OR, PLUS, RPAR, SEMI, COMMA]
   59     | Expr . LE Expr
   60     | Expr . GE Expr
   61     | Expr . LT Expr
   62     | Expr . GT Expr

    BITWISEAND  shift, and go to state 58
    BITWISEOR   shift, and go to state 59
    BITWISEXOR  shift, and go to state 60
    AND         shift, and go to state 61
    ASSIGN      shift, and go to state 62
    MUL         shift, and go to state 63
    EQ          shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    DIV         shift, and go to state 67
    LE          shift, and go to state 68
    LT          shift, and go to state 69
    MINUS       shift, and go to state 70
    MOD         shift, and go to state 71
    NE          shift, and go to state 72
    OR          shift, and go to state 73
    PLUS        shift, and go to state 74
    COMMA       shift, and go to state 75

    BITWISEAND  [reduce using rule 58 (Expr)]
    BITWISEOR   [reduce using rule 58 (Expr)]
    BITWISEXOR  [reduce using rule 58 (Expr)]
    AND         [reduce using rule 58 (Expr)]
    ASSIGN      [reduce using rule 58 (Expr)]
    MUL         [reduce using rule 58 (Expr)]
    EQ          [reduce using rule 58 (Expr)]
    GE          [reduce using rule 58 (Expr)]
    GT          [reduce using rule 58 (Expr)]
    DIV         [reduce using rule 58 (Expr)]
    LE          [reduce using rule 58 (Expr)]
    LT          [reduce using rule 58 (Expr)]
    MINUS       [reduce using rule 58 (Expr)]
    MOD         [reduce using rule 58 (Expr)]
    NE          [reduce using rule 58 (Expr)]
    OR          [reduce using rule 58 (Expr)]
    PLUS        [reduce using rule 58 (Expr)]
    COMMA       [reduce using rule 58 (Expr)]
    $default    reduce using rule 58 (Expr)


state 112

   45 Expr: Expr . ASSIGN Expr
   46     | Expr . COMMA Expr
   47     | Expr . PLUS Expr
   48     | Expr . MINUS Expr
   49     | Expr . MUL Expr
   50     | Expr . DIV Expr
   51     | Expr . MOD Expr
   52     | Expr . OR Expr  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, MUL, EQ, GE, GT, DIV, LE, LT, MINUS, MOD, NE, OR, PLUS, RPAR, SEMI, COMMA]
   52     | Expr OR Expr .  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, MUL, EQ, GE, GT, DIV, LE, LT, MINUS, MOD, NE, OR, PLUS, RPAR, SEMI, COMMA]
   53     | Expr . AND Expr
   54     | Expr . BITWISEAND Expr
   55     | Expr . BITWISEOR Expr
   56     | Expr . BITWISEXOR Expr
   57     | Expr . EQ Expr
   58     | Expr . NE Expr
   59     | Expr . LE Expr
   60     | Expr . GE Expr
   61     | Expr . LT Expr
   62     | Expr . GT Expr

    BITWISEAND  shift, and go to state 58
    BITWISEOR   shift, and go to state 59
    BITWISEXOR  shift, and go to state 60
    AND         shift, and go to state 61
    ASSIGN      shift, and go to state 62
    MUL         shift, and go to state 63
    EQ          shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    DIV         shift, and go to state 67
    LE          shift, and go to state 68
    LT          shift, and go to state 69
    MINUS       shift, and go to state 70
    MOD         shift, and go to state 71
    NE          shift, and go to state 72
    OR          shift, and go to state 73
    PLUS        shift, and go to state 74
    COMMA       shift, and go to state 75

    BITWISEAND  [reduce using rule 52 (Expr)]
    BITWISEOR   [reduce using rule 52 (Expr)]
    BITWISEXOR  [reduce using rule 52 (Expr)]
    AND         [reduce using rule 52 (Expr)]
    ASSIGN      [reduce using rule 52 (Expr)]
    MUL         [reduce using rule 52 (Expr)]
    EQ          [reduce using rule 52 (Expr)]
    GE          [reduce using rule 52 (Expr)]
    GT          [reduce using rule 52 (Expr)]
    DIV         [reduce using rule 52 (Expr)]
    LE          [reduce using rule 52 (Expr)]
    LT          [reduce using rule 52 (Expr)]
    MINUS       [reduce using rule 52 (Expr)]
    MOD         [reduce using rule 52 (Expr)]
    NE          [reduce using rule 52 (Expr)]
    OR          [reduce using rule 52 (Expr)]
    PLUS        [reduce using rule 52 (Expr)]
    COMMA       [reduce using rule 52 (Expr)]
    $default    reduce using rule 52 (Expr)


state 113

   45 Expr: Expr . ASSIGN Expr
   46     | Expr . COMMA Expr
   47     | Expr . PLUS Expr  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, EQ, GE, GT, LE, LT, MINUS, MOD, NE, OR, PLUS, RPAR, SEMI]
   47     | Expr PLUS Expr .  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, EQ, GE, GT, LE, LT, MINUS, MOD, NE, OR, PLUS, RPAR, SEMI]
   48     | Expr . MINUS Expr
   49     | Expr . MUL Expr
   50     | Expr . DIV Expr
   51     | Expr . MOD Expr
   52     | Expr . OR Expr
   53     | Expr . AND Expr
   54     | Expr . BITWISEAND Expr
   55     | Expr . BITWISEOR Expr
   56     | Expr . BITWISEXOR Expr
   57     | Expr . EQ Expr
   58     | Expr . NE Expr
   59     | Expr . LE Expr
   60     | Expr . GE Expr
   61     | Expr . LT Expr
   62     | Expr . GT Expr

    BITWISEAND  shift, and go to state 58
    BITWISEOR   shift, and go to state 59
    BITWISEXOR  shift, and go to state 60
    AND         shift, and go to state 61
    ASSIGN      shift, and go to state 62
    MUL         shift, and go to state 63
    EQ          shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    DIV         shift, and go to state 67
    LE          shift, and go to state 68
    LT          shift, and go to state 69
    MOD         shift, and go to state 71
    NE          shift, and go to state 72
    OR          shift, and go to state 73
    COMMA       shift, and go to state 75

    BITWISEAND  [reduce using rule 47 (Expr)]
    BITWISEOR   [reduce using rule 47 (Expr)]
    BITWISEXOR  [reduce using rule 47 (Expr)]
    AND         [reduce using rule 47 (Expr)]
    ASSIGN      [reduce using rule 47 (Expr)]
    EQ          [reduce using rule 47 (Expr)]
    GE          [reduce using rule 47 (Expr)]
    GT          [reduce using rule 47 (Expr)]
    LE          [reduce using rule 47 (Expr)]
    LT          [reduce using rule 47 (Expr)]
    MOD         [reduce using rule 47 (Expr)]
    NE          [reduce using rule 47 (Expr)]
    OR          [reduce using rule 47 (Expr)]
    $default    reduce using rule 47 (Expr)

    Conflict between rule 47 and token MUL resolved as shift (PLUS < MUL).
    Conflict between rule 47 and token DIV resolved as shift (PLUS < DIV).
    Conflict between rule 47 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 47 and token PLUS resolved as reduce (%left PLUS).
    Conflict between rule 47 and token COMMA resolved as shift (PLUS < COMMA).


state 114

   45 Expr: Expr . ASSIGN Expr
   46     | Expr . COMMA Expr  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, MUL, EQ, GE, GT, DIV, LE, LT, MINUS, MOD, NE, OR, PLUS, RPAR, SEMI, COMMA]
   46     | Expr COMMA Expr .  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, MUL, EQ, GE, GT, DIV, LE, LT, MINUS, MOD, NE, OR, PLUS, RPAR, SEMI, COMMA]
   47     | Expr . PLUS Expr
   48     | Expr . MINUS Expr
   49     | Expr . MUL Expr
   50     | Expr . DIV Expr
   51     | Expr . MOD Expr
   52     | Expr . OR Expr
   53     | Expr . AND Expr
   54     | Expr . BITWISEAND Expr
   55     | Expr . BITWISEOR Expr
   56     | Expr . BITWISEXOR Expr
   57     | Expr . EQ Expr
   58     | Expr . NE Expr
   59     | Expr . LE Expr
   60     | Expr . GE Expr
   61     | Expr . LT Expr
   62     | Expr . GT Expr

    BITWISEAND  shift, and go to state 58
    BITWISEOR   shift, and go to state 59
    BITWISEXOR  shift, and go to state 60
    AND         shift, and go to state 61
    ASSIGN      shift, and go to state 62
    EQ          shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    LE          shift, and go to state 68
    LT          shift, and go to state 69
    MOD         shift, and go to state 71
    NE          shift, and go to state 72
    OR          shift, and go to state 73

    BITWISEAND  [reduce using rule 46 (Expr)]
    BITWISEOR   [reduce using rule 46 (Expr)]
    BITWISEXOR  [reduce using rule 46 (Expr)]
    AND         [reduce using rule 46 (Expr)]
    ASSIGN      [reduce using rule 46 (Expr)]
    EQ          [reduce using rule 46 (Expr)]
    GE          [reduce using rule 46 (Expr)]
    GT          [reduce using rule 46 (Expr)]
    LE          [reduce using rule 46 (Expr)]
    LT          [reduce using rule 46 (Expr)]
    MOD         [reduce using rule 46 (Expr)]
    NE          [reduce using rule 46 (Expr)]
    OR          [reduce using rule 46 (Expr)]
    $default    reduce using rule 46 (Expr)

    Conflict between rule 46 and token MUL resolved as reduce (MUL < COMMA).
    Conflict between rule 46 and token DIV resolved as reduce (DIV < COMMA).
    Conflict between rule 46 and token MINUS resolved as reduce (MINUS < COMMA).
    Conflict between rule 46 and token PLUS resolved as reduce (PLUS < COMMA).
    Conflict between rule 46 and token COMMA resolved as reduce (%left COMMA).


state 115

   16 ParameterList: ParameterList COMMA ParameterDeclaration .

    $default  reduce using rule 16 (ParameterList)


state 116

   37 Statement: WHILE LPAR Expr . RPAR Statement
   45 Expr: Expr . ASSIGN Expr
   46     | Expr . COMMA Expr
   47     | Expr . PLUS Expr
   48     | Expr . MINUS Expr
   49     | Expr . MUL Expr
   50     | Expr . DIV Expr
   51     | Expr . MOD Expr
   52     | Expr . OR Expr
   53     | Expr . AND Expr
   54     | Expr . BITWISEAND Expr
   55     | Expr . BITWISEOR Expr
   56     | Expr . BITWISEXOR Expr
   57     | Expr . EQ Expr
   58     | Expr . NE Expr
   59     | Expr . LE Expr
   60     | Expr . GE Expr
   61     | Expr . LT Expr
   62     | Expr . GT Expr

    BITWISEAND  shift, and go to state 58
    BITWISEOR   shift, and go to state 59
    BITWISEXOR  shift, and go to state 60
    AND         shift, and go to state 61
    ASSIGN      shift, and go to state 62
    MUL         shift, and go to state 63
    EQ          shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    DIV         shift, and go to state 67
    LE          shift, and go to state 68
    LT          shift, and go to state 69
    MINUS       shift, and go to state 70
    MOD         shift, and go to state 71
    NE          shift, and go to state 72
    OR          shift, and go to state 73
    PLUS        shift, and go to state 74
    RPAR        shift, and go to state 126
    COMMA       shift, and go to state 75


state 117

   35 Statement: IF LPAR Expr . RPAR Statement OPTIONAL5
   36          | IF LPAR Expr . RPAR Statement
   45 Expr: Expr . ASSIGN Expr
   46     | Expr . COMMA Expr
   47     | Expr . PLUS Expr
   48     | Expr . MINUS Expr
   49     | Expr . MUL Expr
   50     | Expr . DIV Expr
   51     | Expr . MOD Expr
   52     | Expr . OR Expr
   53     | Expr . AND Expr
   54     | Expr . BITWISEAND Expr
   55     | Expr . BITWISEOR Expr
   56     | Expr . BITWISEXOR Expr
   57     | Expr . EQ Expr
   58     | Expr . NE Expr
   59     | Expr . LE Expr
   60     | Expr . GE Expr
   61     | Expr . LT Expr
   62     | Expr . GT Expr

    BITWISEAND  shift, and go to state 58
    BITWISEOR   shift, and go to state 59
    BITWISEXOR  shift, and go to state 60
    AND         shift, and go to state 61
    ASSIGN      shift, and go to state 62
    MUL         shift, and go to state 63
    EQ          shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    DIV         shift, and go to state 67
    LE          shift, and go to state 68
    LT          shift, and go to state 69
    MINUS       shift, and go to state 70
    MOD         shift, and go to state 71
    NE          shift, and go to state 72
    OR          shift, and go to state 73
    PLUS        shift, and go to state 74
    RPAR        shift, and go to state 127
    COMMA       shift, and go to state 75


state 118

   38 Statement: RETURN OPTIONAL4 SEMI .

    $default  reduce using rule 38 (Statement)


state 119

   34 Statement: LBRACE error RBRACE .

    $default  reduce using rule 34 (Statement)


state 120

   32 Statement: error . SEMI

    SEMI  shift, and go to state 128


state 121

   33 Statement: LBRACE ZEROPLUS2 RBRACE .

    $default  reduce using rule 33 (Statement)


state 122

   43 ZEROPLUS2: ZEROPLUS2 Statement .

    $default  reduce using rule 43 (ZEROPLUS2)


state 123

   66 Expr: IDENTIFIER LPAR error RPAR .

    $default  reduce using rule 66 (Expr)


state 124

   67 Expr: IDENTIFIER LPAR OPTIONAL6 RPAR .

    $default  reduce using rule 67 (Expr)


state 125

   45 Expr: . Expr ASSIGN Expr
   46     | . Expr COMMA Expr
   47     | . Expr PLUS Expr
   48     | . Expr MINUS Expr
   49     | . Expr MUL Expr
   50     | . Expr DIV Expr
   51     | . Expr MOD Expr
   52     | . Expr OR Expr
   53     | . Expr AND Expr
   54     | . Expr BITWISEAND Expr
   55     | . Expr BITWISEOR Expr
   56     | . Expr BITWISEXOR Expr
   57     | . Expr EQ Expr
   58     | . Expr NE Expr
   59     | . Expr LE Expr
   60     | . Expr GE Expr
   61     | . Expr LT Expr
   62     | . Expr GT Expr
   63     | . PLUS Expr
   64     | . MINUS Expr
   65     | . NOT Expr
   66     | . IDENTIFIER LPAR error RPAR
   67     | . IDENTIFIER LPAR OPTIONAL6 RPAR
   68     | . IDENTIFIER
   69     | . NATURAL
   70     | . CHRLITS
   71     | . DECIMAL
   72     | . LPAR Expr RPAR
   73     | . LPAR error RPAR
   76 ZEROPLUS3: ZEROPLUS3 COMMA . Expr

    LPAR        shift, and go to state 26
    MINUS       shift, and go to state 27
    NOT         shift, and go to state 28
    PLUS        shift, and go to state 29
    CHRLITS     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    NATURAL     shift, and go to state 32
    DECIMAL     shift, and go to state 33

    Expr  go to state 129


state 126

   31 Statement: . OPTIONAL4 SEMI
   32          | . error SEMI
   33          | . LBRACE ZEROPLUS2 RBRACE
   34          | . LBRACE error RBRACE
   35          | . IF LPAR Expr RPAR Statement OPTIONAL5
   36          | . IF LPAR Expr RPAR Statement
   37          | . WHILE LPAR Expr RPAR Statement
   37          | WHILE LPAR Expr RPAR . Statement
   38          | . RETURN OPTIONAL4 SEMI
   39 OPTIONAL4: . Expr
   40          | .  [SEMI]
   45 Expr: . Expr ASSIGN Expr
   46     | . Expr COMMA Expr
   47     | . Expr PLUS Expr
   48     | . Expr MINUS Expr
   49     | . Expr MUL Expr
   50     | . Expr DIV Expr
   51     | . Expr MOD Expr
   52     | . Expr OR Expr
   53     | . Expr AND Expr
   54     | . Expr BITWISEAND Expr
   55     | . Expr BITWISEOR Expr
   56     | . Expr BITWISEXOR Expr
   57     | . Expr EQ Expr
   58     | . Expr NE Expr
   59     | . Expr LE Expr
   60     | . Expr GE Expr
   61     | . Expr LT Expr
   62     | . Expr GT Expr
   63     | . PLUS Expr
   64     | . MINUS Expr
   65     | . NOT Expr
   66     | . IDENTIFIER LPAR error RPAR
   67     | . IDENTIFIER LPAR OPTIONAL6 RPAR
   68     | . IDENTIFIER
   69     | . NATURAL
   70     | . CHRLITS
   71     | . DECIMAL
   72     | . LPAR Expr RPAR
   73     | . LPAR error RPAR

    error       shift, and go to state 120
    WHILE       shift, and go to state 39
    IF          shift, and go to state 40
    RETURN      shift, and go to state 41
    LBRACE      shift, and go to state 42
    LPAR        shift, and go to state 26
    MINUS       shift, and go to state 27
    NOT         shift, and go to state 28
    PLUS        shift, and go to state 29
    CHRLITS     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    NATURAL     shift, and go to state 32
    DECIMAL     shift, and go to state 33

    SEMI  reduce using rule 40 (OPTIONAL4)

    Statement  go to state 130
    OPTIONAL4  go to state 48
    Expr       go to state 49


state 127

   31 Statement: . OPTIONAL4 SEMI
   32          | . error SEMI
   33          | . LBRACE ZEROPLUS2 RBRACE
   34          | . LBRACE error RBRACE
   35          | . IF LPAR Expr RPAR Statement OPTIONAL5
   35          | IF LPAR Expr RPAR . Statement OPTIONAL5
   36          | . IF LPAR Expr RPAR Statement
   36          | IF LPAR Expr RPAR . Statement
   37          | . WHILE LPAR Expr RPAR Statement
   38          | . RETURN OPTIONAL4 SEMI
   39 OPTIONAL4: . Expr
   40          | .  [SEMI]
   45 Expr: . Expr ASSIGN Expr
   46     | . Expr COMMA Expr
   47     | . Expr PLUS Expr
   48     | . Expr MINUS Expr
   49     | . Expr MUL Expr
   50     | . Expr DIV Expr
   51     | . Expr MOD Expr
   52     | . Expr OR Expr
   53     | . Expr AND Expr
   54     | . Expr BITWISEAND Expr
   55     | . Expr BITWISEOR Expr
   56     | . Expr BITWISEXOR Expr
   57     | . Expr EQ Expr
   58     | . Expr NE Expr
   59     | . Expr LE Expr
   60     | . Expr GE Expr
   61     | . Expr LT Expr
   62     | . Expr GT Expr
   63     | . PLUS Expr
   64     | . MINUS Expr
   65     | . NOT Expr
   66     | . IDENTIFIER LPAR error RPAR
   67     | . IDENTIFIER LPAR OPTIONAL6 RPAR
   68     | . IDENTIFIER
   69     | . NATURAL
   70     | . CHRLITS
   71     | . DECIMAL
   72     | . LPAR Expr RPAR
   73     | . LPAR error RPAR

    error       shift, and go to state 120
    WHILE       shift, and go to state 39
    IF          shift, and go to state 40
    RETURN      shift, and go to state 41
    LBRACE      shift, and go to state 42
    LPAR        shift, and go to state 26
    MINUS       shift, and go to state 27
    NOT         shift, and go to state 28
    PLUS        shift, and go to state 29
    CHRLITS     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    NATURAL     shift, and go to state 32
    DECIMAL     shift, and go to state 33

    SEMI  reduce using rule 40 (OPTIONAL4)

    Statement  go to state 131
    OPTIONAL4  go to state 48
    Expr       go to state 49


state 128

   32 Statement: error SEMI .

    $default  reduce using rule 32 (Statement)


state 129

   45 Expr: Expr . ASSIGN Expr
   46     | Expr . COMMA Expr
   47     | Expr . PLUS Expr
   48     | Expr . MINUS Expr
   49     | Expr . MUL Expr
   50     | Expr . DIV Expr
   51     | Expr . MOD Expr
   52     | Expr . OR Expr
   53     | Expr . AND Expr
   54     | Expr . BITWISEAND Expr
   55     | Expr . BITWISEOR Expr
   56     | Expr . BITWISEXOR Expr
   57     | Expr . EQ Expr
   58     | Expr . NE Expr
   59     | Expr . LE Expr
   60     | Expr . GE Expr
   61     | Expr . LT Expr
   62     | Expr . GT Expr
   76 ZEROPLUS3: ZEROPLUS3 COMMA Expr .  [RPAR, COMMA]

    BITWISEAND  shift, and go to state 58
    BITWISEOR   shift, and go to state 59
    BITWISEXOR  shift, and go to state 60
    AND         shift, and go to state 61
    ASSIGN      shift, and go to state 62
    MUL         shift, and go to state 63
    EQ          shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    DIV         shift, and go to state 67
    LE          shift, and go to state 68
    LT          shift, and go to state 69
    MINUS       shift, and go to state 70
    MOD         shift, and go to state 71
    NE          shift, and go to state 72
    OR          shift, and go to state 73
    PLUS        shift, and go to state 74

    $default  reduce using rule 76 (ZEROPLUS3)

    Conflict between rule 76 and token COMMA resolved as reduce (%left COMMA).


state 130

   37 Statement: WHILE LPAR Expr RPAR Statement .

    $default  reduce using rule 37 (Statement)


state 131

   35 Statement: IF LPAR Expr RPAR Statement . OPTIONAL5
   36          | IF LPAR Expr RPAR Statement .  [error, CHAR, ELSE, WHILE, IF, INT, SHORT, DOUBLE, RETURN, VOID, LBRACE, LPAR, MINUS, NOT, PLUS, RBRACE, SEMI, CHRLITS, IDENTIFIER, NATURAL, DECIMAL]
   41 OPTIONAL5: . ELSE Statement
   42          | .  [error, CHAR, ELSE, WHILE, IF, INT, SHORT, DOUBLE, RETURN, VOID, LBRACE, LPAR, MINUS, NOT, PLUS, RBRACE, SEMI, CHRLITS, IDENTIFIER, NATURAL, DECIMAL]

    ELSE  shift, and go to state 132

    error       reduce using rule 36 (Statement)
    error       [reduce using rule 42 (OPTIONAL5)]
    CHAR        reduce using rule 36 (Statement)
    CHAR        [reduce using rule 42 (OPTIONAL5)]
    ELSE        [reduce using rule 36 (Statement)]
    ELSE        [reduce using rule 42 (OPTIONAL5)]
    WHILE       reduce using rule 36 (Statement)
    WHILE       [reduce using rule 42 (OPTIONAL5)]
    IF          reduce using rule 36 (Statement)
    IF          [reduce using rule 42 (OPTIONAL5)]
    INT         reduce using rule 36 (Statement)
    INT         [reduce using rule 42 (OPTIONAL5)]
    SHORT       reduce using rule 36 (Statement)
    SHORT       [reduce using rule 42 (OPTIONAL5)]
    DOUBLE      reduce using rule 36 (Statement)
    DOUBLE      [reduce using rule 42 (OPTIONAL5)]
    RETURN      reduce using rule 36 (Statement)
    RETURN      [reduce using rule 42 (OPTIONAL5)]
    VOID        reduce using rule 36 (Statement)
    VOID        [reduce using rule 42 (OPTIONAL5)]
    LBRACE      reduce using rule 36 (Statement)
    LBRACE      [reduce using rule 42 (OPTIONAL5)]
    LPAR        reduce using rule 36 (Statement)
    LPAR        [reduce using rule 42 (OPTIONAL5)]
    MINUS       reduce using rule 36 (Statement)
    MINUS       [reduce using rule 42 (OPTIONAL5)]
    NOT         reduce using rule 36 (Statement)
    NOT         [reduce using rule 42 (OPTIONAL5)]
    PLUS        reduce using rule 36 (Statement)
    PLUS        [reduce using rule 42 (OPTIONAL5)]
    RBRACE      reduce using rule 36 (Statement)
    RBRACE      [reduce using rule 42 (OPTIONAL5)]
    SEMI        reduce using rule 36 (Statement)
    SEMI        [reduce using rule 42 (OPTIONAL5)]
    CHRLITS     reduce using rule 36 (Statement)
    CHRLITS     [reduce using rule 42 (OPTIONAL5)]
    IDENTIFIER  reduce using rule 36 (Statement)
    IDENTIFIER  [reduce using rule 42 (OPTIONAL5)]
    NATURAL     reduce using rule 36 (Statement)
    NATURAL     [reduce using rule 42 (OPTIONAL5)]
    DECIMAL     reduce using rule 36 (Statement)
    DECIMAL     [reduce using rule 42 (OPTIONAL5)]
    $default    reduce using rule 36 (Statement)

    OPTIONAL5  go to state 133


state 132

   31 Statement: . OPTIONAL4 SEMI
   32          | . error SEMI
   33          | . LBRACE ZEROPLUS2 RBRACE
   34          | . LBRACE error RBRACE
   35          | . IF LPAR Expr RPAR Statement OPTIONAL5
   36          | . IF LPAR Expr RPAR Statement
   37          | . WHILE LPAR Expr RPAR Statement
   38          | . RETURN OPTIONAL4 SEMI
   39 OPTIONAL4: . Expr
   40          | .  [SEMI]
   41 OPTIONAL5: ELSE . Statement
   45 Expr: . Expr ASSIGN Expr
   46     | . Expr COMMA Expr
   47     | . Expr PLUS Expr
   48     | . Expr MINUS Expr
   49     | . Expr MUL Expr
   50     | . Expr DIV Expr
   51     | . Expr MOD Expr
   52     | . Expr OR Expr
   53     | . Expr AND Expr
   54     | . Expr BITWISEAND Expr
   55     | . Expr BITWISEOR Expr
   56     | . Expr BITWISEXOR Expr
   57     | . Expr EQ Expr
   58     | . Expr NE Expr
   59     | . Expr LE Expr
   60     | . Expr GE Expr
   61     | . Expr LT Expr
   62     | . Expr GT Expr
   63     | . PLUS Expr
   64     | . MINUS Expr
   65     | . NOT Expr
   66     | . IDENTIFIER LPAR error RPAR
   67     | . IDENTIFIER LPAR OPTIONAL6 RPAR
   68     | . IDENTIFIER
   69     | . NATURAL
   70     | . CHRLITS
   71     | . DECIMAL
   72     | . LPAR Expr RPAR
   73     | . LPAR error RPAR

    error       shift, and go to state 120
    WHILE       shift, and go to state 39
    IF          shift, and go to state 40
    RETURN      shift, and go to state 41
    LBRACE      shift, and go to state 42
    LPAR        shift, and go to state 26
    MINUS       shift, and go to state 27
    NOT         shift, and go to state 28
    PLUS        shift, and go to state 29
    CHRLITS     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    NATURAL     shift, and go to state 32
    DECIMAL     shift, and go to state 33

    SEMI  reduce using rule 40 (OPTIONAL4)

    Statement  go to state 134
    OPTIONAL4  go to state 48
    Expr       go to state 49


state 133

   35 Statement: IF LPAR Expr RPAR Statement OPTIONAL5 .

    $default  reduce using rule 35 (Statement)


state 134

   41 OPTIONAL5: ELSE Statement .

    $default  reduce using rule 41 (OPTIONAL5)
