Terminals which are not used

   HIGH
   RESERVED


Grammar

    0 $accept: FunctionsAndDeclarations $end

    1 FunctionsAndDeclarations: FunctionsAndDeclarations FunctionDefinition
    2                         | FunctionsAndDeclarations FunctionDeclaration
    3                         | FunctionsAndDeclarations Declaration
    4                         | FunctionDefinition
    5                         | FunctionDeclaration
    6                         | Declaration

    7 FunctionDefinition: TypeSpec FunctionDeclarator FunctionBody

    8 FunctionBody: LBRACE RBRACE
    9             | LBRACE DeclarationsAndStatements RBRACE

   10 DeclarationsAndStatements: Statement DeclarationsAndStatements
   11                          | Declaration DeclarationsAndStatements
   12                          | Statement
   13                          | Declaration

   14 FunctionDeclaration: TypeSpec FunctionDeclarator SEMI

   15 FunctionDeclarator: IDENTIFIER LPAR ParameterList RPAR

   16 ParameterList: ParameterList COMMA ParameterDeclaration
   17              | ParameterDeclaration

   18 ParameterDeclaration: TypeSpec IDENTIFIER
   19                     | TypeSpec

   20 Declaration: TypeSpec Declarator ZEROPLUS1 SEMI
   21            | ErrorRule

   22 ZEROPLUS1: ZEROPLUS1 COMMA Declarator
   23          | /* empty */

   24 TypeSpec: CHAR
   25         | INT
   26         | VOID
   27         | SHORT
   28         | DOUBLE

   29 Declarator: IDENTIFIER ASSIGN Expr
   30           | IDENTIFIER

   31 Statement: OPTIONAL4 SEMI
   32          | LBRACE ZEROPLUS2 RBRACE
   33          | LBRACE ErrorRule RBRACE
   34          | IF LPAR Expr RPAR Statement ELSE Statement
   35          | IF LPAR Expr RPAR Statement
   36          | WHILE LPAR Expr RPAR Statement
   37          | RETURN Expr SEMI
   38          | RETURN SEMI

   39 ErrorRule: error SEMI

   40 OPTIONAL4: Expr
   41          | /* empty */

   42 ZEROPLUS2: ZEROPLUS2 Statement
   43          | /* empty */

   44 Expr: Expr ASSIGN Expr
   45     | Expr COMMA Expr
   46     | Expr PLUS Expr
   47     | Expr MINUS Expr
   48     | Expr MUL Expr
   49     | Expr DIV Expr
   50     | Expr MOD Expr
   51     | Expr OR Expr
   52     | Expr AND Expr
   53     | Expr BITWISEAND Expr
   54     | Expr BITWISEOR Expr
   55     | Expr BITWISEXOR Expr
   56     | Expr EQ Expr
   57     | Expr NE Expr
   58     | Expr LE Expr
   59     | Expr GE Expr
   60     | Expr LT Expr
   61     | Expr GT Expr
   62     | PLUS Expr
   63     | MINUS Expr
   64     | NOT Expr
   65     | IDENTIFIER LPAR error RPAR
   66     | IDENTIFIER LPAR RPAR
   67     | IDENTIFIER LPAR ZEROPLUS3 RPAR
   68     | IDENTIFIER
   69     | NATURAL
   70     | CHRLITS
   71     | DECIMAL
   72     | LPAR Expr RPAR
   73     | LPAR error RPAR

   74 ZEROPLUS3: ZEROPLUS3 COMMA Expr
   75          | Expr


Terminals, with rules where they appear

$end (0) 0
error (256) 39 65 73
LOW (258)
COMMA (259) 16 22 45 74
ASSIGN (260) 29 44
ELSE (261) 34
BITWISEOR (262) 54
BITWISEXOR (263) 55
BITWISEAND (264) 53
OR (265) 51
AND (266) 52
GE (267) 59
GT (268) 61
LE (269) 58
LT (270) 60
NE (271) 57
EQ (272) 56
MINUS (273) 47 63
PLUS (274) 46 62
MOD (275) 50
DIV (276) 49
MUL (277) 48
NOT (278) 64
HIGH (279)
LOWER (280)
HIGHER (281)
CHAR (282) 24
INT (283) 25
SHORT (284) 27
DOUBLE (285) 28
RETURN (286) 37 38
VOID (287) 26
SEMI (288) 14 20 31 37 38 39
LBRACE (289) 8 9 32 33
LPAR (290) 15 34 35 36 65 66 67 72 73
RBRACE (291) 8 9 32 33
RPAR (292) 15 34 35 36 65 66 67 72 73
WHILE (293) 36
IF (294) 34 35
CHRLITS (295) 70
IDENTIFIER (296) 15 18 29 30 65 66 67 68
NATURAL (297) 69
DECIMAL (298) 71
RESERVED (299)


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
FunctionsAndDeclarations (46)
    on left: 1 2 3 4 5 6, on right: 0 1 2 3
FunctionDefinition (47)
    on left: 7, on right: 1 4
FunctionBody (48)
    on left: 8 9, on right: 7
DeclarationsAndStatements (49)
    on left: 10 11 12 13, on right: 9 10 11
FunctionDeclaration (50)
    on left: 14, on right: 2 5
FunctionDeclarator (51)
    on left: 15, on right: 7 14
ParameterList (52)
    on left: 16 17, on right: 15 16
ParameterDeclaration (53)
    on left: 18 19, on right: 16 17
Declaration (54)
    on left: 20 21, on right: 3 6 11 13
ZEROPLUS1 (55)
    on left: 22 23, on right: 20 22
TypeSpec (56)
    on left: 24 25 26 27 28, on right: 7 14 18 19 20
Declarator (57)
    on left: 29 30, on right: 20 22
Statement (58)
    on left: 31 32 33 34 35 36 37 38, on right: 10 12 34 35 36 42
ErrorRule (59)
    on left: 39, on right: 21 33
OPTIONAL4 (60)
    on left: 40 41, on right: 31
ZEROPLUS2 (61)
    on left: 42 43, on right: 32 42
Expr (62)
    on left: 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61
    62 63 64 65 66 67 68 69 70 71 72 73, on right: 29 34 35 36 37 40
    44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64
    72 74 75
ZEROPLUS3 (63)
    on left: 74 75, on right: 67 74


state 0

    0 $accept: . FunctionsAndDeclarations $end
    1 FunctionsAndDeclarations: . FunctionsAndDeclarations FunctionDefinition
    2                         | . FunctionsAndDeclarations FunctionDeclaration
    3                         | . FunctionsAndDeclarations Declaration
    4                         | . FunctionDefinition
    5                         | . FunctionDeclaration
    6                         | . Declaration
    7 FunctionDefinition: . TypeSpec FunctionDeclarator FunctionBody
   14 FunctionDeclaration: . TypeSpec FunctionDeclarator SEMI
   20 Declaration: . TypeSpec Declarator ZEROPLUS1 SEMI
   21            | . ErrorRule
   24 TypeSpec: . CHAR
   25         | . INT
   26         | . VOID
   27         | . SHORT
   28         | . DOUBLE
   39 ErrorRule: . error SEMI

    error   shift, and go to state 1
    CHAR    shift, and go to state 2
    INT     shift, and go to state 3
    SHORT   shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6

    FunctionsAndDeclarations  go to state 7
    FunctionDefinition        go to state 8
    FunctionDeclaration       go to state 9
    Declaration               go to state 10
    TypeSpec                  go to state 11
    ErrorRule                 go to state 12


state 1

   39 ErrorRule: error . SEMI

    SEMI  shift, and go to state 13


state 2

   24 TypeSpec: CHAR .

    $default  reduce using rule 24 (TypeSpec)


state 3

   25 TypeSpec: INT .

    $default  reduce using rule 25 (TypeSpec)


state 4

   27 TypeSpec: SHORT .

    $default  reduce using rule 27 (TypeSpec)


state 5

   28 TypeSpec: DOUBLE .

    $default  reduce using rule 28 (TypeSpec)


state 6

   26 TypeSpec: VOID .

    $default  reduce using rule 26 (TypeSpec)


state 7

    0 $accept: FunctionsAndDeclarations . $end
    1 FunctionsAndDeclarations: FunctionsAndDeclarations . FunctionDefinition
    2                         | FunctionsAndDeclarations . FunctionDeclaration
    3                         | FunctionsAndDeclarations . Declaration
    7 FunctionDefinition: . TypeSpec FunctionDeclarator FunctionBody
   14 FunctionDeclaration: . TypeSpec FunctionDeclarator SEMI
   20 Declaration: . TypeSpec Declarator ZEROPLUS1 SEMI
   21            | . ErrorRule
   24 TypeSpec: . CHAR
   25         | . INT
   26         | . VOID
   27         | . SHORT
   28         | . DOUBLE
   39 ErrorRule: . error SEMI

    $end    shift, and go to state 14
    error   shift, and go to state 1
    CHAR    shift, and go to state 2
    INT     shift, and go to state 3
    SHORT   shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6

    FunctionDefinition   go to state 15
    FunctionDeclaration  go to state 16
    Declaration          go to state 17
    TypeSpec             go to state 11
    ErrorRule            go to state 12


state 8

    4 FunctionsAndDeclarations: FunctionDefinition .

    $default  reduce using rule 4 (FunctionsAndDeclarations)


state 9

    5 FunctionsAndDeclarations: FunctionDeclaration .

    $default  reduce using rule 5 (FunctionsAndDeclarations)


state 10

    6 FunctionsAndDeclarations: Declaration .

    $default  reduce using rule 6 (FunctionsAndDeclarations)


state 11

    7 FunctionDefinition: TypeSpec . FunctionDeclarator FunctionBody
   14 FunctionDeclaration: TypeSpec . FunctionDeclarator SEMI
   15 FunctionDeclarator: . IDENTIFIER LPAR ParameterList RPAR
   20 Declaration: TypeSpec . Declarator ZEROPLUS1 SEMI
   29 Declarator: . IDENTIFIER ASSIGN Expr
   30           | . IDENTIFIER

    IDENTIFIER  shift, and go to state 18

    FunctionDeclarator  go to state 19
    Declarator          go to state 20


state 12

   21 Declaration: ErrorRule .

    $default  reduce using rule 21 (Declaration)


state 13

   39 ErrorRule: error SEMI .

    $default  reduce using rule 39 (ErrorRule)


state 14

    0 $accept: FunctionsAndDeclarations $end .

    $default  accept


state 15

    1 FunctionsAndDeclarations: FunctionsAndDeclarations FunctionDefinition .

    $default  reduce using rule 1 (FunctionsAndDeclarations)


state 16

    2 FunctionsAndDeclarations: FunctionsAndDeclarations FunctionDeclaration .

    $default  reduce using rule 2 (FunctionsAndDeclarations)


state 17

    3 FunctionsAndDeclarations: FunctionsAndDeclarations Declaration .

    $default  reduce using rule 3 (FunctionsAndDeclarations)


state 18

   15 FunctionDeclarator: IDENTIFIER . LPAR ParameterList RPAR
   29 Declarator: IDENTIFIER . ASSIGN Expr
   30           | IDENTIFIER .  [COMMA, SEMI]

    ASSIGN  shift, and go to state 21
    LPAR    shift, and go to state 22

    $default  reduce using rule 30 (Declarator)


state 19

    7 FunctionDefinition: TypeSpec FunctionDeclarator . FunctionBody
    8 FunctionBody: . LBRACE RBRACE
    9             | . LBRACE DeclarationsAndStatements RBRACE
   14 FunctionDeclaration: TypeSpec FunctionDeclarator . SEMI

    SEMI    shift, and go to state 23
    LBRACE  shift, and go to state 24

    FunctionBody  go to state 25


state 20

   20 Declaration: TypeSpec Declarator . ZEROPLUS1 SEMI
   22 ZEROPLUS1: . ZEROPLUS1 COMMA Declarator
   23          | .

    $default  reduce using rule 23 (ZEROPLUS1)

    ZEROPLUS1  go to state 26


state 21

   29 Declarator: IDENTIFIER ASSIGN . Expr
   44 Expr: . Expr ASSIGN Expr
   45     | . Expr COMMA Expr
   46     | . Expr PLUS Expr
   47     | . Expr MINUS Expr
   48     | . Expr MUL Expr
   49     | . Expr DIV Expr
   50     | . Expr MOD Expr
   51     | . Expr OR Expr
   52     | . Expr AND Expr
   53     | . Expr BITWISEAND Expr
   54     | . Expr BITWISEOR Expr
   55     | . Expr BITWISEXOR Expr
   56     | . Expr EQ Expr
   57     | . Expr NE Expr
   58     | . Expr LE Expr
   59     | . Expr GE Expr
   60     | . Expr LT Expr
   61     | . Expr GT Expr
   62     | . PLUS Expr
   63     | . MINUS Expr
   64     | . NOT Expr
   65     | . IDENTIFIER LPAR error RPAR
   66     | . IDENTIFIER LPAR RPAR
   67     | . IDENTIFIER LPAR ZEROPLUS3 RPAR
   68     | . IDENTIFIER
   69     | . NATURAL
   70     | . CHRLITS
   71     | . DECIMAL
   72     | . LPAR Expr RPAR
   73     | . LPAR error RPAR

    MINUS       shift, and go to state 27
    PLUS        shift, and go to state 28
    NOT         shift, and go to state 29
    LPAR        shift, and go to state 30
    CHRLITS     shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NATURAL     shift, and go to state 33
    DECIMAL     shift, and go to state 34

    Expr  go to state 35


state 22

   15 FunctionDeclarator: IDENTIFIER LPAR . ParameterList RPAR
   16 ParameterList: . ParameterList COMMA ParameterDeclaration
   17              | . ParameterDeclaration
   18 ParameterDeclaration: . TypeSpec IDENTIFIER
   19                     | . TypeSpec
   24 TypeSpec: . CHAR
   25         | . INT
   26         | . VOID
   27         | . SHORT
   28         | . DOUBLE

    CHAR    shift, and go to state 2
    INT     shift, and go to state 3
    SHORT   shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6

    ParameterList         go to state 36
    ParameterDeclaration  go to state 37
    TypeSpec              go to state 38


state 23

   14 FunctionDeclaration: TypeSpec FunctionDeclarator SEMI .

    $default  reduce using rule 14 (FunctionDeclaration)


state 24

    8 FunctionBody: LBRACE . RBRACE
    9             | LBRACE . DeclarationsAndStatements RBRACE
   10 DeclarationsAndStatements: . Statement DeclarationsAndStatements
   11                          | . Declaration DeclarationsAndStatements
   12                          | . Statement
   13                          | . Declaration
   20 Declaration: . TypeSpec Declarator ZEROPLUS1 SEMI
   21            | . ErrorRule
   24 TypeSpec: . CHAR
   25         | . INT
   26         | . VOID
   27         | . SHORT
   28         | . DOUBLE
   31 Statement: . OPTIONAL4 SEMI
   32          | . LBRACE ZEROPLUS2 RBRACE
   33          | . LBRACE ErrorRule RBRACE
   34          | . IF LPAR Expr RPAR Statement ELSE Statement
   35          | . IF LPAR Expr RPAR Statement
   36          | . WHILE LPAR Expr RPAR Statement
   37          | . RETURN Expr SEMI
   38          | . RETURN SEMI
   39 ErrorRule: . error SEMI
   40 OPTIONAL4: . Expr
   41          | .  [SEMI]
   44 Expr: . Expr ASSIGN Expr
   45     | . Expr COMMA Expr
   46     | . Expr PLUS Expr
   47     | . Expr MINUS Expr
   48     | . Expr MUL Expr
   49     | . Expr DIV Expr
   50     | . Expr MOD Expr
   51     | . Expr OR Expr
   52     | . Expr AND Expr
   53     | . Expr BITWISEAND Expr
   54     | . Expr BITWISEOR Expr
   55     | . Expr BITWISEXOR Expr
   56     | . Expr EQ Expr
   57     | . Expr NE Expr
   58     | . Expr LE Expr
   59     | . Expr GE Expr
   60     | . Expr LT Expr
   61     | . Expr GT Expr
   62     | . PLUS Expr
   63     | . MINUS Expr
   64     | . NOT Expr
   65     | . IDENTIFIER LPAR error RPAR
   66     | . IDENTIFIER LPAR RPAR
   67     | . IDENTIFIER LPAR ZEROPLUS3 RPAR
   68     | . IDENTIFIER
   69     | . NATURAL
   70     | . CHRLITS
   71     | . DECIMAL
   72     | . LPAR Expr RPAR
   73     | . LPAR error RPAR

    error       shift, and go to state 1
    MINUS       shift, and go to state 27
    PLUS        shift, and go to state 28
    NOT         shift, and go to state 29
    CHAR        shift, and go to state 2
    INT         shift, and go to state 3
    SHORT       shift, and go to state 4
    DOUBLE      shift, and go to state 5
    RETURN      shift, and go to state 39
    VOID        shift, and go to state 6
    LBRACE      shift, and go to state 40
    LPAR        shift, and go to state 30
    RBRACE      shift, and go to state 41
    WHILE       shift, and go to state 42
    IF          shift, and go to state 43
    CHRLITS     shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NATURAL     shift, and go to state 33
    DECIMAL     shift, and go to state 34

    SEMI  reduce using rule 41 (OPTIONAL4)

    DeclarationsAndStatements  go to state 44
    Declaration                go to state 45
    TypeSpec                   go to state 46
    Statement                  go to state 47
    ErrorRule                  go to state 12
    OPTIONAL4                  go to state 48
    Expr                       go to state 49


state 25

    7 FunctionDefinition: TypeSpec FunctionDeclarator FunctionBody .

    $default  reduce using rule 7 (FunctionDefinition)


state 26

   20 Declaration: TypeSpec Declarator ZEROPLUS1 . SEMI
   22 ZEROPLUS1: ZEROPLUS1 . COMMA Declarator

    COMMA  shift, and go to state 50
    SEMI   shift, and go to state 51


state 27

   44 Expr: . Expr ASSIGN Expr
   45     | . Expr COMMA Expr
   46     | . Expr PLUS Expr
   47     | . Expr MINUS Expr
   48     | . Expr MUL Expr
   49     | . Expr DIV Expr
   50     | . Expr MOD Expr
   51     | . Expr OR Expr
   52     | . Expr AND Expr
   53     | . Expr BITWISEAND Expr
   54     | . Expr BITWISEOR Expr
   55     | . Expr BITWISEXOR Expr
   56     | . Expr EQ Expr
   57     | . Expr NE Expr
   58     | . Expr LE Expr
   59     | . Expr GE Expr
   60     | . Expr LT Expr
   61     | . Expr GT Expr
   62     | . PLUS Expr
   63     | . MINUS Expr
   63     | MINUS . Expr
   64     | . NOT Expr
   65     | . IDENTIFIER LPAR error RPAR
   66     | . IDENTIFIER LPAR RPAR
   67     | . IDENTIFIER LPAR ZEROPLUS3 RPAR
   68     | . IDENTIFIER
   69     | . NATURAL
   70     | . CHRLITS
   71     | . DECIMAL
   72     | . LPAR Expr RPAR
   73     | . LPAR error RPAR

    MINUS       shift, and go to state 27
    PLUS        shift, and go to state 28
    NOT         shift, and go to state 29
    LPAR        shift, and go to state 30
    CHRLITS     shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NATURAL     shift, and go to state 33
    DECIMAL     shift, and go to state 34

    Expr  go to state 52


state 28

   44 Expr: . Expr ASSIGN Expr
   45     | . Expr COMMA Expr
   46     | . Expr PLUS Expr
   47     | . Expr MINUS Expr
   48     | . Expr MUL Expr
   49     | . Expr DIV Expr
   50     | . Expr MOD Expr
   51     | . Expr OR Expr
   52     | . Expr AND Expr
   53     | . Expr BITWISEAND Expr
   54     | . Expr BITWISEOR Expr
   55     | . Expr BITWISEXOR Expr
   56     | . Expr EQ Expr
   57     | . Expr NE Expr
   58     | . Expr LE Expr
   59     | . Expr GE Expr
   60     | . Expr LT Expr
   61     | . Expr GT Expr
   62     | . PLUS Expr
   62     | PLUS . Expr
   63     | . MINUS Expr
   64     | . NOT Expr
   65     | . IDENTIFIER LPAR error RPAR
   66     | . IDENTIFIER LPAR RPAR
   67     | . IDENTIFIER LPAR ZEROPLUS3 RPAR
   68     | . IDENTIFIER
   69     | . NATURAL
   70     | . CHRLITS
   71     | . DECIMAL
   72     | . LPAR Expr RPAR
   73     | . LPAR error RPAR

    MINUS       shift, and go to state 27
    PLUS        shift, and go to state 28
    NOT         shift, and go to state 29
    LPAR        shift, and go to state 30
    CHRLITS     shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NATURAL     shift, and go to state 33
    DECIMAL     shift, and go to state 34

    Expr  go to state 53


state 29

   44 Expr: . Expr ASSIGN Expr
   45     | . Expr COMMA Expr
   46     | . Expr PLUS Expr
   47     | . Expr MINUS Expr
   48     | . Expr MUL Expr
   49     | . Expr DIV Expr
   50     | . Expr MOD Expr
   51     | . Expr OR Expr
   52     | . Expr AND Expr
   53     | . Expr BITWISEAND Expr
   54     | . Expr BITWISEOR Expr
   55     | . Expr BITWISEXOR Expr
   56     | . Expr EQ Expr
   57     | . Expr NE Expr
   58     | . Expr LE Expr
   59     | . Expr GE Expr
   60     | . Expr LT Expr
   61     | . Expr GT Expr
   62     | . PLUS Expr
   63     | . MINUS Expr
   64     | . NOT Expr
   64     | NOT . Expr
   65     | . IDENTIFIER LPAR error RPAR
   66     | . IDENTIFIER LPAR RPAR
   67     | . IDENTIFIER LPAR ZEROPLUS3 RPAR
   68     | . IDENTIFIER
   69     | . NATURAL
   70     | . CHRLITS
   71     | . DECIMAL
   72     | . LPAR Expr RPAR
   73     | . LPAR error RPAR

    MINUS       shift, and go to state 27
    PLUS        shift, and go to state 28
    NOT         shift, and go to state 29
    LPAR        shift, and go to state 30
    CHRLITS     shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NATURAL     shift, and go to state 33
    DECIMAL     shift, and go to state 34

    Expr  go to state 54


state 30

   44 Expr: . Expr ASSIGN Expr
   45     | . Expr COMMA Expr
   46     | . Expr PLUS Expr
   47     | . Expr MINUS Expr
   48     | . Expr MUL Expr
   49     | . Expr DIV Expr
   50     | . Expr MOD Expr
   51     | . Expr OR Expr
   52     | . Expr AND Expr
   53     | . Expr BITWISEAND Expr
   54     | . Expr BITWISEOR Expr
   55     | . Expr BITWISEXOR Expr
   56     | . Expr EQ Expr
   57     | . Expr NE Expr
   58     | . Expr LE Expr
   59     | . Expr GE Expr
   60     | . Expr LT Expr
   61     | . Expr GT Expr
   62     | . PLUS Expr
   63     | . MINUS Expr
   64     | . NOT Expr
   65     | . IDENTIFIER LPAR error RPAR
   66     | . IDENTIFIER LPAR RPAR
   67     | . IDENTIFIER LPAR ZEROPLUS3 RPAR
   68     | . IDENTIFIER
   69     | . NATURAL
   70     | . CHRLITS
   71     | . DECIMAL
   72     | . LPAR Expr RPAR
   72     | LPAR . Expr RPAR
   73     | . LPAR error RPAR
   73     | LPAR . error RPAR

    error       shift, and go to state 55
    MINUS       shift, and go to state 27
    PLUS        shift, and go to state 28
    NOT         shift, and go to state 29
    LPAR        shift, and go to state 30
    CHRLITS     shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NATURAL     shift, and go to state 33
    DECIMAL     shift, and go to state 34

    Expr  go to state 56


state 31

   70 Expr: CHRLITS .

    $default  reduce using rule 70 (Expr)


state 32

   65 Expr: IDENTIFIER . LPAR error RPAR
   66     | IDENTIFIER . LPAR RPAR
   67     | IDENTIFIER . LPAR ZEROPLUS3 RPAR
   68     | IDENTIFIER .  [COMMA, ASSIGN, BITWISEOR, BITWISEXOR, BITWISEAND, OR, AND, GE, GT, LE, LT, NE, EQ, MINUS, PLUS, MOD, DIV, MUL, SEMI, RPAR]

    LPAR  shift, and go to state 57

    $default  reduce using rule 68 (Expr)


state 33

   69 Expr: NATURAL .

    $default  reduce using rule 69 (Expr)


state 34

   71 Expr: DECIMAL .

    $default  reduce using rule 71 (Expr)


state 35

   29 Declarator: IDENTIFIER ASSIGN Expr .  [COMMA, SEMI]
   44 Expr: Expr . ASSIGN Expr
   45     | Expr . COMMA Expr
   46     | Expr . PLUS Expr
   47     | Expr . MINUS Expr
   48     | Expr . MUL Expr
   49     | Expr . DIV Expr
   50     | Expr . MOD Expr
   51     | Expr . OR Expr
   52     | Expr . AND Expr
   53     | Expr . BITWISEAND Expr
   54     | Expr . BITWISEOR Expr
   55     | Expr . BITWISEXOR Expr
   56     | Expr . EQ Expr
   57     | Expr . NE Expr
   58     | Expr . LE Expr
   59     | Expr . GE Expr
   60     | Expr . LT Expr
   61     | Expr . GT Expr

    ASSIGN      shift, and go to state 59
    BITWISEOR   shift, and go to state 60
    BITWISEXOR  shift, and go to state 61
    BITWISEAND  shift, and go to state 62
    OR          shift, and go to state 63
    AND         shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    LE          shift, and go to state 67
    LT          shift, and go to state 68
    NE          shift, and go to state 69
    EQ          shift, and go to state 70
    MINUS       shift, and go to state 71
    PLUS        shift, and go to state 72
    MOD         shift, and go to state 73
    DIV         shift, and go to state 74
    MUL         shift, and go to state 75

    $default  reduce using rule 29 (Declarator)

    Conflict between rule 29 and token COMMA resolved as reduce (COMMA < ASSIGN).


state 36

   15 FunctionDeclarator: IDENTIFIER LPAR ParameterList . RPAR
   16 ParameterList: ParameterList . COMMA ParameterDeclaration

    COMMA  shift, and go to state 76
    RPAR   shift, and go to state 77


state 37

   17 ParameterList: ParameterDeclaration .

    $default  reduce using rule 17 (ParameterList)


state 38

   18 ParameterDeclaration: TypeSpec . IDENTIFIER
   19                     | TypeSpec .  [COMMA, RPAR]

    IDENTIFIER  shift, and go to state 78

    $default  reduce using rule 19 (ParameterDeclaration)


state 39

   37 Statement: RETURN . Expr SEMI
   38          | RETURN . SEMI
   44 Expr: . Expr ASSIGN Expr
   45     | . Expr COMMA Expr
   46     | . Expr PLUS Expr
   47     | . Expr MINUS Expr
   48     | . Expr MUL Expr
   49     | . Expr DIV Expr
   50     | . Expr MOD Expr
   51     | . Expr OR Expr
   52     | . Expr AND Expr
   53     | . Expr BITWISEAND Expr
   54     | . Expr BITWISEOR Expr
   55     | . Expr BITWISEXOR Expr
   56     | . Expr EQ Expr
   57     | . Expr NE Expr
   58     | . Expr LE Expr
   59     | . Expr GE Expr
   60     | . Expr LT Expr
   61     | . Expr GT Expr
   62     | . PLUS Expr
   63     | . MINUS Expr
   64     | . NOT Expr
   65     | . IDENTIFIER LPAR error RPAR
   66     | . IDENTIFIER LPAR RPAR
   67     | . IDENTIFIER LPAR ZEROPLUS3 RPAR
   68     | . IDENTIFIER
   69     | . NATURAL
   70     | . CHRLITS
   71     | . DECIMAL
   72     | . LPAR Expr RPAR
   73     | . LPAR error RPAR

    MINUS       shift, and go to state 27
    PLUS        shift, and go to state 28
    NOT         shift, and go to state 29
    SEMI        shift, and go to state 79
    LPAR        shift, and go to state 30
    CHRLITS     shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NATURAL     shift, and go to state 33
    DECIMAL     shift, and go to state 34

    Expr  go to state 80


state 40

   32 Statement: LBRACE . ZEROPLUS2 RBRACE
   33          | LBRACE . ErrorRule RBRACE
   39 ErrorRule: . error SEMI
   42 ZEROPLUS2: . ZEROPLUS2 Statement
   43          | .  [MINUS, PLUS, NOT, RETURN, SEMI, LBRACE, LPAR, RBRACE, WHILE, IF, CHRLITS, IDENTIFIER, NATURAL, DECIMAL]

    error  shift, and go to state 1

    MINUS       reduce using rule 43 (ZEROPLUS2)
    PLUS        reduce using rule 43 (ZEROPLUS2)
    NOT         reduce using rule 43 (ZEROPLUS2)
    RETURN      reduce using rule 43 (ZEROPLUS2)
    SEMI        reduce using rule 43 (ZEROPLUS2)
    LBRACE      reduce using rule 43 (ZEROPLUS2)
    LPAR        reduce using rule 43 (ZEROPLUS2)
    RBRACE      reduce using rule 43 (ZEROPLUS2)
    WHILE       reduce using rule 43 (ZEROPLUS2)
    IF          reduce using rule 43 (ZEROPLUS2)
    CHRLITS     reduce using rule 43 (ZEROPLUS2)
    IDENTIFIER  reduce using rule 43 (ZEROPLUS2)
    NATURAL     reduce using rule 43 (ZEROPLUS2)
    DECIMAL     reduce using rule 43 (ZEROPLUS2)

    ErrorRule  go to state 81
    ZEROPLUS2  go to state 82


state 41

    8 FunctionBody: LBRACE RBRACE .

    $default  reduce using rule 8 (FunctionBody)


state 42

   36 Statement: WHILE . LPAR Expr RPAR Statement

    LPAR  shift, and go to state 83


state 43

   34 Statement: IF . LPAR Expr RPAR Statement ELSE Statement
   35          | IF . LPAR Expr RPAR Statement

    LPAR  shift, and go to state 84


state 44

    9 FunctionBody: LBRACE DeclarationsAndStatements . RBRACE

    RBRACE  shift, and go to state 85


state 45

   10 DeclarationsAndStatements: . Statement DeclarationsAndStatements
   11                          | . Declaration DeclarationsAndStatements
   11                          | Declaration . DeclarationsAndStatements
   12                          | . Statement
   13                          | . Declaration  [RBRACE]
   13                          | Declaration .  [RBRACE]
   20 Declaration: . TypeSpec Declarator ZEROPLUS1 SEMI
   21            | . ErrorRule
   24 TypeSpec: . CHAR
   25         | . INT
   26         | . VOID
   27         | . SHORT
   28         | . DOUBLE
   31 Statement: . OPTIONAL4 SEMI
   32          | . LBRACE ZEROPLUS2 RBRACE
   33          | . LBRACE ErrorRule RBRACE
   34          | . IF LPAR Expr RPAR Statement ELSE Statement
   35          | . IF LPAR Expr RPAR Statement
   36          | . WHILE LPAR Expr RPAR Statement
   37          | . RETURN Expr SEMI
   38          | . RETURN SEMI
   39 ErrorRule: . error SEMI
   40 OPTIONAL4: . Expr
   41          | .  [SEMI]
   44 Expr: . Expr ASSIGN Expr
   45     | . Expr COMMA Expr
   46     | . Expr PLUS Expr
   47     | . Expr MINUS Expr
   48     | . Expr MUL Expr
   49     | . Expr DIV Expr
   50     | . Expr MOD Expr
   51     | . Expr OR Expr
   52     | . Expr AND Expr
   53     | . Expr BITWISEAND Expr
   54     | . Expr BITWISEOR Expr
   55     | . Expr BITWISEXOR Expr
   56     | . Expr EQ Expr
   57     | . Expr NE Expr
   58     | . Expr LE Expr
   59     | . Expr GE Expr
   60     | . Expr LT Expr
   61     | . Expr GT Expr
   62     | . PLUS Expr
   63     | . MINUS Expr
   64     | . NOT Expr
   65     | . IDENTIFIER LPAR error RPAR
   66     | . IDENTIFIER LPAR RPAR
   67     | . IDENTIFIER LPAR ZEROPLUS3 RPAR
   68     | . IDENTIFIER
   69     | . NATURAL
   70     | . CHRLITS
   71     | . DECIMAL
   72     | . LPAR Expr RPAR
   73     | . LPAR error RPAR

    error       shift, and go to state 1
    MINUS       shift, and go to state 27
    PLUS        shift, and go to state 28
    NOT         shift, and go to state 29
    CHAR        shift, and go to state 2
    INT         shift, and go to state 3
    SHORT       shift, and go to state 4
    DOUBLE      shift, and go to state 5
    RETURN      shift, and go to state 39
    VOID        shift, and go to state 6
    LBRACE      shift, and go to state 40
    LPAR        shift, and go to state 30
    WHILE       shift, and go to state 42
    IF          shift, and go to state 43
    CHRLITS     shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NATURAL     shift, and go to state 33
    DECIMAL     shift, and go to state 34

    SEMI    reduce using rule 41 (OPTIONAL4)
    RBRACE  reduce using rule 13 (DeclarationsAndStatements)

    DeclarationsAndStatements  go to state 86
    Declaration                go to state 45
    TypeSpec                   go to state 46
    Statement                  go to state 47
    ErrorRule                  go to state 12
    OPTIONAL4                  go to state 48
    Expr                       go to state 49


state 46

   20 Declaration: TypeSpec . Declarator ZEROPLUS1 SEMI
   29 Declarator: . IDENTIFIER ASSIGN Expr
   30           | . IDENTIFIER

    IDENTIFIER  shift, and go to state 87

    Declarator  go to state 20


state 47

   10 DeclarationsAndStatements: . Statement DeclarationsAndStatements
   10                          | Statement . DeclarationsAndStatements
   11                          | . Declaration DeclarationsAndStatements
   12                          | . Statement  [RBRACE]
   12                          | Statement .  [RBRACE]
   13                          | . Declaration
   20 Declaration: . TypeSpec Declarator ZEROPLUS1 SEMI
   21            | . ErrorRule
   24 TypeSpec: . CHAR
   25         | . INT
   26         | . VOID
   27         | . SHORT
   28         | . DOUBLE
   31 Statement: . OPTIONAL4 SEMI
   32          | . LBRACE ZEROPLUS2 RBRACE
   33          | . LBRACE ErrorRule RBRACE
   34          | . IF LPAR Expr RPAR Statement ELSE Statement
   35          | . IF LPAR Expr RPAR Statement
   36          | . WHILE LPAR Expr RPAR Statement
   37          | . RETURN Expr SEMI
   38          | . RETURN SEMI
   39 ErrorRule: . error SEMI
   40 OPTIONAL4: . Expr
   41          | .  [SEMI]
   44 Expr: . Expr ASSIGN Expr
   45     | . Expr COMMA Expr
   46     | . Expr PLUS Expr
   47     | . Expr MINUS Expr
   48     | . Expr MUL Expr
   49     | . Expr DIV Expr
   50     | . Expr MOD Expr
   51     | . Expr OR Expr
   52     | . Expr AND Expr
   53     | . Expr BITWISEAND Expr
   54     | . Expr BITWISEOR Expr
   55     | . Expr BITWISEXOR Expr
   56     | . Expr EQ Expr
   57     | . Expr NE Expr
   58     | . Expr LE Expr
   59     | . Expr GE Expr
   60     | . Expr LT Expr
   61     | . Expr GT Expr
   62     | . PLUS Expr
   63     | . MINUS Expr
   64     | . NOT Expr
   65     | . IDENTIFIER LPAR error RPAR
   66     | . IDENTIFIER LPAR RPAR
   67     | . IDENTIFIER LPAR ZEROPLUS3 RPAR
   68     | . IDENTIFIER
   69     | . NATURAL
   70     | . CHRLITS
   71     | . DECIMAL
   72     | . LPAR Expr RPAR
   73     | . LPAR error RPAR

    error       shift, and go to state 1
    MINUS       shift, and go to state 27
    PLUS        shift, and go to state 28
    NOT         shift, and go to state 29
    CHAR        shift, and go to state 2
    INT         shift, and go to state 3
    SHORT       shift, and go to state 4
    DOUBLE      shift, and go to state 5
    RETURN      shift, and go to state 39
    VOID        shift, and go to state 6
    LBRACE      shift, and go to state 40
    LPAR        shift, and go to state 30
    WHILE       shift, and go to state 42
    IF          shift, and go to state 43
    CHRLITS     shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NATURAL     shift, and go to state 33
    DECIMAL     shift, and go to state 34

    SEMI    reduce using rule 41 (OPTIONAL4)
    RBRACE  reduce using rule 12 (DeclarationsAndStatements)

    DeclarationsAndStatements  go to state 88
    Declaration                go to state 45
    TypeSpec                   go to state 46
    Statement                  go to state 47
    ErrorRule                  go to state 12
    OPTIONAL4                  go to state 48
    Expr                       go to state 49


state 48

   31 Statement: OPTIONAL4 . SEMI

    SEMI  shift, and go to state 89


state 49

   40 OPTIONAL4: Expr .  [SEMI]
   44 Expr: Expr . ASSIGN Expr
   45     | Expr . COMMA Expr
   46     | Expr . PLUS Expr
   47     | Expr . MINUS Expr
   48     | Expr . MUL Expr
   49     | Expr . DIV Expr
   50     | Expr . MOD Expr
   51     | Expr . OR Expr
   52     | Expr . AND Expr
   53     | Expr . BITWISEAND Expr
   54     | Expr . BITWISEOR Expr
   55     | Expr . BITWISEXOR Expr
   56     | Expr . EQ Expr
   57     | Expr . NE Expr
   58     | Expr . LE Expr
   59     | Expr . GE Expr
   60     | Expr . LT Expr
   61     | Expr . GT Expr

    COMMA       shift, and go to state 58
    ASSIGN      shift, and go to state 59
    BITWISEOR   shift, and go to state 60
    BITWISEXOR  shift, and go to state 61
    BITWISEAND  shift, and go to state 62
    OR          shift, and go to state 63
    AND         shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    LE          shift, and go to state 67
    LT          shift, and go to state 68
    NE          shift, and go to state 69
    EQ          shift, and go to state 70
    MINUS       shift, and go to state 71
    PLUS        shift, and go to state 72
    MOD         shift, and go to state 73
    DIV         shift, and go to state 74
    MUL         shift, and go to state 75

    $default  reduce using rule 40 (OPTIONAL4)


state 50

   22 ZEROPLUS1: ZEROPLUS1 COMMA . Declarator
   29 Declarator: . IDENTIFIER ASSIGN Expr
   30           | . IDENTIFIER

    IDENTIFIER  shift, and go to state 87

    Declarator  go to state 90


state 51

   20 Declaration: TypeSpec Declarator ZEROPLUS1 SEMI .

    $default  reduce using rule 20 (Declaration)


state 52

   44 Expr: Expr . ASSIGN Expr
   45     | Expr . COMMA Expr
   46     | Expr . PLUS Expr
   47     | Expr . MINUS Expr
   48     | Expr . MUL Expr
   49     | Expr . DIV Expr
   50     | Expr . MOD Expr
   51     | Expr . OR Expr
   52     | Expr . AND Expr
   53     | Expr . BITWISEAND Expr
   54     | Expr . BITWISEOR Expr
   55     | Expr . BITWISEXOR Expr
   56     | Expr . EQ Expr
   57     | Expr . NE Expr
   58     | Expr . LE Expr
   59     | Expr . GE Expr
   60     | Expr . LT Expr
   61     | Expr . GT Expr
   63     | MINUS Expr .  [COMMA, ASSIGN, BITWISEOR, BITWISEXOR, BITWISEAND, OR, AND, GE, GT, LE, LT, NE, EQ, MINUS, PLUS, MOD, DIV, MUL, SEMI, RPAR]

    $default  reduce using rule 63 (Expr)

    Conflict between rule 63 and token COMMA resolved as reduce (COMMA < NOT).
    Conflict between rule 63 and token ASSIGN resolved as reduce (ASSIGN < NOT).
    Conflict between rule 63 and token BITWISEOR resolved as reduce (BITWISEOR < NOT).
    Conflict between rule 63 and token BITWISEXOR resolved as reduce (BITWISEXOR < NOT).
    Conflict between rule 63 and token BITWISEAND resolved as reduce (BITWISEAND < NOT).
    Conflict between rule 63 and token OR resolved as reduce (OR < NOT).
    Conflict between rule 63 and token AND resolved as reduce (AND < NOT).
    Conflict between rule 63 and token GE resolved as reduce (GE < NOT).
    Conflict between rule 63 and token GT resolved as reduce (GT < NOT).
    Conflict between rule 63 and token LE resolved as reduce (LE < NOT).
    Conflict between rule 63 and token LT resolved as reduce (LT < NOT).
    Conflict between rule 63 and token NE resolved as reduce (NE < NOT).
    Conflict between rule 63 and token EQ resolved as reduce (EQ < NOT).
    Conflict between rule 63 and token MINUS resolved as reduce (MINUS < NOT).
    Conflict between rule 63 and token PLUS resolved as reduce (PLUS < NOT).
    Conflict between rule 63 and token MOD resolved as reduce (MOD < NOT).
    Conflict between rule 63 and token DIV resolved as reduce (DIV < NOT).
    Conflict between rule 63 and token MUL resolved as reduce (MUL < NOT).


state 53

   44 Expr: Expr . ASSIGN Expr
   45     | Expr . COMMA Expr
   46     | Expr . PLUS Expr
   47     | Expr . MINUS Expr
   48     | Expr . MUL Expr
   49     | Expr . DIV Expr
   50     | Expr . MOD Expr
   51     | Expr . OR Expr
   52     | Expr . AND Expr
   53     | Expr . BITWISEAND Expr
   54     | Expr . BITWISEOR Expr
   55     | Expr . BITWISEXOR Expr
   56     | Expr . EQ Expr
   57     | Expr . NE Expr
   58     | Expr . LE Expr
   59     | Expr . GE Expr
   60     | Expr . LT Expr
   61     | Expr . GT Expr
   62     | PLUS Expr .  [COMMA, ASSIGN, BITWISEOR, BITWISEXOR, BITWISEAND, OR, AND, GE, GT, LE, LT, NE, EQ, MINUS, PLUS, MOD, DIV, MUL, SEMI, RPAR]

    $default  reduce using rule 62 (Expr)

    Conflict between rule 62 and token COMMA resolved as reduce (COMMA < NOT).
    Conflict between rule 62 and token ASSIGN resolved as reduce (ASSIGN < NOT).
    Conflict between rule 62 and token BITWISEOR resolved as reduce (BITWISEOR < NOT).
    Conflict between rule 62 and token BITWISEXOR resolved as reduce (BITWISEXOR < NOT).
    Conflict between rule 62 and token BITWISEAND resolved as reduce (BITWISEAND < NOT).
    Conflict between rule 62 and token OR resolved as reduce (OR < NOT).
    Conflict between rule 62 and token AND resolved as reduce (AND < NOT).
    Conflict between rule 62 and token GE resolved as reduce (GE < NOT).
    Conflict between rule 62 and token GT resolved as reduce (GT < NOT).
    Conflict between rule 62 and token LE resolved as reduce (LE < NOT).
    Conflict between rule 62 and token LT resolved as reduce (LT < NOT).
    Conflict between rule 62 and token NE resolved as reduce (NE < NOT).
    Conflict between rule 62 and token EQ resolved as reduce (EQ < NOT).
    Conflict between rule 62 and token MINUS resolved as reduce (MINUS < NOT).
    Conflict between rule 62 and token PLUS resolved as reduce (PLUS < NOT).
    Conflict between rule 62 and token MOD resolved as reduce (MOD < NOT).
    Conflict between rule 62 and token DIV resolved as reduce (DIV < NOT).
    Conflict between rule 62 and token MUL resolved as reduce (MUL < NOT).


state 54

   44 Expr: Expr . ASSIGN Expr
   45     | Expr . COMMA Expr
   46     | Expr . PLUS Expr
   47     | Expr . MINUS Expr
   48     | Expr . MUL Expr
   49     | Expr . DIV Expr
   50     | Expr . MOD Expr
   51     | Expr . OR Expr
   52     | Expr . AND Expr
   53     | Expr . BITWISEAND Expr
   54     | Expr . BITWISEOR Expr
   55     | Expr . BITWISEXOR Expr
   56     | Expr . EQ Expr
   57     | Expr . NE Expr
   58     | Expr . LE Expr
   59     | Expr . GE Expr
   60     | Expr . LT Expr
   61     | Expr . GT Expr
   64     | NOT Expr .  [COMMA, ASSIGN, BITWISEOR, BITWISEXOR, BITWISEAND, OR, AND, GE, GT, LE, LT, NE, EQ, MINUS, PLUS, MOD, DIV, MUL, SEMI, RPAR]

    $default  reduce using rule 64 (Expr)

    Conflict between rule 64 and token COMMA resolved as reduce (COMMA < NOT).
    Conflict between rule 64 and token ASSIGN resolved as reduce (ASSIGN < NOT).
    Conflict between rule 64 and token BITWISEOR resolved as reduce (BITWISEOR < NOT).
    Conflict between rule 64 and token BITWISEXOR resolved as reduce (BITWISEXOR < NOT).
    Conflict between rule 64 and token BITWISEAND resolved as reduce (BITWISEAND < NOT).
    Conflict between rule 64 and token OR resolved as reduce (OR < NOT).
    Conflict between rule 64 and token AND resolved as reduce (AND < NOT).
    Conflict between rule 64 and token GE resolved as reduce (GE < NOT).
    Conflict between rule 64 and token GT resolved as reduce (GT < NOT).
    Conflict between rule 64 and token LE resolved as reduce (LE < NOT).
    Conflict between rule 64 and token LT resolved as reduce (LT < NOT).
    Conflict between rule 64 and token NE resolved as reduce (NE < NOT).
    Conflict between rule 64 and token EQ resolved as reduce (EQ < NOT).
    Conflict between rule 64 and token MINUS resolved as reduce (MINUS < NOT).
    Conflict between rule 64 and token PLUS resolved as reduce (PLUS < NOT).
    Conflict between rule 64 and token MOD resolved as reduce (MOD < NOT).
    Conflict between rule 64 and token DIV resolved as reduce (DIV < NOT).
    Conflict between rule 64 and token MUL resolved as reduce (MUL < NOT).


state 55

   73 Expr: LPAR error . RPAR

    RPAR  shift, and go to state 91


state 56

   44 Expr: Expr . ASSIGN Expr
   45     | Expr . COMMA Expr
   46     | Expr . PLUS Expr
   47     | Expr . MINUS Expr
   48     | Expr . MUL Expr
   49     | Expr . DIV Expr
   50     | Expr . MOD Expr
   51     | Expr . OR Expr
   52     | Expr . AND Expr
   53     | Expr . BITWISEAND Expr
   54     | Expr . BITWISEOR Expr
   55     | Expr . BITWISEXOR Expr
   56     | Expr . EQ Expr
   57     | Expr . NE Expr
   58     | Expr . LE Expr
   59     | Expr . GE Expr
   60     | Expr . LT Expr
   61     | Expr . GT Expr
   72     | LPAR Expr . RPAR

    COMMA       shift, and go to state 58
    ASSIGN      shift, and go to state 59
    BITWISEOR   shift, and go to state 60
    BITWISEXOR  shift, and go to state 61
    BITWISEAND  shift, and go to state 62
    OR          shift, and go to state 63
    AND         shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    LE          shift, and go to state 67
    LT          shift, and go to state 68
    NE          shift, and go to state 69
    EQ          shift, and go to state 70
    MINUS       shift, and go to state 71
    PLUS        shift, and go to state 72
    MOD         shift, and go to state 73
    DIV         shift, and go to state 74
    MUL         shift, and go to state 75
    RPAR        shift, and go to state 92


state 57

   44 Expr: . Expr ASSIGN Expr
   45     | . Expr COMMA Expr
   46     | . Expr PLUS Expr
   47     | . Expr MINUS Expr
   48     | . Expr MUL Expr
   49     | . Expr DIV Expr
   50     | . Expr MOD Expr
   51     | . Expr OR Expr
   52     | . Expr AND Expr
   53     | . Expr BITWISEAND Expr
   54     | . Expr BITWISEOR Expr
   55     | . Expr BITWISEXOR Expr
   56     | . Expr EQ Expr
   57     | . Expr NE Expr
   58     | . Expr LE Expr
   59     | . Expr GE Expr
   60     | . Expr LT Expr
   61     | . Expr GT Expr
   62     | . PLUS Expr
   63     | . MINUS Expr
   64     | . NOT Expr
   65     | . IDENTIFIER LPAR error RPAR
   65     | IDENTIFIER LPAR . error RPAR
   66     | . IDENTIFIER LPAR RPAR
   66     | IDENTIFIER LPAR . RPAR
   67     | . IDENTIFIER LPAR ZEROPLUS3 RPAR
   67     | IDENTIFIER LPAR . ZEROPLUS3 RPAR
   68     | . IDENTIFIER
   69     | . NATURAL
   70     | . CHRLITS
   71     | . DECIMAL
   72     | . LPAR Expr RPAR
   73     | . LPAR error RPAR
   74 ZEROPLUS3: . ZEROPLUS3 COMMA Expr
   75          | . Expr

    error       shift, and go to state 93
    MINUS       shift, and go to state 27
    PLUS        shift, and go to state 28
    NOT         shift, and go to state 29
    LPAR        shift, and go to state 30
    RPAR        shift, and go to state 94
    CHRLITS     shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NATURAL     shift, and go to state 33
    DECIMAL     shift, and go to state 34

    Expr       go to state 95
    ZEROPLUS3  go to state 96


state 58

   44 Expr: . Expr ASSIGN Expr
   45     | . Expr COMMA Expr
   45     | Expr COMMA . Expr
   46     | . Expr PLUS Expr
   47     | . Expr MINUS Expr
   48     | . Expr MUL Expr
   49     | . Expr DIV Expr
   50     | . Expr MOD Expr
   51     | . Expr OR Expr
   52     | . Expr AND Expr
   53     | . Expr BITWISEAND Expr
   54     | . Expr BITWISEOR Expr
   55     | . Expr BITWISEXOR Expr
   56     | . Expr EQ Expr
   57     | . Expr NE Expr
   58     | . Expr LE Expr
   59     | . Expr GE Expr
   60     | . Expr LT Expr
   61     | . Expr GT Expr
   62     | . PLUS Expr
   63     | . MINUS Expr
   64     | . NOT Expr
   65     | . IDENTIFIER LPAR error RPAR
   66     | . IDENTIFIER LPAR RPAR
   67     | . IDENTIFIER LPAR ZEROPLUS3 RPAR
   68     | . IDENTIFIER
   69     | . NATURAL
   70     | . CHRLITS
   71     | . DECIMAL
   72     | . LPAR Expr RPAR
   73     | . LPAR error RPAR

    MINUS       shift, and go to state 27
    PLUS        shift, and go to state 28
    NOT         shift, and go to state 29
    LPAR        shift, and go to state 30
    CHRLITS     shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NATURAL     shift, and go to state 33
    DECIMAL     shift, and go to state 34

    Expr  go to state 97


state 59

   44 Expr: . Expr ASSIGN Expr
   44     | Expr ASSIGN . Expr
   45     | . Expr COMMA Expr
   46     | . Expr PLUS Expr
   47     | . Expr MINUS Expr
   48     | . Expr MUL Expr
   49     | . Expr DIV Expr
   50     | . Expr MOD Expr
   51     | . Expr OR Expr
   52     | . Expr AND Expr
   53     | . Expr BITWISEAND Expr
   54     | . Expr BITWISEOR Expr
   55     | . Expr BITWISEXOR Expr
   56     | . Expr EQ Expr
   57     | . Expr NE Expr
   58     | . Expr LE Expr
   59     | . Expr GE Expr
   60     | . Expr LT Expr
   61     | . Expr GT Expr
   62     | . PLUS Expr
   63     | . MINUS Expr
   64     | . NOT Expr
   65     | . IDENTIFIER LPAR error RPAR
   66     | . IDENTIFIER LPAR RPAR
   67     | . IDENTIFIER LPAR ZEROPLUS3 RPAR
   68     | . IDENTIFIER
   69     | . NATURAL
   70     | . CHRLITS
   71     | . DECIMAL
   72     | . LPAR Expr RPAR
   73     | . LPAR error RPAR

    MINUS       shift, and go to state 27
    PLUS        shift, and go to state 28
    NOT         shift, and go to state 29
    LPAR        shift, and go to state 30
    CHRLITS     shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NATURAL     shift, and go to state 33
    DECIMAL     shift, and go to state 34

    Expr  go to state 98


state 60

   44 Expr: . Expr ASSIGN Expr
   45     | . Expr COMMA Expr
   46     | . Expr PLUS Expr
   47     | . Expr MINUS Expr
   48     | . Expr MUL Expr
   49     | . Expr DIV Expr
   50     | . Expr MOD Expr
   51     | . Expr OR Expr
   52     | . Expr AND Expr
   53     | . Expr BITWISEAND Expr
   54     | . Expr BITWISEOR Expr
   54     | Expr BITWISEOR . Expr
   55     | . Expr BITWISEXOR Expr
   56     | . Expr EQ Expr
   57     | . Expr NE Expr
   58     | . Expr LE Expr
   59     | . Expr GE Expr
   60     | . Expr LT Expr
   61     | . Expr GT Expr
   62     | . PLUS Expr
   63     | . MINUS Expr
   64     | . NOT Expr
   65     | . IDENTIFIER LPAR error RPAR
   66     | . IDENTIFIER LPAR RPAR
   67     | . IDENTIFIER LPAR ZEROPLUS3 RPAR
   68     | . IDENTIFIER
   69     | . NATURAL
   70     | . CHRLITS
   71     | . DECIMAL
   72     | . LPAR Expr RPAR
   73     | . LPAR error RPAR

    MINUS       shift, and go to state 27
    PLUS        shift, and go to state 28
    NOT         shift, and go to state 29
    LPAR        shift, and go to state 30
    CHRLITS     shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NATURAL     shift, and go to state 33
    DECIMAL     shift, and go to state 34

    Expr  go to state 99


state 61

   44 Expr: . Expr ASSIGN Expr
   45     | . Expr COMMA Expr
   46     | . Expr PLUS Expr
   47     | . Expr MINUS Expr
   48     | . Expr MUL Expr
   49     | . Expr DIV Expr
   50     | . Expr MOD Expr
   51     | . Expr OR Expr
   52     | . Expr AND Expr
   53     | . Expr BITWISEAND Expr
   54     | . Expr BITWISEOR Expr
   55     | . Expr BITWISEXOR Expr
   55     | Expr BITWISEXOR . Expr
   56     | . Expr EQ Expr
   57     | . Expr NE Expr
   58     | . Expr LE Expr
   59     | . Expr GE Expr
   60     | . Expr LT Expr
   61     | . Expr GT Expr
   62     | . PLUS Expr
   63     | . MINUS Expr
   64     | . NOT Expr
   65     | . IDENTIFIER LPAR error RPAR
   66     | . IDENTIFIER LPAR RPAR
   67     | . IDENTIFIER LPAR ZEROPLUS3 RPAR
   68     | . IDENTIFIER
   69     | . NATURAL
   70     | . CHRLITS
   71     | . DECIMAL
   72     | . LPAR Expr RPAR
   73     | . LPAR error RPAR

    MINUS       shift, and go to state 27
    PLUS        shift, and go to state 28
    NOT         shift, and go to state 29
    LPAR        shift, and go to state 30
    CHRLITS     shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NATURAL     shift, and go to state 33
    DECIMAL     shift, and go to state 34

    Expr  go to state 100


state 62

   44 Expr: . Expr ASSIGN Expr
   45     | . Expr COMMA Expr
   46     | . Expr PLUS Expr
   47     | . Expr MINUS Expr
   48     | . Expr MUL Expr
   49     | . Expr DIV Expr
   50     | . Expr MOD Expr
   51     | . Expr OR Expr
   52     | . Expr AND Expr
   53     | . Expr BITWISEAND Expr
   53     | Expr BITWISEAND . Expr
   54     | . Expr BITWISEOR Expr
   55     | . Expr BITWISEXOR Expr
   56     | . Expr EQ Expr
   57     | . Expr NE Expr
   58     | . Expr LE Expr
   59     | . Expr GE Expr
   60     | . Expr LT Expr
   61     | . Expr GT Expr
   62     | . PLUS Expr
   63     | . MINUS Expr
   64     | . NOT Expr
   65     | . IDENTIFIER LPAR error RPAR
   66     | . IDENTIFIER LPAR RPAR
   67     | . IDENTIFIER LPAR ZEROPLUS3 RPAR
   68     | . IDENTIFIER
   69     | . NATURAL
   70     | . CHRLITS
   71     | . DECIMAL
   72     | . LPAR Expr RPAR
   73     | . LPAR error RPAR

    MINUS       shift, and go to state 27
    PLUS        shift, and go to state 28
    NOT         shift, and go to state 29
    LPAR        shift, and go to state 30
    CHRLITS     shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NATURAL     shift, and go to state 33
    DECIMAL     shift, and go to state 34

    Expr  go to state 101


state 63

   44 Expr: . Expr ASSIGN Expr
   45     | . Expr COMMA Expr
   46     | . Expr PLUS Expr
   47     | . Expr MINUS Expr
   48     | . Expr MUL Expr
   49     | . Expr DIV Expr
   50     | . Expr MOD Expr
   51     | . Expr OR Expr
   51     | Expr OR . Expr
   52     | . Expr AND Expr
   53     | . Expr BITWISEAND Expr
   54     | . Expr BITWISEOR Expr
   55     | . Expr BITWISEXOR Expr
   56     | . Expr EQ Expr
   57     | . Expr NE Expr
   58     | . Expr LE Expr
   59     | . Expr GE Expr
   60     | . Expr LT Expr
   61     | . Expr GT Expr
   62     | . PLUS Expr
   63     | . MINUS Expr
   64     | . NOT Expr
   65     | . IDENTIFIER LPAR error RPAR
   66     | . IDENTIFIER LPAR RPAR
   67     | . IDENTIFIER LPAR ZEROPLUS3 RPAR
   68     | . IDENTIFIER
   69     | . NATURAL
   70     | . CHRLITS
   71     | . DECIMAL
   72     | . LPAR Expr RPAR
   73     | . LPAR error RPAR

    MINUS       shift, and go to state 27
    PLUS        shift, and go to state 28
    NOT         shift, and go to state 29
    LPAR        shift, and go to state 30
    CHRLITS     shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NATURAL     shift, and go to state 33
    DECIMAL     shift, and go to state 34

    Expr  go to state 102


state 64

   44 Expr: . Expr ASSIGN Expr
   45     | . Expr COMMA Expr
   46     | . Expr PLUS Expr
   47     | . Expr MINUS Expr
   48     | . Expr MUL Expr
   49     | . Expr DIV Expr
   50     | . Expr MOD Expr
   51     | . Expr OR Expr
   52     | . Expr AND Expr
   52     | Expr AND . Expr
   53     | . Expr BITWISEAND Expr
   54     | . Expr BITWISEOR Expr
   55     | . Expr BITWISEXOR Expr
   56     | . Expr EQ Expr
   57     | . Expr NE Expr
   58     | . Expr LE Expr
   59     | . Expr GE Expr
   60     | . Expr LT Expr
   61     | . Expr GT Expr
   62     | . PLUS Expr
   63     | . MINUS Expr
   64     | . NOT Expr
   65     | . IDENTIFIER LPAR error RPAR
   66     | . IDENTIFIER LPAR RPAR
   67     | . IDENTIFIER LPAR ZEROPLUS3 RPAR
   68     | . IDENTIFIER
   69     | . NATURAL
   70     | . CHRLITS
   71     | . DECIMAL
   72     | . LPAR Expr RPAR
   73     | . LPAR error RPAR

    MINUS       shift, and go to state 27
    PLUS        shift, and go to state 28
    NOT         shift, and go to state 29
    LPAR        shift, and go to state 30
    CHRLITS     shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NATURAL     shift, and go to state 33
    DECIMAL     shift, and go to state 34

    Expr  go to state 103


state 65

   44 Expr: . Expr ASSIGN Expr
   45     | . Expr COMMA Expr
   46     | . Expr PLUS Expr
   47     | . Expr MINUS Expr
   48     | . Expr MUL Expr
   49     | . Expr DIV Expr
   50     | . Expr MOD Expr
   51     | . Expr OR Expr
   52     | . Expr AND Expr
   53     | . Expr BITWISEAND Expr
   54     | . Expr BITWISEOR Expr
   55     | . Expr BITWISEXOR Expr
   56     | . Expr EQ Expr
   57     | . Expr NE Expr
   58     | . Expr LE Expr
   59     | . Expr GE Expr
   59     | Expr GE . Expr
   60     | . Expr LT Expr
   61     | . Expr GT Expr
   62     | . PLUS Expr
   63     | . MINUS Expr
   64     | . NOT Expr
   65     | . IDENTIFIER LPAR error RPAR
   66     | . IDENTIFIER LPAR RPAR
   67     | . IDENTIFIER LPAR ZEROPLUS3 RPAR
   68     | . IDENTIFIER
   69     | . NATURAL
   70     | . CHRLITS
   71     | . DECIMAL
   72     | . LPAR Expr RPAR
   73     | . LPAR error RPAR

    MINUS       shift, and go to state 27
    PLUS        shift, and go to state 28
    NOT         shift, and go to state 29
    LPAR        shift, and go to state 30
    CHRLITS     shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NATURAL     shift, and go to state 33
    DECIMAL     shift, and go to state 34

    Expr  go to state 104


state 66

   44 Expr: . Expr ASSIGN Expr
   45     | . Expr COMMA Expr
   46     | . Expr PLUS Expr
   47     | . Expr MINUS Expr
   48     | . Expr MUL Expr
   49     | . Expr DIV Expr
   50     | . Expr MOD Expr
   51     | . Expr OR Expr
   52     | . Expr AND Expr
   53     | . Expr BITWISEAND Expr
   54     | . Expr BITWISEOR Expr
   55     | . Expr BITWISEXOR Expr
   56     | . Expr EQ Expr
   57     | . Expr NE Expr
   58     | . Expr LE Expr
   59     | . Expr GE Expr
   60     | . Expr LT Expr
   61     | . Expr GT Expr
   61     | Expr GT . Expr
   62     | . PLUS Expr
   63     | . MINUS Expr
   64     | . NOT Expr
   65     | . IDENTIFIER LPAR error RPAR
   66     | . IDENTIFIER LPAR RPAR
   67     | . IDENTIFIER LPAR ZEROPLUS3 RPAR
   68     | . IDENTIFIER
   69     | . NATURAL
   70     | . CHRLITS
   71     | . DECIMAL
   72     | . LPAR Expr RPAR
   73     | . LPAR error RPAR

    MINUS       shift, and go to state 27
    PLUS        shift, and go to state 28
    NOT         shift, and go to state 29
    LPAR        shift, and go to state 30
    CHRLITS     shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NATURAL     shift, and go to state 33
    DECIMAL     shift, and go to state 34

    Expr  go to state 105


state 67

   44 Expr: . Expr ASSIGN Expr
   45     | . Expr COMMA Expr
   46     | . Expr PLUS Expr
   47     | . Expr MINUS Expr
   48     | . Expr MUL Expr
   49     | . Expr DIV Expr
   50     | . Expr MOD Expr
   51     | . Expr OR Expr
   52     | . Expr AND Expr
   53     | . Expr BITWISEAND Expr
   54     | . Expr BITWISEOR Expr
   55     | . Expr BITWISEXOR Expr
   56     | . Expr EQ Expr
   57     | . Expr NE Expr
   58     | . Expr LE Expr
   58     | Expr LE . Expr
   59     | . Expr GE Expr
   60     | . Expr LT Expr
   61     | . Expr GT Expr
   62     | . PLUS Expr
   63     | . MINUS Expr
   64     | . NOT Expr
   65     | . IDENTIFIER LPAR error RPAR
   66     | . IDENTIFIER LPAR RPAR
   67     | . IDENTIFIER LPAR ZEROPLUS3 RPAR
   68     | . IDENTIFIER
   69     | . NATURAL
   70     | . CHRLITS
   71     | . DECIMAL
   72     | . LPAR Expr RPAR
   73     | . LPAR error RPAR

    MINUS       shift, and go to state 27
    PLUS        shift, and go to state 28
    NOT         shift, and go to state 29
    LPAR        shift, and go to state 30
    CHRLITS     shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NATURAL     shift, and go to state 33
    DECIMAL     shift, and go to state 34

    Expr  go to state 106


state 68

   44 Expr: . Expr ASSIGN Expr
   45     | . Expr COMMA Expr
   46     | . Expr PLUS Expr
   47     | . Expr MINUS Expr
   48     | . Expr MUL Expr
   49     | . Expr DIV Expr
   50     | . Expr MOD Expr
   51     | . Expr OR Expr
   52     | . Expr AND Expr
   53     | . Expr BITWISEAND Expr
   54     | . Expr BITWISEOR Expr
   55     | . Expr BITWISEXOR Expr
   56     | . Expr EQ Expr
   57     | . Expr NE Expr
   58     | . Expr LE Expr
   59     | . Expr GE Expr
   60     | . Expr LT Expr
   60     | Expr LT . Expr
   61     | . Expr GT Expr
   62     | . PLUS Expr
   63     | . MINUS Expr
   64     | . NOT Expr
   65     | . IDENTIFIER LPAR error RPAR
   66     | . IDENTIFIER LPAR RPAR
   67     | . IDENTIFIER LPAR ZEROPLUS3 RPAR
   68     | . IDENTIFIER
   69     | . NATURAL
   70     | . CHRLITS
   71     | . DECIMAL
   72     | . LPAR Expr RPAR
   73     | . LPAR error RPAR

    MINUS       shift, and go to state 27
    PLUS        shift, and go to state 28
    NOT         shift, and go to state 29
    LPAR        shift, and go to state 30
    CHRLITS     shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NATURAL     shift, and go to state 33
    DECIMAL     shift, and go to state 34

    Expr  go to state 107


state 69

   44 Expr: . Expr ASSIGN Expr
   45     | . Expr COMMA Expr
   46     | . Expr PLUS Expr
   47     | . Expr MINUS Expr
   48     | . Expr MUL Expr
   49     | . Expr DIV Expr
   50     | . Expr MOD Expr
   51     | . Expr OR Expr
   52     | . Expr AND Expr
   53     | . Expr BITWISEAND Expr
   54     | . Expr BITWISEOR Expr
   55     | . Expr BITWISEXOR Expr
   56     | . Expr EQ Expr
   57     | . Expr NE Expr
   57     | Expr NE . Expr
   58     | . Expr LE Expr
   59     | . Expr GE Expr
   60     | . Expr LT Expr
   61     | . Expr GT Expr
   62     | . PLUS Expr
   63     | . MINUS Expr
   64     | . NOT Expr
   65     | . IDENTIFIER LPAR error RPAR
   66     | . IDENTIFIER LPAR RPAR
   67     | . IDENTIFIER LPAR ZEROPLUS3 RPAR
   68     | . IDENTIFIER
   69     | . NATURAL
   70     | . CHRLITS
   71     | . DECIMAL
   72     | . LPAR Expr RPAR
   73     | . LPAR error RPAR

    MINUS       shift, and go to state 27
    PLUS        shift, and go to state 28
    NOT         shift, and go to state 29
    LPAR        shift, and go to state 30
    CHRLITS     shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NATURAL     shift, and go to state 33
    DECIMAL     shift, and go to state 34

    Expr  go to state 108


state 70

   44 Expr: . Expr ASSIGN Expr
   45     | . Expr COMMA Expr
   46     | . Expr PLUS Expr
   47     | . Expr MINUS Expr
   48     | . Expr MUL Expr
   49     | . Expr DIV Expr
   50     | . Expr MOD Expr
   51     | . Expr OR Expr
   52     | . Expr AND Expr
   53     | . Expr BITWISEAND Expr
   54     | . Expr BITWISEOR Expr
   55     | . Expr BITWISEXOR Expr
   56     | . Expr EQ Expr
   56     | Expr EQ . Expr
   57     | . Expr NE Expr
   58     | . Expr LE Expr
   59     | . Expr GE Expr
   60     | . Expr LT Expr
   61     | . Expr GT Expr
   62     | . PLUS Expr
   63     | . MINUS Expr
   64     | . NOT Expr
   65     | . IDENTIFIER LPAR error RPAR
   66     | . IDENTIFIER LPAR RPAR
   67     | . IDENTIFIER LPAR ZEROPLUS3 RPAR
   68     | . IDENTIFIER
   69     | . NATURAL
   70     | . CHRLITS
   71     | . DECIMAL
   72     | . LPAR Expr RPAR
   73     | . LPAR error RPAR

    MINUS       shift, and go to state 27
    PLUS        shift, and go to state 28
    NOT         shift, and go to state 29
    LPAR        shift, and go to state 30
    CHRLITS     shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NATURAL     shift, and go to state 33
    DECIMAL     shift, and go to state 34

    Expr  go to state 109


state 71

   44 Expr: . Expr ASSIGN Expr
   45     | . Expr COMMA Expr
   46     | . Expr PLUS Expr
   47     | . Expr MINUS Expr
   47     | Expr MINUS . Expr
   48     | . Expr MUL Expr
   49     | . Expr DIV Expr
   50     | . Expr MOD Expr
   51     | . Expr OR Expr
   52     | . Expr AND Expr
   53     | . Expr BITWISEAND Expr
   54     | . Expr BITWISEOR Expr
   55     | . Expr BITWISEXOR Expr
   56     | . Expr EQ Expr
   57     | . Expr NE Expr
   58     | . Expr LE Expr
   59     | . Expr GE Expr
   60     | . Expr LT Expr
   61     | . Expr GT Expr
   62     | . PLUS Expr
   63     | . MINUS Expr
   64     | . NOT Expr
   65     | . IDENTIFIER LPAR error RPAR
   66     | . IDENTIFIER LPAR RPAR
   67     | . IDENTIFIER LPAR ZEROPLUS3 RPAR
   68     | . IDENTIFIER
   69     | . NATURAL
   70     | . CHRLITS
   71     | . DECIMAL
   72     | . LPAR Expr RPAR
   73     | . LPAR error RPAR

    MINUS       shift, and go to state 27
    PLUS        shift, and go to state 28
    NOT         shift, and go to state 29
    LPAR        shift, and go to state 30
    CHRLITS     shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NATURAL     shift, and go to state 33
    DECIMAL     shift, and go to state 34

    Expr  go to state 110


state 72

   44 Expr: . Expr ASSIGN Expr
   45     | . Expr COMMA Expr
   46     | . Expr PLUS Expr
   46     | Expr PLUS . Expr
   47     | . Expr MINUS Expr
   48     | . Expr MUL Expr
   49     | . Expr DIV Expr
   50     | . Expr MOD Expr
   51     | . Expr OR Expr
   52     | . Expr AND Expr
   53     | . Expr BITWISEAND Expr
   54     | . Expr BITWISEOR Expr
   55     | . Expr BITWISEXOR Expr
   56     | . Expr EQ Expr
   57     | . Expr NE Expr
   58     | . Expr LE Expr
   59     | . Expr GE Expr
   60     | . Expr LT Expr
   61     | . Expr GT Expr
   62     | . PLUS Expr
   63     | . MINUS Expr
   64     | . NOT Expr
   65     | . IDENTIFIER LPAR error RPAR
   66     | . IDENTIFIER LPAR RPAR
   67     | . IDENTIFIER LPAR ZEROPLUS3 RPAR
   68     | . IDENTIFIER
   69     | . NATURAL
   70     | . CHRLITS
   71     | . DECIMAL
   72     | . LPAR Expr RPAR
   73     | . LPAR error RPAR

    MINUS       shift, and go to state 27
    PLUS        shift, and go to state 28
    NOT         shift, and go to state 29
    LPAR        shift, and go to state 30
    CHRLITS     shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NATURAL     shift, and go to state 33
    DECIMAL     shift, and go to state 34

    Expr  go to state 111


state 73

   44 Expr: . Expr ASSIGN Expr
   45     | . Expr COMMA Expr
   46     | . Expr PLUS Expr
   47     | . Expr MINUS Expr
   48     | . Expr MUL Expr
   49     | . Expr DIV Expr
   50     | . Expr MOD Expr
   50     | Expr MOD . Expr
   51     | . Expr OR Expr
   52     | . Expr AND Expr
   53     | . Expr BITWISEAND Expr
   54     | . Expr BITWISEOR Expr
   55     | . Expr BITWISEXOR Expr
   56     | . Expr EQ Expr
   57     | . Expr NE Expr
   58     | . Expr LE Expr
   59     | . Expr GE Expr
   60     | . Expr LT Expr
   61     | . Expr GT Expr
   62     | . PLUS Expr
   63     | . MINUS Expr
   64     | . NOT Expr
   65     | . IDENTIFIER LPAR error RPAR
   66     | . IDENTIFIER LPAR RPAR
   67     | . IDENTIFIER LPAR ZEROPLUS3 RPAR
   68     | . IDENTIFIER
   69     | . NATURAL
   70     | . CHRLITS
   71     | . DECIMAL
   72     | . LPAR Expr RPAR
   73     | . LPAR error RPAR

    MINUS       shift, and go to state 27
    PLUS        shift, and go to state 28
    NOT         shift, and go to state 29
    LPAR        shift, and go to state 30
    CHRLITS     shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NATURAL     shift, and go to state 33
    DECIMAL     shift, and go to state 34

    Expr  go to state 112


state 74

   44 Expr: . Expr ASSIGN Expr
   45     | . Expr COMMA Expr
   46     | . Expr PLUS Expr
   47     | . Expr MINUS Expr
   48     | . Expr MUL Expr
   49     | . Expr DIV Expr
   49     | Expr DIV . Expr
   50     | . Expr MOD Expr
   51     | . Expr OR Expr
   52     | . Expr AND Expr
   53     | . Expr BITWISEAND Expr
   54     | . Expr BITWISEOR Expr
   55     | . Expr BITWISEXOR Expr
   56     | . Expr EQ Expr
   57     | . Expr NE Expr
   58     | . Expr LE Expr
   59     | . Expr GE Expr
   60     | . Expr LT Expr
   61     | . Expr GT Expr
   62     | . PLUS Expr
   63     | . MINUS Expr
   64     | . NOT Expr
   65     | . IDENTIFIER LPAR error RPAR
   66     | . IDENTIFIER LPAR RPAR
   67     | . IDENTIFIER LPAR ZEROPLUS3 RPAR
   68     | . IDENTIFIER
   69     | . NATURAL
   70     | . CHRLITS
   71     | . DECIMAL
   72     | . LPAR Expr RPAR
   73     | . LPAR error RPAR

    MINUS       shift, and go to state 27
    PLUS        shift, and go to state 28
    NOT         shift, and go to state 29
    LPAR        shift, and go to state 30
    CHRLITS     shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NATURAL     shift, and go to state 33
    DECIMAL     shift, and go to state 34

    Expr  go to state 113


state 75

   44 Expr: . Expr ASSIGN Expr
   45     | . Expr COMMA Expr
   46     | . Expr PLUS Expr
   47     | . Expr MINUS Expr
   48     | . Expr MUL Expr
   48     | Expr MUL . Expr
   49     | . Expr DIV Expr
   50     | . Expr MOD Expr
   51     | . Expr OR Expr
   52     | . Expr AND Expr
   53     | . Expr BITWISEAND Expr
   54     | . Expr BITWISEOR Expr
   55     | . Expr BITWISEXOR Expr
   56     | . Expr EQ Expr
   57     | . Expr NE Expr
   58     | . Expr LE Expr
   59     | . Expr GE Expr
   60     | . Expr LT Expr
   61     | . Expr GT Expr
   62     | . PLUS Expr
   63     | . MINUS Expr
   64     | . NOT Expr
   65     | . IDENTIFIER LPAR error RPAR
   66     | . IDENTIFIER LPAR RPAR
   67     | . IDENTIFIER LPAR ZEROPLUS3 RPAR
   68     | . IDENTIFIER
   69     | . NATURAL
   70     | . CHRLITS
   71     | . DECIMAL
   72     | . LPAR Expr RPAR
   73     | . LPAR error RPAR

    MINUS       shift, and go to state 27
    PLUS        shift, and go to state 28
    NOT         shift, and go to state 29
    LPAR        shift, and go to state 30
    CHRLITS     shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NATURAL     shift, and go to state 33
    DECIMAL     shift, and go to state 34

    Expr  go to state 114


state 76

   16 ParameterList: ParameterList COMMA . ParameterDeclaration
   18 ParameterDeclaration: . TypeSpec IDENTIFIER
   19                     | . TypeSpec
   24 TypeSpec: . CHAR
   25         | . INT
   26         | . VOID
   27         | . SHORT
   28         | . DOUBLE

    CHAR    shift, and go to state 2
    INT     shift, and go to state 3
    SHORT   shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6

    ParameterDeclaration  go to state 115
    TypeSpec              go to state 38


state 77

   15 FunctionDeclarator: IDENTIFIER LPAR ParameterList RPAR .

    $default  reduce using rule 15 (FunctionDeclarator)


state 78

   18 ParameterDeclaration: TypeSpec IDENTIFIER .

    $default  reduce using rule 18 (ParameterDeclaration)


state 79

   38 Statement: RETURN SEMI .

    $default  reduce using rule 38 (Statement)


state 80

   37 Statement: RETURN Expr . SEMI
   44 Expr: Expr . ASSIGN Expr
   45     | Expr . COMMA Expr
   46     | Expr . PLUS Expr
   47     | Expr . MINUS Expr
   48     | Expr . MUL Expr
   49     | Expr . DIV Expr
   50     | Expr . MOD Expr
   51     | Expr . OR Expr
   52     | Expr . AND Expr
   53     | Expr . BITWISEAND Expr
   54     | Expr . BITWISEOR Expr
   55     | Expr . BITWISEXOR Expr
   56     | Expr . EQ Expr
   57     | Expr . NE Expr
   58     | Expr . LE Expr
   59     | Expr . GE Expr
   60     | Expr . LT Expr
   61     | Expr . GT Expr

    COMMA       shift, and go to state 58
    ASSIGN      shift, and go to state 59
    BITWISEOR   shift, and go to state 60
    BITWISEXOR  shift, and go to state 61
    BITWISEAND  shift, and go to state 62
    OR          shift, and go to state 63
    AND         shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    LE          shift, and go to state 67
    LT          shift, and go to state 68
    NE          shift, and go to state 69
    EQ          shift, and go to state 70
    MINUS       shift, and go to state 71
    PLUS        shift, and go to state 72
    MOD         shift, and go to state 73
    DIV         shift, and go to state 74
    MUL         shift, and go to state 75
    SEMI        shift, and go to state 116


state 81

   33 Statement: LBRACE ErrorRule . RBRACE

    RBRACE  shift, and go to state 117


state 82

   31 Statement: . OPTIONAL4 SEMI
   32          | . LBRACE ZEROPLUS2 RBRACE
   32          | LBRACE ZEROPLUS2 . RBRACE
   33          | . LBRACE ErrorRule RBRACE
   34          | . IF LPAR Expr RPAR Statement ELSE Statement
   35          | . IF LPAR Expr RPAR Statement
   36          | . WHILE LPAR Expr RPAR Statement
   37          | . RETURN Expr SEMI
   38          | . RETURN SEMI
   40 OPTIONAL4: . Expr
   41          | .  [SEMI]
   42 ZEROPLUS2: ZEROPLUS2 . Statement
   44 Expr: . Expr ASSIGN Expr
   45     | . Expr COMMA Expr
   46     | . Expr PLUS Expr
   47     | . Expr MINUS Expr
   48     | . Expr MUL Expr
   49     | . Expr DIV Expr
   50     | . Expr MOD Expr
   51     | . Expr OR Expr
   52     | . Expr AND Expr
   53     | . Expr BITWISEAND Expr
   54     | . Expr BITWISEOR Expr
   55     | . Expr BITWISEXOR Expr
   56     | . Expr EQ Expr
   57     | . Expr NE Expr
   58     | . Expr LE Expr
   59     | . Expr GE Expr
   60     | . Expr LT Expr
   61     | . Expr GT Expr
   62     | . PLUS Expr
   63     | . MINUS Expr
   64     | . NOT Expr
   65     | . IDENTIFIER LPAR error RPAR
   66     | . IDENTIFIER LPAR RPAR
   67     | . IDENTIFIER LPAR ZEROPLUS3 RPAR
   68     | . IDENTIFIER
   69     | . NATURAL
   70     | . CHRLITS
   71     | . DECIMAL
   72     | . LPAR Expr RPAR
   73     | . LPAR error RPAR

    MINUS       shift, and go to state 27
    PLUS        shift, and go to state 28
    NOT         shift, and go to state 29
    RETURN      shift, and go to state 39
    LBRACE      shift, and go to state 40
    LPAR        shift, and go to state 30
    RBRACE      shift, and go to state 118
    WHILE       shift, and go to state 42
    IF          shift, and go to state 43
    CHRLITS     shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NATURAL     shift, and go to state 33
    DECIMAL     shift, and go to state 34

    $default  reduce using rule 41 (OPTIONAL4)

    Statement  go to state 119
    OPTIONAL4  go to state 48
    Expr       go to state 49


state 83

   36 Statement: WHILE LPAR . Expr RPAR Statement
   44 Expr: . Expr ASSIGN Expr
   45     | . Expr COMMA Expr
   46     | . Expr PLUS Expr
   47     | . Expr MINUS Expr
   48     | . Expr MUL Expr
   49     | . Expr DIV Expr
   50     | . Expr MOD Expr
   51     | . Expr OR Expr
   52     | . Expr AND Expr
   53     | . Expr BITWISEAND Expr
   54     | . Expr BITWISEOR Expr
   55     | . Expr BITWISEXOR Expr
   56     | . Expr EQ Expr
   57     | . Expr NE Expr
   58     | . Expr LE Expr
   59     | . Expr GE Expr
   60     | . Expr LT Expr
   61     | . Expr GT Expr
   62     | . PLUS Expr
   63     | . MINUS Expr
   64     | . NOT Expr
   65     | . IDENTIFIER LPAR error RPAR
   66     | . IDENTIFIER LPAR RPAR
   67     | . IDENTIFIER LPAR ZEROPLUS3 RPAR
   68     | . IDENTIFIER
   69     | . NATURAL
   70     | . CHRLITS
   71     | . DECIMAL
   72     | . LPAR Expr RPAR
   73     | . LPAR error RPAR

    MINUS       shift, and go to state 27
    PLUS        shift, and go to state 28
    NOT         shift, and go to state 29
    LPAR        shift, and go to state 30
    CHRLITS     shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NATURAL     shift, and go to state 33
    DECIMAL     shift, and go to state 34

    Expr  go to state 120


state 84

   34 Statement: IF LPAR . Expr RPAR Statement ELSE Statement
   35          | IF LPAR . Expr RPAR Statement
   44 Expr: . Expr ASSIGN Expr
   45     | . Expr COMMA Expr
   46     | . Expr PLUS Expr
   47     | . Expr MINUS Expr
   48     | . Expr MUL Expr
   49     | . Expr DIV Expr
   50     | . Expr MOD Expr
   51     | . Expr OR Expr
   52     | . Expr AND Expr
   53     | . Expr BITWISEAND Expr
   54     | . Expr BITWISEOR Expr
   55     | . Expr BITWISEXOR Expr
   56     | . Expr EQ Expr
   57     | . Expr NE Expr
   58     | . Expr LE Expr
   59     | . Expr GE Expr
   60     | . Expr LT Expr
   61     | . Expr GT Expr
   62     | . PLUS Expr
   63     | . MINUS Expr
   64     | . NOT Expr
   65     | . IDENTIFIER LPAR error RPAR
   66     | . IDENTIFIER LPAR RPAR
   67     | . IDENTIFIER LPAR ZEROPLUS3 RPAR
   68     | . IDENTIFIER
   69     | . NATURAL
   70     | . CHRLITS
   71     | . DECIMAL
   72     | . LPAR Expr RPAR
   73     | . LPAR error RPAR

    MINUS       shift, and go to state 27
    PLUS        shift, and go to state 28
    NOT         shift, and go to state 29
    LPAR        shift, and go to state 30
    CHRLITS     shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NATURAL     shift, and go to state 33
    DECIMAL     shift, and go to state 34

    Expr  go to state 121


state 85

    9 FunctionBody: LBRACE DeclarationsAndStatements RBRACE .

    $default  reduce using rule 9 (FunctionBody)


state 86

   11 DeclarationsAndStatements: Declaration DeclarationsAndStatements .

    $default  reduce using rule 11 (DeclarationsAndStatements)


state 87

   29 Declarator: IDENTIFIER . ASSIGN Expr
   30           | IDENTIFIER .  [COMMA, SEMI]

    ASSIGN  shift, and go to state 21

    $default  reduce using rule 30 (Declarator)


state 88

   10 DeclarationsAndStatements: Statement DeclarationsAndStatements .

    $default  reduce using rule 10 (DeclarationsAndStatements)


state 89

   31 Statement: OPTIONAL4 SEMI .

    $default  reduce using rule 31 (Statement)


state 90

   22 ZEROPLUS1: ZEROPLUS1 COMMA Declarator .

    $default  reduce using rule 22 (ZEROPLUS1)


state 91

   73 Expr: LPAR error RPAR .

    $default  reduce using rule 73 (Expr)


state 92

   72 Expr: LPAR Expr RPAR .

    $default  reduce using rule 72 (Expr)


state 93

   65 Expr: IDENTIFIER LPAR error . RPAR

    RPAR  shift, and go to state 122


state 94

   66 Expr: IDENTIFIER LPAR RPAR .

    $default  reduce using rule 66 (Expr)


state 95

   44 Expr: Expr . ASSIGN Expr
   45     | Expr . COMMA Expr
   46     | Expr . PLUS Expr
   47     | Expr . MINUS Expr
   48     | Expr . MUL Expr
   49     | Expr . DIV Expr
   50     | Expr . MOD Expr
   51     | Expr . OR Expr
   52     | Expr . AND Expr
   53     | Expr . BITWISEAND Expr
   54     | Expr . BITWISEOR Expr
   55     | Expr . BITWISEXOR Expr
   56     | Expr . EQ Expr
   57     | Expr . NE Expr
   58     | Expr . LE Expr
   59     | Expr . GE Expr
   60     | Expr . LT Expr
   61     | Expr . GT Expr
   75 ZEROPLUS3: Expr .  [COMMA, RPAR]

    ASSIGN      shift, and go to state 59
    BITWISEOR   shift, and go to state 60
    BITWISEXOR  shift, and go to state 61
    BITWISEAND  shift, and go to state 62
    OR          shift, and go to state 63
    AND         shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    LE          shift, and go to state 67
    LT          shift, and go to state 68
    NE          shift, and go to state 69
    EQ          shift, and go to state 70
    MINUS       shift, and go to state 71
    PLUS        shift, and go to state 72
    MOD         shift, and go to state 73
    DIV         shift, and go to state 74
    MUL         shift, and go to state 75

    $default  reduce using rule 75 (ZEROPLUS3)

    Conflict between rule 75 and token COMMA resolved as reduce (COMMA < LOWER).


state 96

   67 Expr: IDENTIFIER LPAR ZEROPLUS3 . RPAR
   74 ZEROPLUS3: ZEROPLUS3 . COMMA Expr

    COMMA  shift, and go to state 123
    RPAR   shift, and go to state 124


state 97

   44 Expr: Expr . ASSIGN Expr
   45     | Expr . COMMA Expr  [COMMA, SEMI, RPAR]
   45     | Expr COMMA Expr .  [COMMA, SEMI, RPAR]
   46     | Expr . PLUS Expr
   47     | Expr . MINUS Expr
   48     | Expr . MUL Expr
   49     | Expr . DIV Expr
   50     | Expr . MOD Expr
   51     | Expr . OR Expr
   52     | Expr . AND Expr
   53     | Expr . BITWISEAND Expr
   54     | Expr . BITWISEOR Expr
   55     | Expr . BITWISEXOR Expr
   56     | Expr . EQ Expr
   57     | Expr . NE Expr
   58     | Expr . LE Expr
   59     | Expr . GE Expr
   60     | Expr . LT Expr
   61     | Expr . GT Expr

    ASSIGN      shift, and go to state 59
    BITWISEOR   shift, and go to state 60
    BITWISEXOR  shift, and go to state 61
    BITWISEAND  shift, and go to state 62
    OR          shift, and go to state 63
    AND         shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    LE          shift, and go to state 67
    LT          shift, and go to state 68
    NE          shift, and go to state 69
    EQ          shift, and go to state 70
    MINUS       shift, and go to state 71
    PLUS        shift, and go to state 72
    MOD         shift, and go to state 73
    DIV         shift, and go to state 74
    MUL         shift, and go to state 75

    $default  reduce using rule 45 (Expr)

    Conflict between rule 45 and token COMMA resolved as reduce (%left COMMA).
    Conflict between rule 45 and token ASSIGN resolved as shift (COMMA < ASSIGN).
    Conflict between rule 45 and token BITWISEOR resolved as shift (COMMA < BITWISEOR).
    Conflict between rule 45 and token BITWISEXOR resolved as shift (COMMA < BITWISEXOR).
    Conflict between rule 45 and token BITWISEAND resolved as shift (COMMA < BITWISEAND).
    Conflict between rule 45 and token OR resolved as shift (COMMA < OR).
    Conflict between rule 45 and token AND resolved as shift (COMMA < AND).
    Conflict between rule 45 and token GE resolved as shift (COMMA < GE).
    Conflict between rule 45 and token GT resolved as shift (COMMA < GT).
    Conflict between rule 45 and token LE resolved as shift (COMMA < LE).
    Conflict between rule 45 and token LT resolved as shift (COMMA < LT).
    Conflict between rule 45 and token NE resolved as shift (COMMA < NE).
    Conflict between rule 45 and token EQ resolved as shift (COMMA < EQ).
    Conflict between rule 45 and token MINUS resolved as shift (COMMA < MINUS).
    Conflict between rule 45 and token PLUS resolved as shift (COMMA < PLUS).
    Conflict between rule 45 and token MOD resolved as shift (COMMA < MOD).
    Conflict between rule 45 and token DIV resolved as shift (COMMA < DIV).
    Conflict between rule 45 and token MUL resolved as shift (COMMA < MUL).


state 98

   44 Expr: Expr . ASSIGN Expr  [COMMA, SEMI, RPAR]
   44     | Expr ASSIGN Expr .  [COMMA, SEMI, RPAR]
   45     | Expr . COMMA Expr
   46     | Expr . PLUS Expr
   47     | Expr . MINUS Expr
   48     | Expr . MUL Expr
   49     | Expr . DIV Expr
   50     | Expr . MOD Expr
   51     | Expr . OR Expr
   52     | Expr . AND Expr
   53     | Expr . BITWISEAND Expr
   54     | Expr . BITWISEOR Expr
   55     | Expr . BITWISEXOR Expr
   56     | Expr . EQ Expr
   57     | Expr . NE Expr
   58     | Expr . LE Expr
   59     | Expr . GE Expr
   60     | Expr . LT Expr
   61     | Expr . GT Expr

    ASSIGN      shift, and go to state 59
    BITWISEOR   shift, and go to state 60
    BITWISEXOR  shift, and go to state 61
    BITWISEAND  shift, and go to state 62
    OR          shift, and go to state 63
    AND         shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    LE          shift, and go to state 67
    LT          shift, and go to state 68
    NE          shift, and go to state 69
    EQ          shift, and go to state 70
    MINUS       shift, and go to state 71
    PLUS        shift, and go to state 72
    MOD         shift, and go to state 73
    DIV         shift, and go to state 74
    MUL         shift, and go to state 75

    $default  reduce using rule 44 (Expr)

    Conflict between rule 44 and token COMMA resolved as reduce (COMMA < ASSIGN).
    Conflict between rule 44 and token ASSIGN resolved as shift (%right ASSIGN).
    Conflict between rule 44 and token BITWISEOR resolved as shift (ASSIGN < BITWISEOR).
    Conflict between rule 44 and token BITWISEXOR resolved as shift (ASSIGN < BITWISEXOR).
    Conflict between rule 44 and token BITWISEAND resolved as shift (ASSIGN < BITWISEAND).
    Conflict between rule 44 and token OR resolved as shift (ASSIGN < OR).
    Conflict between rule 44 and token AND resolved as shift (ASSIGN < AND).
    Conflict between rule 44 and token GE resolved as shift (ASSIGN < GE).
    Conflict between rule 44 and token GT resolved as shift (ASSIGN < GT).
    Conflict between rule 44 and token LE resolved as shift (ASSIGN < LE).
    Conflict between rule 44 and token LT resolved as shift (ASSIGN < LT).
    Conflict between rule 44 and token NE resolved as shift (ASSIGN < NE).
    Conflict between rule 44 and token EQ resolved as shift (ASSIGN < EQ).
    Conflict between rule 44 and token MINUS resolved as shift (ASSIGN < MINUS).
    Conflict between rule 44 and token PLUS resolved as shift (ASSIGN < PLUS).
    Conflict between rule 44 and token MOD resolved as shift (ASSIGN < MOD).
    Conflict between rule 44 and token DIV resolved as shift (ASSIGN < DIV).
    Conflict between rule 44 and token MUL resolved as shift (ASSIGN < MUL).


state 99

   44 Expr: Expr . ASSIGN Expr
   45     | Expr . COMMA Expr
   46     | Expr . PLUS Expr
   47     | Expr . MINUS Expr
   48     | Expr . MUL Expr
   49     | Expr . DIV Expr
   50     | Expr . MOD Expr
   51     | Expr . OR Expr
   52     | Expr . AND Expr
   53     | Expr . BITWISEAND Expr
   54     | Expr . BITWISEOR Expr  [COMMA, ASSIGN, BITWISEOR, SEMI, RPAR]
   54     | Expr BITWISEOR Expr .  [COMMA, ASSIGN, BITWISEOR, SEMI, RPAR]
   55     | Expr . BITWISEXOR Expr
   56     | Expr . EQ Expr
   57     | Expr . NE Expr
   58     | Expr . LE Expr
   59     | Expr . GE Expr
   60     | Expr . LT Expr
   61     | Expr . GT Expr

    BITWISEXOR  shift, and go to state 61
    BITWISEAND  shift, and go to state 62
    OR          shift, and go to state 63
    AND         shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    LE          shift, and go to state 67
    LT          shift, and go to state 68
    NE          shift, and go to state 69
    EQ          shift, and go to state 70
    MINUS       shift, and go to state 71
    PLUS        shift, and go to state 72
    MOD         shift, and go to state 73
    DIV         shift, and go to state 74
    MUL         shift, and go to state 75

    $default  reduce using rule 54 (Expr)

    Conflict between rule 54 and token COMMA resolved as reduce (COMMA < BITWISEOR).
    Conflict between rule 54 and token ASSIGN resolved as reduce (ASSIGN < BITWISEOR).
    Conflict between rule 54 and token BITWISEOR resolved as reduce (%left BITWISEOR).
    Conflict between rule 54 and token BITWISEXOR resolved as shift (BITWISEOR < BITWISEXOR).
    Conflict between rule 54 and token BITWISEAND resolved as shift (BITWISEOR < BITWISEAND).
    Conflict between rule 54 and token OR resolved as shift (BITWISEOR < OR).
    Conflict between rule 54 and token AND resolved as shift (BITWISEOR < AND).
    Conflict between rule 54 and token GE resolved as shift (BITWISEOR < GE).
    Conflict between rule 54 and token GT resolved as shift (BITWISEOR < GT).
    Conflict between rule 54 and token LE resolved as shift (BITWISEOR < LE).
    Conflict between rule 54 and token LT resolved as shift (BITWISEOR < LT).
    Conflict between rule 54 and token NE resolved as shift (BITWISEOR < NE).
    Conflict between rule 54 and token EQ resolved as shift (BITWISEOR < EQ).
    Conflict between rule 54 and token MINUS resolved as shift (BITWISEOR < MINUS).
    Conflict between rule 54 and token PLUS resolved as shift (BITWISEOR < PLUS).
    Conflict between rule 54 and token MOD resolved as shift (BITWISEOR < MOD).
    Conflict between rule 54 and token DIV resolved as shift (BITWISEOR < DIV).
    Conflict between rule 54 and token MUL resolved as shift (BITWISEOR < MUL).


state 100

   44 Expr: Expr . ASSIGN Expr
   45     | Expr . COMMA Expr
   46     | Expr . PLUS Expr
   47     | Expr . MINUS Expr
   48     | Expr . MUL Expr
   49     | Expr . DIV Expr
   50     | Expr . MOD Expr
   51     | Expr . OR Expr
   52     | Expr . AND Expr
   53     | Expr . BITWISEAND Expr
   54     | Expr . BITWISEOR Expr
   55     | Expr . BITWISEXOR Expr  [COMMA, ASSIGN, BITWISEOR, BITWISEXOR, SEMI, RPAR]
   55     | Expr BITWISEXOR Expr .  [COMMA, ASSIGN, BITWISEOR, BITWISEXOR, SEMI, RPAR]
   56     | Expr . EQ Expr
   57     | Expr . NE Expr
   58     | Expr . LE Expr
   59     | Expr . GE Expr
   60     | Expr . LT Expr
   61     | Expr . GT Expr

    BITWISEAND  shift, and go to state 62
    OR          shift, and go to state 63
    AND         shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    LE          shift, and go to state 67
    LT          shift, and go to state 68
    NE          shift, and go to state 69
    EQ          shift, and go to state 70
    MINUS       shift, and go to state 71
    PLUS        shift, and go to state 72
    MOD         shift, and go to state 73
    DIV         shift, and go to state 74
    MUL         shift, and go to state 75

    $default  reduce using rule 55 (Expr)

    Conflict between rule 55 and token COMMA resolved as reduce (COMMA < BITWISEXOR).
    Conflict between rule 55 and token ASSIGN resolved as reduce (ASSIGN < BITWISEXOR).
    Conflict between rule 55 and token BITWISEOR resolved as reduce (BITWISEOR < BITWISEXOR).
    Conflict between rule 55 and token BITWISEXOR resolved as reduce (%left BITWISEXOR).
    Conflict between rule 55 and token BITWISEAND resolved as shift (BITWISEXOR < BITWISEAND).
    Conflict between rule 55 and token OR resolved as shift (BITWISEXOR < OR).
    Conflict between rule 55 and token AND resolved as shift (BITWISEXOR < AND).
    Conflict between rule 55 and token GE resolved as shift (BITWISEXOR < GE).
    Conflict between rule 55 and token GT resolved as shift (BITWISEXOR < GT).
    Conflict between rule 55 and token LE resolved as shift (BITWISEXOR < LE).
    Conflict between rule 55 and token LT resolved as shift (BITWISEXOR < LT).
    Conflict between rule 55 and token NE resolved as shift (BITWISEXOR < NE).
    Conflict between rule 55 and token EQ resolved as shift (BITWISEXOR < EQ).
    Conflict between rule 55 and token MINUS resolved as shift (BITWISEXOR < MINUS).
    Conflict between rule 55 and token PLUS resolved as shift (BITWISEXOR < PLUS).
    Conflict between rule 55 and token MOD resolved as shift (BITWISEXOR < MOD).
    Conflict between rule 55 and token DIV resolved as shift (BITWISEXOR < DIV).
    Conflict between rule 55 and token MUL resolved as shift (BITWISEXOR < MUL).


state 101

   44 Expr: Expr . ASSIGN Expr
   45     | Expr . COMMA Expr
   46     | Expr . PLUS Expr
   47     | Expr . MINUS Expr
   48     | Expr . MUL Expr
   49     | Expr . DIV Expr
   50     | Expr . MOD Expr
   51     | Expr . OR Expr
   52     | Expr . AND Expr
   53     | Expr . BITWISEAND Expr  [COMMA, ASSIGN, BITWISEOR, BITWISEXOR, BITWISEAND, SEMI, RPAR]
   53     | Expr BITWISEAND Expr .  [COMMA, ASSIGN, BITWISEOR, BITWISEXOR, BITWISEAND, SEMI, RPAR]
   54     | Expr . BITWISEOR Expr
   55     | Expr . BITWISEXOR Expr
   56     | Expr . EQ Expr
   57     | Expr . NE Expr
   58     | Expr . LE Expr
   59     | Expr . GE Expr
   60     | Expr . LT Expr
   61     | Expr . GT Expr

    OR     shift, and go to state 63
    AND    shift, and go to state 64
    GE     shift, and go to state 65
    GT     shift, and go to state 66
    LE     shift, and go to state 67
    LT     shift, and go to state 68
    NE     shift, and go to state 69
    EQ     shift, and go to state 70
    MINUS  shift, and go to state 71
    PLUS   shift, and go to state 72
    MOD    shift, and go to state 73
    DIV    shift, and go to state 74
    MUL    shift, and go to state 75

    $default  reduce using rule 53 (Expr)

    Conflict between rule 53 and token COMMA resolved as reduce (COMMA < BITWISEAND).
    Conflict between rule 53 and token ASSIGN resolved as reduce (ASSIGN < BITWISEAND).
    Conflict between rule 53 and token BITWISEOR resolved as reduce (BITWISEOR < BITWISEAND).
    Conflict between rule 53 and token BITWISEXOR resolved as reduce (BITWISEXOR < BITWISEAND).
    Conflict between rule 53 and token BITWISEAND resolved as reduce (%left BITWISEAND).
    Conflict between rule 53 and token OR resolved as shift (BITWISEAND < OR).
    Conflict between rule 53 and token AND resolved as shift (BITWISEAND < AND).
    Conflict between rule 53 and token GE resolved as shift (BITWISEAND < GE).
    Conflict between rule 53 and token GT resolved as shift (BITWISEAND < GT).
    Conflict between rule 53 and token LE resolved as shift (BITWISEAND < LE).
    Conflict between rule 53 and token LT resolved as shift (BITWISEAND < LT).
    Conflict between rule 53 and token NE resolved as shift (BITWISEAND < NE).
    Conflict between rule 53 and token EQ resolved as shift (BITWISEAND < EQ).
    Conflict between rule 53 and token MINUS resolved as shift (BITWISEAND < MINUS).
    Conflict between rule 53 and token PLUS resolved as shift (BITWISEAND < PLUS).
    Conflict between rule 53 and token MOD resolved as shift (BITWISEAND < MOD).
    Conflict between rule 53 and token DIV resolved as shift (BITWISEAND < DIV).
    Conflict between rule 53 and token MUL resolved as shift (BITWISEAND < MUL).


state 102

   44 Expr: Expr . ASSIGN Expr
   45     | Expr . COMMA Expr
   46     | Expr . PLUS Expr
   47     | Expr . MINUS Expr
   48     | Expr . MUL Expr
   49     | Expr . DIV Expr
   50     | Expr . MOD Expr
   51     | Expr . OR Expr  [COMMA, ASSIGN, BITWISEOR, BITWISEXOR, BITWISEAND, OR, AND, SEMI, RPAR]
   51     | Expr OR Expr .  [COMMA, ASSIGN, BITWISEOR, BITWISEXOR, BITWISEAND, OR, AND, SEMI, RPAR]
   52     | Expr . AND Expr
   53     | Expr . BITWISEAND Expr
   54     | Expr . BITWISEOR Expr
   55     | Expr . BITWISEXOR Expr
   56     | Expr . EQ Expr
   57     | Expr . NE Expr
   58     | Expr . LE Expr
   59     | Expr . GE Expr
   60     | Expr . LT Expr
   61     | Expr . GT Expr

    GE     shift, and go to state 65
    GT     shift, and go to state 66
    LE     shift, and go to state 67
    LT     shift, and go to state 68
    NE     shift, and go to state 69
    EQ     shift, and go to state 70
    MINUS  shift, and go to state 71
    PLUS   shift, and go to state 72
    MOD    shift, and go to state 73
    DIV    shift, and go to state 74
    MUL    shift, and go to state 75

    $default  reduce using rule 51 (Expr)

    Conflict between rule 51 and token COMMA resolved as reduce (COMMA < OR).
    Conflict between rule 51 and token ASSIGN resolved as reduce (ASSIGN < OR).
    Conflict between rule 51 and token BITWISEOR resolved as reduce (BITWISEOR < OR).
    Conflict between rule 51 and token BITWISEXOR resolved as reduce (BITWISEXOR < OR).
    Conflict between rule 51 and token BITWISEAND resolved as reduce (BITWISEAND < OR).
    Conflict between rule 51 and token OR resolved as reduce (%left OR).
    Conflict between rule 51 and token AND resolved as reduce (%left AND).
    Conflict between rule 51 and token GE resolved as shift (OR < GE).
    Conflict between rule 51 and token GT resolved as shift (OR < GT).
    Conflict between rule 51 and token LE resolved as shift (OR < LE).
    Conflict between rule 51 and token LT resolved as shift (OR < LT).
    Conflict between rule 51 and token NE resolved as shift (OR < NE).
    Conflict between rule 51 and token EQ resolved as shift (OR < EQ).
    Conflict between rule 51 and token MINUS resolved as shift (OR < MINUS).
    Conflict between rule 51 and token PLUS resolved as shift (OR < PLUS).
    Conflict between rule 51 and token MOD resolved as shift (OR < MOD).
    Conflict between rule 51 and token DIV resolved as shift (OR < DIV).
    Conflict between rule 51 and token MUL resolved as shift (OR < MUL).


state 103

   44 Expr: Expr . ASSIGN Expr
   45     | Expr . COMMA Expr
   46     | Expr . PLUS Expr
   47     | Expr . MINUS Expr
   48     | Expr . MUL Expr
   49     | Expr . DIV Expr
   50     | Expr . MOD Expr
   51     | Expr . OR Expr
   52     | Expr . AND Expr  [COMMA, ASSIGN, BITWISEOR, BITWISEXOR, BITWISEAND, OR, AND, SEMI, RPAR]
   52     | Expr AND Expr .  [COMMA, ASSIGN, BITWISEOR, BITWISEXOR, BITWISEAND, OR, AND, SEMI, RPAR]
   53     | Expr . BITWISEAND Expr
   54     | Expr . BITWISEOR Expr
   55     | Expr . BITWISEXOR Expr
   56     | Expr . EQ Expr
   57     | Expr . NE Expr
   58     | Expr . LE Expr
   59     | Expr . GE Expr
   60     | Expr . LT Expr
   61     | Expr . GT Expr

    GE     shift, and go to state 65
    GT     shift, and go to state 66
    LE     shift, and go to state 67
    LT     shift, and go to state 68
    NE     shift, and go to state 69
    EQ     shift, and go to state 70
    MINUS  shift, and go to state 71
    PLUS   shift, and go to state 72
    MOD    shift, and go to state 73
    DIV    shift, and go to state 74
    MUL    shift, and go to state 75

    $default  reduce using rule 52 (Expr)

    Conflict between rule 52 and token COMMA resolved as reduce (COMMA < AND).
    Conflict between rule 52 and token ASSIGN resolved as reduce (ASSIGN < AND).
    Conflict between rule 52 and token BITWISEOR resolved as reduce (BITWISEOR < AND).
    Conflict between rule 52 and token BITWISEXOR resolved as reduce (BITWISEXOR < AND).
    Conflict between rule 52 and token BITWISEAND resolved as reduce (BITWISEAND < AND).
    Conflict between rule 52 and token OR resolved as reduce (%left OR).
    Conflict between rule 52 and token AND resolved as reduce (%left AND).
    Conflict between rule 52 and token GE resolved as shift (AND < GE).
    Conflict between rule 52 and token GT resolved as shift (AND < GT).
    Conflict between rule 52 and token LE resolved as shift (AND < LE).
    Conflict between rule 52 and token LT resolved as shift (AND < LT).
    Conflict between rule 52 and token NE resolved as shift (AND < NE).
    Conflict between rule 52 and token EQ resolved as shift (AND < EQ).
    Conflict between rule 52 and token MINUS resolved as shift (AND < MINUS).
    Conflict between rule 52 and token PLUS resolved as shift (AND < PLUS).
    Conflict between rule 52 and token MOD resolved as shift (AND < MOD).
    Conflict between rule 52 and token DIV resolved as shift (AND < DIV).
    Conflict between rule 52 and token MUL resolved as shift (AND < MUL).


state 104

   44 Expr: Expr . ASSIGN Expr
   45     | Expr . COMMA Expr
   46     | Expr . PLUS Expr
   47     | Expr . MINUS Expr
   48     | Expr . MUL Expr
   49     | Expr . DIV Expr
   50     | Expr . MOD Expr
   51     | Expr . OR Expr
   52     | Expr . AND Expr
   53     | Expr . BITWISEAND Expr
   54     | Expr . BITWISEOR Expr
   55     | Expr . BITWISEXOR Expr
   56     | Expr . EQ Expr
   57     | Expr . NE Expr
   58     | Expr . LE Expr
   59     | Expr . GE Expr  [COMMA, ASSIGN, BITWISEOR, BITWISEXOR, BITWISEAND, OR, AND, GE, GT, LE, LT, NE, EQ, SEMI, RPAR]
   59     | Expr GE Expr .  [COMMA, ASSIGN, BITWISEOR, BITWISEXOR, BITWISEAND, OR, AND, GE, GT, LE, LT, NE, EQ, SEMI, RPAR]
   60     | Expr . LT Expr
   61     | Expr . GT Expr

    MINUS  shift, and go to state 71
    PLUS   shift, and go to state 72
    MOD    shift, and go to state 73
    DIV    shift, and go to state 74
    MUL    shift, and go to state 75

    $default  reduce using rule 59 (Expr)

    Conflict between rule 59 and token COMMA resolved as reduce (COMMA < GE).
    Conflict between rule 59 and token ASSIGN resolved as reduce (ASSIGN < GE).
    Conflict between rule 59 and token BITWISEOR resolved as reduce (BITWISEOR < GE).
    Conflict between rule 59 and token BITWISEXOR resolved as reduce (BITWISEXOR < GE).
    Conflict between rule 59 and token BITWISEAND resolved as reduce (BITWISEAND < GE).
    Conflict between rule 59 and token OR resolved as reduce (OR < GE).
    Conflict between rule 59 and token AND resolved as reduce (AND < GE).
    Conflict between rule 59 and token GE resolved as reduce (%left GE).
    Conflict between rule 59 and token GT resolved as reduce (%left GT).
    Conflict between rule 59 and token LE resolved as reduce (%left LE).
    Conflict between rule 59 and token LT resolved as reduce (%left LT).
    Conflict between rule 59 and token NE resolved as reduce (%left NE).
    Conflict between rule 59 and token EQ resolved as reduce (%left EQ).
    Conflict between rule 59 and token MINUS resolved as shift (GE < MINUS).
    Conflict between rule 59 and token PLUS resolved as shift (GE < PLUS).
    Conflict between rule 59 and token MOD resolved as shift (GE < MOD).
    Conflict between rule 59 and token DIV resolved as shift (GE < DIV).
    Conflict between rule 59 and token MUL resolved as shift (GE < MUL).


state 105

   44 Expr: Expr . ASSIGN Expr
   45     | Expr . COMMA Expr
   46     | Expr . PLUS Expr
   47     | Expr . MINUS Expr
   48     | Expr . MUL Expr
   49     | Expr . DIV Expr
   50     | Expr . MOD Expr
   51     | Expr . OR Expr
   52     | Expr . AND Expr
   53     | Expr . BITWISEAND Expr
   54     | Expr . BITWISEOR Expr
   55     | Expr . BITWISEXOR Expr
   56     | Expr . EQ Expr
   57     | Expr . NE Expr
   58     | Expr . LE Expr
   59     | Expr . GE Expr
   60     | Expr . LT Expr
   61     | Expr . GT Expr  [COMMA, ASSIGN, BITWISEOR, BITWISEXOR, BITWISEAND, OR, AND, GE, GT, LE, LT, NE, EQ, SEMI, RPAR]
   61     | Expr GT Expr .  [COMMA, ASSIGN, BITWISEOR, BITWISEXOR, BITWISEAND, OR, AND, GE, GT, LE, LT, NE, EQ, SEMI, RPAR]

    MINUS  shift, and go to state 71
    PLUS   shift, and go to state 72
    MOD    shift, and go to state 73
    DIV    shift, and go to state 74
    MUL    shift, and go to state 75

    $default  reduce using rule 61 (Expr)

    Conflict between rule 61 and token COMMA resolved as reduce (COMMA < GT).
    Conflict between rule 61 and token ASSIGN resolved as reduce (ASSIGN < GT).
    Conflict between rule 61 and token BITWISEOR resolved as reduce (BITWISEOR < GT).
    Conflict between rule 61 and token BITWISEXOR resolved as reduce (BITWISEXOR < GT).
    Conflict between rule 61 and token BITWISEAND resolved as reduce (BITWISEAND < GT).
    Conflict between rule 61 and token OR resolved as reduce (OR < GT).
    Conflict between rule 61 and token AND resolved as reduce (AND < GT).
    Conflict between rule 61 and token GE resolved as reduce (%left GE).
    Conflict between rule 61 and token GT resolved as reduce (%left GT).
    Conflict between rule 61 and token LE resolved as reduce (%left LE).
    Conflict between rule 61 and token LT resolved as reduce (%left LT).
    Conflict between rule 61 and token NE resolved as reduce (%left NE).
    Conflict between rule 61 and token EQ resolved as reduce (%left EQ).
    Conflict between rule 61 and token MINUS resolved as shift (GT < MINUS).
    Conflict between rule 61 and token PLUS resolved as shift (GT < PLUS).
    Conflict between rule 61 and token MOD resolved as shift (GT < MOD).
    Conflict between rule 61 and token DIV resolved as shift (GT < DIV).
    Conflict between rule 61 and token MUL resolved as shift (GT < MUL).


state 106

   44 Expr: Expr . ASSIGN Expr
   45     | Expr . COMMA Expr
   46     | Expr . PLUS Expr
   47     | Expr . MINUS Expr
   48     | Expr . MUL Expr
   49     | Expr . DIV Expr
   50     | Expr . MOD Expr
   51     | Expr . OR Expr
   52     | Expr . AND Expr
   53     | Expr . BITWISEAND Expr
   54     | Expr . BITWISEOR Expr
   55     | Expr . BITWISEXOR Expr
   56     | Expr . EQ Expr
   57     | Expr . NE Expr
   58     | Expr . LE Expr  [COMMA, ASSIGN, BITWISEOR, BITWISEXOR, BITWISEAND, OR, AND, GE, GT, LE, LT, NE, EQ, SEMI, RPAR]
   58     | Expr LE Expr .  [COMMA, ASSIGN, BITWISEOR, BITWISEXOR, BITWISEAND, OR, AND, GE, GT, LE, LT, NE, EQ, SEMI, RPAR]
   59     | Expr . GE Expr
   60     | Expr . LT Expr
   61     | Expr . GT Expr

    MINUS  shift, and go to state 71
    PLUS   shift, and go to state 72
    MOD    shift, and go to state 73
    DIV    shift, and go to state 74
    MUL    shift, and go to state 75

    $default  reduce using rule 58 (Expr)

    Conflict between rule 58 and token COMMA resolved as reduce (COMMA < LE).
    Conflict between rule 58 and token ASSIGN resolved as reduce (ASSIGN < LE).
    Conflict between rule 58 and token BITWISEOR resolved as reduce (BITWISEOR < LE).
    Conflict between rule 58 and token BITWISEXOR resolved as reduce (BITWISEXOR < LE).
    Conflict between rule 58 and token BITWISEAND resolved as reduce (BITWISEAND < LE).
    Conflict between rule 58 and token OR resolved as reduce (OR < LE).
    Conflict between rule 58 and token AND resolved as reduce (AND < LE).
    Conflict between rule 58 and token GE resolved as reduce (%left GE).
    Conflict between rule 58 and token GT resolved as reduce (%left GT).
    Conflict between rule 58 and token LE resolved as reduce (%left LE).
    Conflict between rule 58 and token LT resolved as reduce (%left LT).
    Conflict between rule 58 and token NE resolved as reduce (%left NE).
    Conflict between rule 58 and token EQ resolved as reduce (%left EQ).
    Conflict between rule 58 and token MINUS resolved as shift (LE < MINUS).
    Conflict between rule 58 and token PLUS resolved as shift (LE < PLUS).
    Conflict between rule 58 and token MOD resolved as shift (LE < MOD).
    Conflict between rule 58 and token DIV resolved as shift (LE < DIV).
    Conflict between rule 58 and token MUL resolved as shift (LE < MUL).


state 107

   44 Expr: Expr . ASSIGN Expr
   45     | Expr . COMMA Expr
   46     | Expr . PLUS Expr
   47     | Expr . MINUS Expr
   48     | Expr . MUL Expr
   49     | Expr . DIV Expr
   50     | Expr . MOD Expr
   51     | Expr . OR Expr
   52     | Expr . AND Expr
   53     | Expr . BITWISEAND Expr
   54     | Expr . BITWISEOR Expr
   55     | Expr . BITWISEXOR Expr
   56     | Expr . EQ Expr
   57     | Expr . NE Expr
   58     | Expr . LE Expr
   59     | Expr . GE Expr
   60     | Expr . LT Expr  [COMMA, ASSIGN, BITWISEOR, BITWISEXOR, BITWISEAND, OR, AND, GE, GT, LE, LT, NE, EQ, SEMI, RPAR]
   60     | Expr LT Expr .  [COMMA, ASSIGN, BITWISEOR, BITWISEXOR, BITWISEAND, OR, AND, GE, GT, LE, LT, NE, EQ, SEMI, RPAR]
   61     | Expr . GT Expr

    MINUS  shift, and go to state 71
    PLUS   shift, and go to state 72
    MOD    shift, and go to state 73
    DIV    shift, and go to state 74
    MUL    shift, and go to state 75

    $default  reduce using rule 60 (Expr)

    Conflict between rule 60 and token COMMA resolved as reduce (COMMA < LT).
    Conflict between rule 60 and token ASSIGN resolved as reduce (ASSIGN < LT).
    Conflict between rule 60 and token BITWISEOR resolved as reduce (BITWISEOR < LT).
    Conflict between rule 60 and token BITWISEXOR resolved as reduce (BITWISEXOR < LT).
    Conflict between rule 60 and token BITWISEAND resolved as reduce (BITWISEAND < LT).
    Conflict between rule 60 and token OR resolved as reduce (OR < LT).
    Conflict between rule 60 and token AND resolved as reduce (AND < LT).
    Conflict between rule 60 and token GE resolved as reduce (%left GE).
    Conflict between rule 60 and token GT resolved as reduce (%left GT).
    Conflict between rule 60 and token LE resolved as reduce (%left LE).
    Conflict between rule 60 and token LT resolved as reduce (%left LT).
    Conflict between rule 60 and token NE resolved as reduce (%left NE).
    Conflict between rule 60 and token EQ resolved as reduce (%left EQ).
    Conflict between rule 60 and token MINUS resolved as shift (LT < MINUS).
    Conflict between rule 60 and token PLUS resolved as shift (LT < PLUS).
    Conflict between rule 60 and token MOD resolved as shift (LT < MOD).
    Conflict between rule 60 and token DIV resolved as shift (LT < DIV).
    Conflict between rule 60 and token MUL resolved as shift (LT < MUL).


state 108

   44 Expr: Expr . ASSIGN Expr
   45     | Expr . COMMA Expr
   46     | Expr . PLUS Expr
   47     | Expr . MINUS Expr
   48     | Expr . MUL Expr
   49     | Expr . DIV Expr
   50     | Expr . MOD Expr
   51     | Expr . OR Expr
   52     | Expr . AND Expr
   53     | Expr . BITWISEAND Expr
   54     | Expr . BITWISEOR Expr
   55     | Expr . BITWISEXOR Expr
   56     | Expr . EQ Expr
   57     | Expr . NE Expr  [COMMA, ASSIGN, BITWISEOR, BITWISEXOR, BITWISEAND, OR, AND, GE, GT, LE, LT, NE, EQ, SEMI, RPAR]
   57     | Expr NE Expr .  [COMMA, ASSIGN, BITWISEOR, BITWISEXOR, BITWISEAND, OR, AND, GE, GT, LE, LT, NE, EQ, SEMI, RPAR]
   58     | Expr . LE Expr
   59     | Expr . GE Expr
   60     | Expr . LT Expr
   61     | Expr . GT Expr

    MINUS  shift, and go to state 71
    PLUS   shift, and go to state 72
    MOD    shift, and go to state 73
    DIV    shift, and go to state 74
    MUL    shift, and go to state 75

    $default  reduce using rule 57 (Expr)

    Conflict between rule 57 and token COMMA resolved as reduce (COMMA < NE).
    Conflict between rule 57 and token ASSIGN resolved as reduce (ASSIGN < NE).
    Conflict between rule 57 and token BITWISEOR resolved as reduce (BITWISEOR < NE).
    Conflict between rule 57 and token BITWISEXOR resolved as reduce (BITWISEXOR < NE).
    Conflict between rule 57 and token BITWISEAND resolved as reduce (BITWISEAND < NE).
    Conflict between rule 57 and token OR resolved as reduce (OR < NE).
    Conflict between rule 57 and token AND resolved as reduce (AND < NE).
    Conflict between rule 57 and token GE resolved as reduce (%left GE).
    Conflict between rule 57 and token GT resolved as reduce (%left GT).
    Conflict between rule 57 and token LE resolved as reduce (%left LE).
    Conflict between rule 57 and token LT resolved as reduce (%left LT).
    Conflict between rule 57 and token NE resolved as reduce (%left NE).
    Conflict between rule 57 and token EQ resolved as reduce (%left EQ).
    Conflict between rule 57 and token MINUS resolved as shift (NE < MINUS).
    Conflict between rule 57 and token PLUS resolved as shift (NE < PLUS).
    Conflict between rule 57 and token MOD resolved as shift (NE < MOD).
    Conflict between rule 57 and token DIV resolved as shift (NE < DIV).
    Conflict between rule 57 and token MUL resolved as shift (NE < MUL).


state 109

   44 Expr: Expr . ASSIGN Expr
   45     | Expr . COMMA Expr
   46     | Expr . PLUS Expr
   47     | Expr . MINUS Expr
   48     | Expr . MUL Expr
   49     | Expr . DIV Expr
   50     | Expr . MOD Expr
   51     | Expr . OR Expr
   52     | Expr . AND Expr
   53     | Expr . BITWISEAND Expr
   54     | Expr . BITWISEOR Expr
   55     | Expr . BITWISEXOR Expr
   56     | Expr . EQ Expr  [COMMA, ASSIGN, BITWISEOR, BITWISEXOR, BITWISEAND, OR, AND, GE, GT, LE, LT, NE, EQ, SEMI, RPAR]
   56     | Expr EQ Expr .  [COMMA, ASSIGN, BITWISEOR, BITWISEXOR, BITWISEAND, OR, AND, GE, GT, LE, LT, NE, EQ, SEMI, RPAR]
   57     | Expr . NE Expr
   58     | Expr . LE Expr
   59     | Expr . GE Expr
   60     | Expr . LT Expr
   61     | Expr . GT Expr

    MINUS  shift, and go to state 71
    PLUS   shift, and go to state 72
    MOD    shift, and go to state 73
    DIV    shift, and go to state 74
    MUL    shift, and go to state 75

    $default  reduce using rule 56 (Expr)

    Conflict between rule 56 and token COMMA resolved as reduce (COMMA < EQ).
    Conflict between rule 56 and token ASSIGN resolved as reduce (ASSIGN < EQ).
    Conflict between rule 56 and token BITWISEOR resolved as reduce (BITWISEOR < EQ).
    Conflict between rule 56 and token BITWISEXOR resolved as reduce (BITWISEXOR < EQ).
    Conflict between rule 56 and token BITWISEAND resolved as reduce (BITWISEAND < EQ).
    Conflict between rule 56 and token OR resolved as reduce (OR < EQ).
    Conflict between rule 56 and token AND resolved as reduce (AND < EQ).
    Conflict between rule 56 and token GE resolved as reduce (%left GE).
    Conflict between rule 56 and token GT resolved as reduce (%left GT).
    Conflict between rule 56 and token LE resolved as reduce (%left LE).
    Conflict between rule 56 and token LT resolved as reduce (%left LT).
    Conflict between rule 56 and token NE resolved as reduce (%left NE).
    Conflict between rule 56 and token EQ resolved as reduce (%left EQ).
    Conflict between rule 56 and token MINUS resolved as shift (EQ < MINUS).
    Conflict between rule 56 and token PLUS resolved as shift (EQ < PLUS).
    Conflict between rule 56 and token MOD resolved as shift (EQ < MOD).
    Conflict between rule 56 and token DIV resolved as shift (EQ < DIV).
    Conflict between rule 56 and token MUL resolved as shift (EQ < MUL).


state 110

   44 Expr: Expr . ASSIGN Expr
   45     | Expr . COMMA Expr
   46     | Expr . PLUS Expr
   47     | Expr . MINUS Expr  [COMMA, ASSIGN, BITWISEOR, BITWISEXOR, BITWISEAND, OR, AND, GE, GT, LE, LT, NE, EQ, MINUS, PLUS, SEMI, RPAR]
   47     | Expr MINUS Expr .  [COMMA, ASSIGN, BITWISEOR, BITWISEXOR, BITWISEAND, OR, AND, GE, GT, LE, LT, NE, EQ, MINUS, PLUS, SEMI, RPAR]
   48     | Expr . MUL Expr
   49     | Expr . DIV Expr
   50     | Expr . MOD Expr
   51     | Expr . OR Expr
   52     | Expr . AND Expr
   53     | Expr . BITWISEAND Expr
   54     | Expr . BITWISEOR Expr
   55     | Expr . BITWISEXOR Expr
   56     | Expr . EQ Expr
   57     | Expr . NE Expr
   58     | Expr . LE Expr
   59     | Expr . GE Expr
   60     | Expr . LT Expr
   61     | Expr . GT Expr

    MOD  shift, and go to state 73
    DIV  shift, and go to state 74
    MUL  shift, and go to state 75

    $default  reduce using rule 47 (Expr)

    Conflict between rule 47 and token COMMA resolved as reduce (COMMA < MINUS).
    Conflict between rule 47 and token ASSIGN resolved as reduce (ASSIGN < MINUS).
    Conflict between rule 47 and token BITWISEOR resolved as reduce (BITWISEOR < MINUS).
    Conflict between rule 47 and token BITWISEXOR resolved as reduce (BITWISEXOR < MINUS).
    Conflict between rule 47 and token BITWISEAND resolved as reduce (BITWISEAND < MINUS).
    Conflict between rule 47 and token OR resolved as reduce (OR < MINUS).
    Conflict between rule 47 and token AND resolved as reduce (AND < MINUS).
    Conflict between rule 47 and token GE resolved as reduce (GE < MINUS).
    Conflict between rule 47 and token GT resolved as reduce (GT < MINUS).
    Conflict between rule 47 and token LE resolved as reduce (LE < MINUS).
    Conflict between rule 47 and token LT resolved as reduce (LT < MINUS).
    Conflict between rule 47 and token NE resolved as reduce (NE < MINUS).
    Conflict between rule 47 and token EQ resolved as reduce (EQ < MINUS).
    Conflict between rule 47 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 47 and token PLUS resolved as reduce (%left PLUS).
    Conflict between rule 47 and token MOD resolved as shift (MINUS < MOD).
    Conflict between rule 47 and token DIV resolved as shift (MINUS < DIV).
    Conflict between rule 47 and token MUL resolved as shift (MINUS < MUL).


state 111

   44 Expr: Expr . ASSIGN Expr
   45     | Expr . COMMA Expr
   46     | Expr . PLUS Expr  [COMMA, ASSIGN, BITWISEOR, BITWISEXOR, BITWISEAND, OR, AND, GE, GT, LE, LT, NE, EQ, MINUS, PLUS, SEMI, RPAR]
   46     | Expr PLUS Expr .  [COMMA, ASSIGN, BITWISEOR, BITWISEXOR, BITWISEAND, OR, AND, GE, GT, LE, LT, NE, EQ, MINUS, PLUS, SEMI, RPAR]
   47     | Expr . MINUS Expr
   48     | Expr . MUL Expr
   49     | Expr . DIV Expr
   50     | Expr . MOD Expr
   51     | Expr . OR Expr
   52     | Expr . AND Expr
   53     | Expr . BITWISEAND Expr
   54     | Expr . BITWISEOR Expr
   55     | Expr . BITWISEXOR Expr
   56     | Expr . EQ Expr
   57     | Expr . NE Expr
   58     | Expr . LE Expr
   59     | Expr . GE Expr
   60     | Expr . LT Expr
   61     | Expr . GT Expr

    MOD  shift, and go to state 73
    DIV  shift, and go to state 74
    MUL  shift, and go to state 75

    $default  reduce using rule 46 (Expr)

    Conflict between rule 46 and token COMMA resolved as reduce (COMMA < PLUS).
    Conflict between rule 46 and token ASSIGN resolved as reduce (ASSIGN < PLUS).
    Conflict between rule 46 and token BITWISEOR resolved as reduce (BITWISEOR < PLUS).
    Conflict between rule 46 and token BITWISEXOR resolved as reduce (BITWISEXOR < PLUS).
    Conflict between rule 46 and token BITWISEAND resolved as reduce (BITWISEAND < PLUS).
    Conflict between rule 46 and token OR resolved as reduce (OR < PLUS).
    Conflict between rule 46 and token AND resolved as reduce (AND < PLUS).
    Conflict between rule 46 and token GE resolved as reduce (GE < PLUS).
    Conflict between rule 46 and token GT resolved as reduce (GT < PLUS).
    Conflict between rule 46 and token LE resolved as reduce (LE < PLUS).
    Conflict between rule 46 and token LT resolved as reduce (LT < PLUS).
    Conflict between rule 46 and token NE resolved as reduce (NE < PLUS).
    Conflict between rule 46 and token EQ resolved as reduce (EQ < PLUS).
    Conflict between rule 46 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 46 and token PLUS resolved as reduce (%left PLUS).
    Conflict between rule 46 and token MOD resolved as shift (PLUS < MOD).
    Conflict between rule 46 and token DIV resolved as shift (PLUS < DIV).
    Conflict between rule 46 and token MUL resolved as shift (PLUS < MUL).


state 112

   44 Expr: Expr . ASSIGN Expr
   45     | Expr . COMMA Expr
   46     | Expr . PLUS Expr
   47     | Expr . MINUS Expr
   48     | Expr . MUL Expr
   49     | Expr . DIV Expr
   50     | Expr . MOD Expr  [COMMA, ASSIGN, BITWISEOR, BITWISEXOR, BITWISEAND, OR, AND, GE, GT, LE, LT, NE, EQ, MINUS, PLUS, MOD, DIV, MUL, SEMI, RPAR]
   50     | Expr MOD Expr .  [COMMA, ASSIGN, BITWISEOR, BITWISEXOR, BITWISEAND, OR, AND, GE, GT, LE, LT, NE, EQ, MINUS, PLUS, MOD, DIV, MUL, SEMI, RPAR]
   51     | Expr . OR Expr
   52     | Expr . AND Expr
   53     | Expr . BITWISEAND Expr
   54     | Expr . BITWISEOR Expr
   55     | Expr . BITWISEXOR Expr
   56     | Expr . EQ Expr
   57     | Expr . NE Expr
   58     | Expr . LE Expr
   59     | Expr . GE Expr
   60     | Expr . LT Expr
   61     | Expr . GT Expr

    $default  reduce using rule 50 (Expr)

    Conflict between rule 50 and token COMMA resolved as reduce (COMMA < MOD).
    Conflict between rule 50 and token ASSIGN resolved as reduce (ASSIGN < MOD).
    Conflict between rule 50 and token BITWISEOR resolved as reduce (BITWISEOR < MOD).
    Conflict between rule 50 and token BITWISEXOR resolved as reduce (BITWISEXOR < MOD).
    Conflict between rule 50 and token BITWISEAND resolved as reduce (BITWISEAND < MOD).
    Conflict between rule 50 and token OR resolved as reduce (OR < MOD).
    Conflict between rule 50 and token AND resolved as reduce (AND < MOD).
    Conflict between rule 50 and token GE resolved as reduce (GE < MOD).
    Conflict between rule 50 and token GT resolved as reduce (GT < MOD).
    Conflict between rule 50 and token LE resolved as reduce (LE < MOD).
    Conflict between rule 50 and token LT resolved as reduce (LT < MOD).
    Conflict between rule 50 and token NE resolved as reduce (NE < MOD).
    Conflict between rule 50 and token EQ resolved as reduce (EQ < MOD).
    Conflict between rule 50 and token MINUS resolved as reduce (MINUS < MOD).
    Conflict between rule 50 and token PLUS resolved as reduce (PLUS < MOD).
    Conflict between rule 50 and token MOD resolved as reduce (%left MOD).
    Conflict between rule 50 and token DIV resolved as reduce (%left DIV).
    Conflict between rule 50 and token MUL resolved as reduce (%left MUL).


state 113

   44 Expr: Expr . ASSIGN Expr
   45     | Expr . COMMA Expr
   46     | Expr . PLUS Expr
   47     | Expr . MINUS Expr
   48     | Expr . MUL Expr
   49     | Expr . DIV Expr  [COMMA, ASSIGN, BITWISEOR, BITWISEXOR, BITWISEAND, OR, AND, GE, GT, LE, LT, NE, EQ, MINUS, PLUS, MOD, DIV, MUL, SEMI, RPAR]
   49     | Expr DIV Expr .  [COMMA, ASSIGN, BITWISEOR, BITWISEXOR, BITWISEAND, OR, AND, GE, GT, LE, LT, NE, EQ, MINUS, PLUS, MOD, DIV, MUL, SEMI, RPAR]
   50     | Expr . MOD Expr
   51     | Expr . OR Expr
   52     | Expr . AND Expr
   53     | Expr . BITWISEAND Expr
   54     | Expr . BITWISEOR Expr
   55     | Expr . BITWISEXOR Expr
   56     | Expr . EQ Expr
   57     | Expr . NE Expr
   58     | Expr . LE Expr
   59     | Expr . GE Expr
   60     | Expr . LT Expr
   61     | Expr . GT Expr

    $default  reduce using rule 49 (Expr)

    Conflict between rule 49 and token COMMA resolved as reduce (COMMA < DIV).
    Conflict between rule 49 and token ASSIGN resolved as reduce (ASSIGN < DIV).
    Conflict between rule 49 and token BITWISEOR resolved as reduce (BITWISEOR < DIV).
    Conflict between rule 49 and token BITWISEXOR resolved as reduce (BITWISEXOR < DIV).
    Conflict between rule 49 and token BITWISEAND resolved as reduce (BITWISEAND < DIV).
    Conflict between rule 49 and token OR resolved as reduce (OR < DIV).
    Conflict between rule 49 and token AND resolved as reduce (AND < DIV).
    Conflict between rule 49 and token GE resolved as reduce (GE < DIV).
    Conflict between rule 49 and token GT resolved as reduce (GT < DIV).
    Conflict between rule 49 and token LE resolved as reduce (LE < DIV).
    Conflict between rule 49 and token LT resolved as reduce (LT < DIV).
    Conflict between rule 49 and token NE resolved as reduce (NE < DIV).
    Conflict between rule 49 and token EQ resolved as reduce (EQ < DIV).
    Conflict between rule 49 and token MINUS resolved as reduce (MINUS < DIV).
    Conflict between rule 49 and token PLUS resolved as reduce (PLUS < DIV).
    Conflict between rule 49 and token MOD resolved as reduce (%left MOD).
    Conflict between rule 49 and token DIV resolved as reduce (%left DIV).
    Conflict between rule 49 and token MUL resolved as reduce (%left MUL).


state 114

   44 Expr: Expr . ASSIGN Expr
   45     | Expr . COMMA Expr
   46     | Expr . PLUS Expr
   47     | Expr . MINUS Expr
   48     | Expr . MUL Expr  [COMMA, ASSIGN, BITWISEOR, BITWISEXOR, BITWISEAND, OR, AND, GE, GT, LE, LT, NE, EQ, MINUS, PLUS, MOD, DIV, MUL, SEMI, RPAR]
   48     | Expr MUL Expr .  [COMMA, ASSIGN, BITWISEOR, BITWISEXOR, BITWISEAND, OR, AND, GE, GT, LE, LT, NE, EQ, MINUS, PLUS, MOD, DIV, MUL, SEMI, RPAR]
   49     | Expr . DIV Expr
   50     | Expr . MOD Expr
   51     | Expr . OR Expr
   52     | Expr . AND Expr
   53     | Expr . BITWISEAND Expr
   54     | Expr . BITWISEOR Expr
   55     | Expr . BITWISEXOR Expr
   56     | Expr . EQ Expr
   57     | Expr . NE Expr
   58     | Expr . LE Expr
   59     | Expr . GE Expr
   60     | Expr . LT Expr
   61     | Expr . GT Expr

    $default  reduce using rule 48 (Expr)

    Conflict between rule 48 and token COMMA resolved as reduce (COMMA < MUL).
    Conflict between rule 48 and token ASSIGN resolved as reduce (ASSIGN < MUL).
    Conflict between rule 48 and token BITWISEOR resolved as reduce (BITWISEOR < MUL).
    Conflict between rule 48 and token BITWISEXOR resolved as reduce (BITWISEXOR < MUL).
    Conflict between rule 48 and token BITWISEAND resolved as reduce (BITWISEAND < MUL).
    Conflict between rule 48 and token OR resolved as reduce (OR < MUL).
    Conflict between rule 48 and token AND resolved as reduce (AND < MUL).
    Conflict between rule 48 and token GE resolved as reduce (GE < MUL).
    Conflict between rule 48 and token GT resolved as reduce (GT < MUL).
    Conflict between rule 48 and token LE resolved as reduce (LE < MUL).
    Conflict between rule 48 and token LT resolved as reduce (LT < MUL).
    Conflict between rule 48 and token NE resolved as reduce (NE < MUL).
    Conflict between rule 48 and token EQ resolved as reduce (EQ < MUL).
    Conflict between rule 48 and token MINUS resolved as reduce (MINUS < MUL).
    Conflict between rule 48 and token PLUS resolved as reduce (PLUS < MUL).
    Conflict between rule 48 and token MOD resolved as reduce (%left MOD).
    Conflict between rule 48 and token DIV resolved as reduce (%left DIV).
    Conflict between rule 48 and token MUL resolved as reduce (%left MUL).


state 115

   16 ParameterList: ParameterList COMMA ParameterDeclaration .

    $default  reduce using rule 16 (ParameterList)


state 116

   37 Statement: RETURN Expr SEMI .

    $default  reduce using rule 37 (Statement)


state 117

   33 Statement: LBRACE ErrorRule RBRACE .

    $default  reduce using rule 33 (Statement)


state 118

   32 Statement: LBRACE ZEROPLUS2 RBRACE .

    $default  reduce using rule 32 (Statement)


state 119

   42 ZEROPLUS2: ZEROPLUS2 Statement .

    $default  reduce using rule 42 (ZEROPLUS2)


state 120

   36 Statement: WHILE LPAR Expr . RPAR Statement
   44 Expr: Expr . ASSIGN Expr
   45     | Expr . COMMA Expr
   46     | Expr . PLUS Expr
   47     | Expr . MINUS Expr
   48     | Expr . MUL Expr
   49     | Expr . DIV Expr
   50     | Expr . MOD Expr
   51     | Expr . OR Expr
   52     | Expr . AND Expr
   53     | Expr . BITWISEAND Expr
   54     | Expr . BITWISEOR Expr
   55     | Expr . BITWISEXOR Expr
   56     | Expr . EQ Expr
   57     | Expr . NE Expr
   58     | Expr . LE Expr
   59     | Expr . GE Expr
   60     | Expr . LT Expr
   61     | Expr . GT Expr

    COMMA       shift, and go to state 58
    ASSIGN      shift, and go to state 59
    BITWISEOR   shift, and go to state 60
    BITWISEXOR  shift, and go to state 61
    BITWISEAND  shift, and go to state 62
    OR          shift, and go to state 63
    AND         shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    LE          shift, and go to state 67
    LT          shift, and go to state 68
    NE          shift, and go to state 69
    EQ          shift, and go to state 70
    MINUS       shift, and go to state 71
    PLUS        shift, and go to state 72
    MOD         shift, and go to state 73
    DIV         shift, and go to state 74
    MUL         shift, and go to state 75
    RPAR        shift, and go to state 125


state 121

   34 Statement: IF LPAR Expr . RPAR Statement ELSE Statement
   35          | IF LPAR Expr . RPAR Statement
   44 Expr: Expr . ASSIGN Expr
   45     | Expr . COMMA Expr
   46     | Expr . PLUS Expr
   47     | Expr . MINUS Expr
   48     | Expr . MUL Expr
   49     | Expr . DIV Expr
   50     | Expr . MOD Expr
   51     | Expr . OR Expr
   52     | Expr . AND Expr
   53     | Expr . BITWISEAND Expr
   54     | Expr . BITWISEOR Expr
   55     | Expr . BITWISEXOR Expr
   56     | Expr . EQ Expr
   57     | Expr . NE Expr
   58     | Expr . LE Expr
   59     | Expr . GE Expr
   60     | Expr . LT Expr
   61     | Expr . GT Expr

    COMMA       shift, and go to state 58
    ASSIGN      shift, and go to state 59
    BITWISEOR   shift, and go to state 60
    BITWISEXOR  shift, and go to state 61
    BITWISEAND  shift, and go to state 62
    OR          shift, and go to state 63
    AND         shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    LE          shift, and go to state 67
    LT          shift, and go to state 68
    NE          shift, and go to state 69
    EQ          shift, and go to state 70
    MINUS       shift, and go to state 71
    PLUS        shift, and go to state 72
    MOD         shift, and go to state 73
    DIV         shift, and go to state 74
    MUL         shift, and go to state 75
    RPAR        shift, and go to state 126


state 122

   65 Expr: IDENTIFIER LPAR error RPAR .

    $default  reduce using rule 65 (Expr)


state 123

   44 Expr: . Expr ASSIGN Expr
   45     | . Expr COMMA Expr
   46     | . Expr PLUS Expr
   47     | . Expr MINUS Expr
   48     | . Expr MUL Expr
   49     | . Expr DIV Expr
   50     | . Expr MOD Expr
   51     | . Expr OR Expr
   52     | . Expr AND Expr
   53     | . Expr BITWISEAND Expr
   54     | . Expr BITWISEOR Expr
   55     | . Expr BITWISEXOR Expr
   56     | . Expr EQ Expr
   57     | . Expr NE Expr
   58     | . Expr LE Expr
   59     | . Expr GE Expr
   60     | . Expr LT Expr
   61     | . Expr GT Expr
   62     | . PLUS Expr
   63     | . MINUS Expr
   64     | . NOT Expr
   65     | . IDENTIFIER LPAR error RPAR
   66     | . IDENTIFIER LPAR RPAR
   67     | . IDENTIFIER LPAR ZEROPLUS3 RPAR
   68     | . IDENTIFIER
   69     | . NATURAL
   70     | . CHRLITS
   71     | . DECIMAL
   72     | . LPAR Expr RPAR
   73     | . LPAR error RPAR
   74 ZEROPLUS3: ZEROPLUS3 COMMA . Expr

    MINUS       shift, and go to state 27
    PLUS        shift, and go to state 28
    NOT         shift, and go to state 29
    LPAR        shift, and go to state 30
    CHRLITS     shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NATURAL     shift, and go to state 33
    DECIMAL     shift, and go to state 34

    Expr  go to state 127


state 124

   67 Expr: IDENTIFIER LPAR ZEROPLUS3 RPAR .

    $default  reduce using rule 67 (Expr)


state 125

   31 Statement: . OPTIONAL4 SEMI
   32          | . LBRACE ZEROPLUS2 RBRACE
   33          | . LBRACE ErrorRule RBRACE
   34          | . IF LPAR Expr RPAR Statement ELSE Statement
   35          | . IF LPAR Expr RPAR Statement
   36          | . WHILE LPAR Expr RPAR Statement
   36          | WHILE LPAR Expr RPAR . Statement
   37          | . RETURN Expr SEMI
   38          | . RETURN SEMI
   40 OPTIONAL4: . Expr
   41          | .  [SEMI]
   44 Expr: . Expr ASSIGN Expr
   45     | . Expr COMMA Expr
   46     | . Expr PLUS Expr
   47     | . Expr MINUS Expr
   48     | . Expr MUL Expr
   49     | . Expr DIV Expr
   50     | . Expr MOD Expr
   51     | . Expr OR Expr
   52     | . Expr AND Expr
   53     | . Expr BITWISEAND Expr
   54     | . Expr BITWISEOR Expr
   55     | . Expr BITWISEXOR Expr
   56     | . Expr EQ Expr
   57     | . Expr NE Expr
   58     | . Expr LE Expr
   59     | . Expr GE Expr
   60     | . Expr LT Expr
   61     | . Expr GT Expr
   62     | . PLUS Expr
   63     | . MINUS Expr
   64     | . NOT Expr
   65     | . IDENTIFIER LPAR error RPAR
   66     | . IDENTIFIER LPAR RPAR
   67     | . IDENTIFIER LPAR ZEROPLUS3 RPAR
   68     | . IDENTIFIER
   69     | . NATURAL
   70     | . CHRLITS
   71     | . DECIMAL
   72     | . LPAR Expr RPAR
   73     | . LPAR error RPAR

    MINUS       shift, and go to state 27
    PLUS        shift, and go to state 28
    NOT         shift, and go to state 29
    RETURN      shift, and go to state 39
    LBRACE      shift, and go to state 40
    LPAR        shift, and go to state 30
    WHILE       shift, and go to state 42
    IF          shift, and go to state 43
    CHRLITS     shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NATURAL     shift, and go to state 33
    DECIMAL     shift, and go to state 34

    $default  reduce using rule 41 (OPTIONAL4)

    Statement  go to state 128
    OPTIONAL4  go to state 48
    Expr       go to state 49


state 126

   31 Statement: . OPTIONAL4 SEMI
   32          | . LBRACE ZEROPLUS2 RBRACE
   33          | . LBRACE ErrorRule RBRACE
   34          | . IF LPAR Expr RPAR Statement ELSE Statement
   34          | IF LPAR Expr RPAR . Statement ELSE Statement
   35          | . IF LPAR Expr RPAR Statement
   35          | IF LPAR Expr RPAR . Statement
   36          | . WHILE LPAR Expr RPAR Statement
   37          | . RETURN Expr SEMI
   38          | . RETURN SEMI
   40 OPTIONAL4: . Expr
   41          | .  [SEMI]
   44 Expr: . Expr ASSIGN Expr
   45     | . Expr COMMA Expr
   46     | . Expr PLUS Expr
   47     | . Expr MINUS Expr
   48     | . Expr MUL Expr
   49     | . Expr DIV Expr
   50     | . Expr MOD Expr
   51     | . Expr OR Expr
   52     | . Expr AND Expr
   53     | . Expr BITWISEAND Expr
   54     | . Expr BITWISEOR Expr
   55     | . Expr BITWISEXOR Expr
   56     | . Expr EQ Expr
   57     | . Expr NE Expr
   58     | . Expr LE Expr
   59     | . Expr GE Expr
   60     | . Expr LT Expr
   61     | . Expr GT Expr
   62     | . PLUS Expr
   63     | . MINUS Expr
   64     | . NOT Expr
   65     | . IDENTIFIER LPAR error RPAR
   66     | . IDENTIFIER LPAR RPAR
   67     | . IDENTIFIER LPAR ZEROPLUS3 RPAR
   68     | . IDENTIFIER
   69     | . NATURAL
   70     | . CHRLITS
   71     | . DECIMAL
   72     | . LPAR Expr RPAR
   73     | . LPAR error RPAR

    MINUS       shift, and go to state 27
    PLUS        shift, and go to state 28
    NOT         shift, and go to state 29
    RETURN      shift, and go to state 39
    LBRACE      shift, and go to state 40
    LPAR        shift, and go to state 30
    WHILE       shift, and go to state 42
    IF          shift, and go to state 43
    CHRLITS     shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NATURAL     shift, and go to state 33
    DECIMAL     shift, and go to state 34

    $default  reduce using rule 41 (OPTIONAL4)

    Statement  go to state 129
    OPTIONAL4  go to state 48
    Expr       go to state 49


state 127

   44 Expr: Expr . ASSIGN Expr
   45     | Expr . COMMA Expr
   46     | Expr . PLUS Expr
   47     | Expr . MINUS Expr
   48     | Expr . MUL Expr
   49     | Expr . DIV Expr
   50     | Expr . MOD Expr
   51     | Expr . OR Expr
   52     | Expr . AND Expr
   53     | Expr . BITWISEAND Expr
   54     | Expr . BITWISEOR Expr
   55     | Expr . BITWISEXOR Expr
   56     | Expr . EQ Expr
   57     | Expr . NE Expr
   58     | Expr . LE Expr
   59     | Expr . GE Expr
   60     | Expr . LT Expr
   61     | Expr . GT Expr
   74 ZEROPLUS3: ZEROPLUS3 COMMA Expr .  [COMMA, RPAR]

    ASSIGN      shift, and go to state 59
    BITWISEOR   shift, and go to state 60
    BITWISEXOR  shift, and go to state 61
    BITWISEAND  shift, and go to state 62
    OR          shift, and go to state 63
    AND         shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    LE          shift, and go to state 67
    LT          shift, and go to state 68
    NE          shift, and go to state 69
    EQ          shift, and go to state 70
    MINUS       shift, and go to state 71
    PLUS        shift, and go to state 72
    MOD         shift, and go to state 73
    DIV         shift, and go to state 74
    MUL         shift, and go to state 75

    $default  reduce using rule 74 (ZEROPLUS3)

    Conflict between rule 74 and token COMMA resolved as reduce (COMMA < HIGHER).


state 128

   36 Statement: WHILE LPAR Expr RPAR Statement .

    $default  reduce using rule 36 (Statement)


state 129

   34 Statement: IF LPAR Expr RPAR Statement . ELSE Statement
   35          | IF LPAR Expr RPAR Statement .  [error, MINUS, PLUS, NOT, CHAR, INT, SHORT, DOUBLE, RETURN, VOID, SEMI, LBRACE, LPAR, RBRACE, WHILE, IF, CHRLITS, IDENTIFIER, NATURAL, DECIMAL]

    ELSE  shift, and go to state 130

    $default  reduce using rule 35 (Statement)

    Conflict between rule 35 and token ELSE resolved as shift (LOW < ELSE).


state 130

   31 Statement: . OPTIONAL4 SEMI
   32          | . LBRACE ZEROPLUS2 RBRACE
   33          | . LBRACE ErrorRule RBRACE
   34          | . IF LPAR Expr RPAR Statement ELSE Statement
   34          | IF LPAR Expr RPAR Statement ELSE . Statement
   35          | . IF LPAR Expr RPAR Statement
   36          | . WHILE LPAR Expr RPAR Statement
   37          | . RETURN Expr SEMI
   38          | . RETURN SEMI
   40 OPTIONAL4: . Expr
   41          | .  [SEMI]
   44 Expr: . Expr ASSIGN Expr
   45     | . Expr COMMA Expr
   46     | . Expr PLUS Expr
   47     | . Expr MINUS Expr
   48     | . Expr MUL Expr
   49     | . Expr DIV Expr
   50     | . Expr MOD Expr
   51     | . Expr OR Expr
   52     | . Expr AND Expr
   53     | . Expr BITWISEAND Expr
   54     | . Expr BITWISEOR Expr
   55     | . Expr BITWISEXOR Expr
   56     | . Expr EQ Expr
   57     | . Expr NE Expr
   58     | . Expr LE Expr
   59     | . Expr GE Expr
   60     | . Expr LT Expr
   61     | . Expr GT Expr
   62     | . PLUS Expr
   63     | . MINUS Expr
   64     | . NOT Expr
   65     | . IDENTIFIER LPAR error RPAR
   66     | . IDENTIFIER LPAR RPAR
   67     | . IDENTIFIER LPAR ZEROPLUS3 RPAR
   68     | . IDENTIFIER
   69     | . NATURAL
   70     | . CHRLITS
   71     | . DECIMAL
   72     | . LPAR Expr RPAR
   73     | . LPAR error RPAR

    MINUS       shift, and go to state 27
    PLUS        shift, and go to state 28
    NOT         shift, and go to state 29
    RETURN      shift, and go to state 39
    LBRACE      shift, and go to state 40
    LPAR        shift, and go to state 30
    WHILE       shift, and go to state 42
    IF          shift, and go to state 43
    CHRLITS     shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NATURAL     shift, and go to state 33
    DECIMAL     shift, and go to state 34

    $default  reduce using rule 41 (OPTIONAL4)

    Statement  go to state 131
    OPTIONAL4  go to state 48
    Expr       go to state 49


state 131

   34 Statement: IF LPAR Expr RPAR Statement ELSE Statement .

    $default  reduce using rule 34 (Statement)
